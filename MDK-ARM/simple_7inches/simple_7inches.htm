<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [simple_7inches\simple_7inches.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image simple_7inches\simple_7inches.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Wed Jul 28 09:55:19 2021
<BR><P>
<H3>Maximum Stack Usage =       6200 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; systemApp &rArr; Menu_CtCursor &rArr; Bor_CreatData &rArr; Bor_ModPindis &rArr; Bor_docur &rArr; Bor_doline &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[476]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[25]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">NMI_Handler</a><BR>
 <LI><a href="#[26]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">HardFault_Handler</a><BR>
 <LI><a href="#[27]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">MemManage_Handler</a><BR>
 <LI><a href="#[28]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28]">BusFault_Handler</a><BR>
 <LI><a href="#[29]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[29]">UsageFault_Handler</a><BR>
 <LI><a href="#[2a]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a]">SVC_Handler</a><BR>
 <LI><a href="#[2b]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2b]">DebugMon_Handler</a><BR>
 <LI><a href="#[2c]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">PendSV_Handler</a><BR>
 <LI><a href="#[40]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[40]">ADC_IRQHandler</a><BR>
 <LI><a href="#[1bc]">VS1003B_SoftReset</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1bd]">VS1003B_Init</a><BR>
 <LI><a href="#[272]">FS_DeleteIntFile</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[272]">FS_DeleteIntFile</a><BR>
 <LI><a href="#[276]">mf_dcopy</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[276]">mf_dcopy</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[40]">ADC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[28]">BusFault_Handler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[42]">CAN1_RX0_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[43]">CAN1_RX1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[44]">CAN1_SCE_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[41]">CAN1_TX_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[6e]">CAN2_RX0_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[6f]">CAN2_RX1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[70]">CAN2_SCE_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[6d]">CAN2_TX_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[7c]">DCMI_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[39]">DMA1_Stream0_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3a]">DMA1_Stream1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3b]">DMA1_Stream2_IRQHandler</a> from vs1003.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3c]">DMA1_Stream3_IRQHandler</a> from touch.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3d]">DMA1_Stream4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3e]">DMA1_Stream5_IRQHandler</a> from uart.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3f]">DMA1_Stream6_IRQHandler</a> from uart.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5d]">DMA1_Stream7_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[87]">DMA2D_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[66]">DMA2_Stream0_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[67]">DMA2_Stream1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[68]">DMA2_Stream2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[69]">DMA2_Stream3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[6a]">DMA2_Stream4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[72]">DMA2_Stream5_IRQHandler</a> from uart.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[73]">DMA2_Stream6_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[74]">DMA2_Stream7_IRQHandler</a> from uart.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2b]">DebugMon_Handler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[6b]">ETH_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[6c]">ETH_WKUP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[34]">EXTI0_IRQHandler</a> from utility.o(i.EXTI0_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[56]">EXTI15_10_IRQHandler</a> from utility.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[35]">EXTI1_IRQHandler</a> from utility.o(i.EXTI1_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[36]">EXTI2_IRQHandler</a> from utility.o(i.EXTI2_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[37]">EXTI3_IRQHandler</a> from utility.o(i.EXTI3_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[38]">EXTI4_IRQHandler</a> from utility.o(i.EXTI4_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[45]">EXTI9_5_IRQHandler</a> from utility.o(i.EXTI9_5_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[32]">FLASH_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5e]">FMC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[7e]">FPU_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[7d]">HASH_RNG_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[26]">HardFault_Handler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4e]">I2C1_ER_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4d]">I2C1_EV_IRQHandler</a> from i2c.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[50]">I2C2_ER_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4f]">I2C2_EV_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[77]">I2C3_ER_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[76]">I2C3_EV_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[86]">LTDC_ER_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[85]">LTDC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[27]">MemManage_Handler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[25]">NMI_Handler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[71]">OTG_FS_IRQHandler</a> from usbh_usr.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[58]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[79]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[78]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[7b]">OTG_HS_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[7a]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2f]">PVD_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2c]">PendSV_Handler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[33]">RCC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[57]">RTC_Alarm_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[31]">RTC_WKUP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[24]">Reset_Handler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[84]">SAI1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5f]">SDIO_IRQHandler</a> from sdio.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[51]">SPI1_IRQHandler</a> from spi.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[52]">SPI2_IRQHandler</a> from spi.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[61]">SPI3_IRQHandler</a> from spi.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[81]">SPI4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[82]">SPI5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[83]">SPI6_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2a]">SVC_Handler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2d]">SysTick_Handler</a> from utility.o(i.SysTick_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[88]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f429xx.o(.text)
 <LI><a href="#[30]">TAMP_STAMP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[46]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[49]">TIM1_CC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[48]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[47]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4a]">TIM2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4b]">TIM3_IRQHandler</a> from aviplayer.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4c]">TIM4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[60]">TIM5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[64]">TIM6_DAC_IRQHandler</a> from utility.o(i.TIM6_DAC_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[65]">TIM7_IRQHandler</a> from usb_bsp.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[59]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5c]">TIM8_CC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5b]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5a]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[62]">UART4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[63]">UART5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[7f]">UART7_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[80]">UART8_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[53]">USART1_IRQHandler</a> from uart.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[54]">USART2_IRQHandler</a> from uart.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[55]">USART3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[75]">USART6_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[a]">USBH_Connected</a> from usbh_core.o(.text) referenced 2 times from usbh_core.o(.data)
 <LI><a href="#[b]">USBH_Disconnected</a> from usbh_core.o(.text) referenced 2 times from usbh_core.o(.data)
 <LI><a href="#[10]">USBH_MSC_ClassRequest</a> from usbh_msc_core.o(.text) referenced 2 times from usbh_msc_core.o(.data)
 <LI><a href="#[11]">USBH_MSC_Handle</a> from usbh_msc_core.o(.text) referenced 2 times from usbh_msc_core.o(.data)
 <LI><a href="#[f]">USBH_MSC_InterfaceDeInit</a> from usbh_msc_core.o(.text) referenced 2 times from usbh_msc_core.o(.data)
 <LI><a href="#[e]">USBH_MSC_InterfaceInit</a> from usbh_msc_core.o(.text) referenced 2 times from usbh_msc_core.o(.data)
 <LI><a href="#[d]">USBH_PortDisabled</a> from usbh_core.o(.text) referenced 2 times from usbh_core.o(.data)
 <LI><a href="#[c]">USBH_PortEnabled</a> from usbh_core.o(.text) referenced 2 times from usbh_core.o(.data)
 <LI><a href="#[9]">USBH_SOF</a> from usbh_core.o(.text) referenced 2 times from usbh_core.o(.data)
 <LI><a href="#[1b]">USBH_USR_Configuration_DescAvailable</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[13]">USBH_USR_DeInit</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[1a]">USBH_USR_DeviceAddressAssigned</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[14]">USBH_USR_DeviceAttached</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[16]">USBH_USR_DeviceDisconnected</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[22]">USBH_USR_DeviceNotSupported</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[18]">USBH_USR_DeviceSpeedDetected</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[19]">USBH_USR_Device_DescAvailable</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[1f]">USBH_USR_EnumerationDone</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[12]">USBH_USR_Init</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[21]">USBH_USR_MSC_Application</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[1c]">USBH_USR_Manufacturer_String</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[17]">USBH_USR_OverCurrentDetected</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[1d]">USBH_USR_Product_String</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[15]">USBH_USR_ResetDevice</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[1e]">USBH_USR_SerialNum_String</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[23]">USBH_USR_UnrecoveredError</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[20]">USBH_USR_UserInput</a> from usbh_usr.o(.text) referenced 2 times from usbh_usr.o(.data)
 <LI><a href="#[29]">UsageFault_Handler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2e]">WWDG_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[11a]">__main</a> from __main.o(!!!main) referenced from startup_stm32f429xx.o(.text)
 <LI><a href="#[119]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[115]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[114]">_sbackspace</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[117]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[113]">_sgetc</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[112]">_sputc</a> from _sputc.o(.text) referenced from noretval__2sprintf.o(.text)
 <LI><a href="#[a9]">access_virt_barray</a> from jmemmgr.o(.text) referenced from jmemmgr.o(.text)
 <LI><a href="#[a8]">access_virt_sarray</a> from jmemmgr.o(.text) referenced from jmemmgr.o(.text)
 <LI><a href="#[a4]">alloc_barray</a> from jmemmgr.o(.text) referenced from jmemmgr.o(.text)
 <LI><a href="#[a2]">alloc_large</a> from jmemmgr.o(.text) referenced from jmemmgr.o(.text)
 <LI><a href="#[a3]">alloc_sarray</a> from jmemmgr.o(.text) referenced from jmemmgr.o(.text)
 <LI><a href="#[a1]">alloc_small</a> from jmemmgr.o(.text) referenced from jmemmgr.o(.text)
 <LI><a href="#[103]">color_quantize</a> from jquant1.o(.text) referenced from jquant1.o(.text)
 <LI><a href="#[104]">color_quantize3</a> from jquant1.o(.text) referenced from jquant1.o(.text)
 <LI><a href="#[b7]">consume_data</a> from jdcoefct.o(.text) referenced from jdcoefct.o(.text)
 <LI><a href="#[9b]">consume_markers</a> from jdinput.o(.text) referenced from jdinput.o(.text)
 <LI><a href="#[b0]">decode_mcu</a> from jdarith.o(.text) referenced 2 times from jdarith.o(.text)
 <LI><a href="#[ad]">decode_mcu_AC_first</a> from jdarith.o(.text) referenced 2 times from jdarith.o(.text)
 <LI><a href="#[ac]">decode_mcu_AC_refine</a> from jdarith.o(.text) referenced 2 times from jdarith.o(.text)
 <LI><a href="#[ae]">decode_mcu_DC_first</a> from jdarith.o(.text) referenced 2 times from jdarith.o(.text)
 <LI><a href="#[af]">decode_mcu_DC_refine</a> from jdarith.o(.text) referenced 2 times from jdarith.o(.text)
 <LI><a href="#[eb]">decode_mcu_sub</a> from jdhuff.o(.text) referenced from jdhuff.o(.text)
 <LI><a href="#[b4]">decompress_data</a> from jdcoefct.o(.text) referenced from jdcoefct.o(.text)
 <LI><a href="#[b9]">decompress_onepass</a> from jdcoefct.o(.text) referenced from jdcoefct.o(.text)
 <LI><a href="#[b3]">decompress_smooth_data</a> from jdcoefct.o(.text) referenced from jdcoefct.o(.text)
 <LI><a href="#[b8]">dummy_consume_data</a> from jdcoefct.o(.text) referenced from jdcoefct.o(.text)
 <LI><a href="#[97]">emit_message</a> from jerror.o(.text) referenced from jerror.o(.text)
 <LI><a href="#[96]">error_exit</a> from jerror.o(.text) referenced from jerror.o(.text)
 <LI><a href="#[8c]">fill_input_buffer</a> from mjpeg.o(.text) referenced from mjpeg.o(.text)
 <LI><a href="#[9e]">finish_input_pass</a> from jdinput.o(.text) referenced from jdinput.o(.text)
 <LI><a href="#[a0]">finish_output_pass</a> from jdmaster.o(.text) referenced from jdmaster.o(.text)
 <LI><a href="#[b2]">finish_pass</a> from jdarith.o(.text) referenced from jdarith.o(.text)
 <LI><a href="#[10c]">finish_pass1</a> from jquant2.o(.text) referenced from jquant2.o(.text)
 <LI><a href="#[10e]">finish_pass2</a> from jquant2.o(.text) referenced from jquant2.o(.text)
 <LI><a href="#[109]">finish_pass_1_quant</a> from jquant1.o(.text) referenced from jquant1.o(.text)
 <LI><a href="#[ee]">finish_pass_huff</a> from jdhuff.o(.text) referenced from jdhuff.o(.text)
 <LI><a href="#[99]">format_message</a> from jerror.o(.text) referenced from jerror.o(.text)
 <LI><a href="#[116]">fputc</a> from sys.o(.text) referenced from _printf_char_file.o(.text)
 <LI><a href="#[aa]">free_pool</a> from jmemmgr.o(.text) referenced from jmemmgr.o(.text)
 <LI><a href="#[fe]">fullsize_upsample</a> from jdsample.o(.text) referenced from jdsample.o(.text)
 <LI><a href="#[94]">get_interesting_appn</a> from jdmarker.o(.text) referenced from jdmarker.o(.text)
 <LI><a href="#[c2]">gray_rgb_convert</a> from jdcolor.o(.text) referenced from jdcolor.o(.text)
 <LI><a href="#[be]">grayscale_convert</a> from jdcolor.o(.text) referenced from jdcolor.o(.text)
 <LI><a href="#[f5]">h2v1_merged_upsample</a> from jdmerge.o(.text) referenced from jdmerge.o(.text)
 <LI><a href="#[100]">h2v1_upsample</a> from jdsample.o(.text) referenced from jdsample.o(.text)
 <LI><a href="#[f7]">h2v2_merged_upsample</a> from jdmerge.o(.text) referenced from jdmerge.o(.text)
 <LI><a href="#[101]">h2v2_upsample</a> from jdsample.o(.text) referenced from jdsample.o(.text)
 <LI><a href="#[8b]">init_source</a> from mjpeg.o(.text) referenced from mjpeg.o(.text)
 <LI><a href="#[102]">int_upsample</a> from jdsample.o(.text) referenced from jdsample.o(.text)
 <LI><a href="#[118]">isspace</a> from isspace.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[cc]">jpeg_idct_10x10</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[d6]">jpeg_idct_10x5</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[cd]">jpeg_idct_11x11</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[ce]">jpeg_idct_12x12</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[d5]">jpeg_idct_12x6</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[cf]">jpeg_idct_13x13</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[d0]">jpeg_idct_14x14</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[d4]">jpeg_idct_14x7</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[d1]">jpeg_idct_15x15</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[d2]">jpeg_idct_16x16</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[d3]">jpeg_idct_16x8</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[c4]">jpeg_idct_1x1</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[e2]">jpeg_idct_1x2</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[da]">jpeg_idct_2x1</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[c5]">jpeg_idct_2x2</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[e1]">jpeg_idct_2x4</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[c6]">jpeg_idct_3x3</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[e0]">jpeg_idct_3x6</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[d9]">jpeg_idct_4x2</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[c7]">jpeg_idct_4x4</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[df]">jpeg_idct_4x8</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[de]">jpeg_idct_5x10</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[c8]">jpeg_idct_5x5</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[dd]">jpeg_idct_6x12</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[d8]">jpeg_idct_6x3</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[c9]">jpeg_idct_6x6</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[dc]">jpeg_idct_7x14</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[ca]">jpeg_idct_7x7</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[db]">jpeg_idct_8x16</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[d7]">jpeg_idct_8x4</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[cb]">jpeg_idct_9x9</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[e5]">jpeg_idct_float</a> from jidctflt.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[e4]">jpeg_idct_ifast</a> from jidctfst.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[e3]">jpeg_idct_islow</a> from jidctint.o(.text) referenced from jddctmgr.o(.text)
 <LI><a href="#[8e]">jpeg_resync_to_restart</a> from jdmarker.o(.text) referenced from mjpeg.o(.text)
 <LI><a href="#[f4]">merged_1v_upsample</a> from jdmerge.o(.text) referenced from jdmerge.o(.text)
 <LI><a href="#[f6]">merged_2v_upsample</a> from jdmerge.o(.text) referenced from jdmerge.o(.text)
 <LI><a href="#[8a]">my_error_exit</a> from mjpeg.o(.text) referenced from mjpeg.o(.text)
 <LI><a href="#[10a]">new_color_map_1_quant</a> from jquant1.o(.text) referenced from jquant1.o(.text)
 <LI><a href="#[111]">new_color_map_2_quant</a> from jquant2.o(.text) referenced from jquant2.o(.text)
 <LI><a href="#[ff]">noop_upsample</a> from jdsample.o(.text) referenced from jdsample.o(.text)
 <LI><a href="#[bd]">null_convert</a> from jdcolor.o(.text) referenced from jdcolor.o(.text)
 <LI><a href="#[98]">output_message</a> from jerror.o(.text) referenced from jerror.o(.text)
 <LI><a href="#[10f]">pass2_fs_dither</a> from jquant2.o(.text) referenced from jquant2.o(.text)
 <LI><a href="#[10d]">pass2_no_dither</a> from jquant2.o(.text) referenced from jquant2.o(.text)
 <LI><a href="#[f8]">post_process_1pass</a> from jdpostct.o(.text) referenced from jdpostct.o(.text)
 <LI><a href="#[fa]">post_process_2pass</a> from jdpostct.o(.text) referenced from jdpostct.o(.text)
 <LI><a href="#[f9]">post_process_prepass</a> from jdpostct.o(.text) referenced from jdpostct.o(.text)
 <LI><a href="#[9f]">prepare_for_output_pass</a> from jdmaster.o(.text) referenced from jdmaster.o(.text)
 <LI><a href="#[10b]">prescan_quantize</a> from jquant2.o(.text) referenced from jquant2.o(.text)
 <LI><a href="#[ef]">process_data_context_main</a> from jdmainct.o(.text) referenced from jdmainct.o(.text)
 <LI><a href="#[f1]">process_data_crank_post</a> from jdmainct.o(.text) referenced from jdmainct.o(.text)
 <LI><a href="#[f0]">process_data_simple_main</a> from jdmainct.o(.text) referenced from jdmainct.o(.text)
 <LI><a href="#[106]">quantize3_ord_dither</a> from jquant1.o(.text) referenced from jquant1.o(.text)
 <LI><a href="#[107]">quantize_fs_dither</a> from jquant1.o(.text) referenced from jquant1.o(.text)
 <LI><a href="#[105]">quantize_ord_dither</a> from jquant1.o(.text) referenced from jquant1.o(.text)
 <LI><a href="#[91]">read_markers</a> from jdmarker.o(.text) referenced from jdmarker.o(.text)
 <LI><a href="#[92]">read_restart_marker</a> from jdmarker.o(.text) referenced from jdmarker.o(.text)
 <LI><a href="#[a7]">realize_virt_arrays</a> from jmemmgr.o(.text) referenced from jmemmgr.o(.text)
 <LI><a href="#[a6]">request_virt_barray</a> from jmemmgr.o(.text) referenced from jmemmgr.o(.text)
 <LI><a href="#[a5]">request_virt_sarray</a> from jmemmgr.o(.text) referenced from jmemmgr.o(.text)
 <LI><a href="#[9a]">reset_error_mgr</a> from jerror.o(.text) referenced from jerror.o(.text)
 <LI><a href="#[9c]">reset_input_controller</a> from jdinput.o(.text) referenced from jdinput.o(.text)
 <LI><a href="#[90]">reset_marker_reader</a> from jdmarker.o(.text) referenced from jdmarker.o(.text)
 <LI><a href="#[c0]">rgb1_gray_convert</a> from jdcolor.o(.text) referenced from jdcolor.o(.text)
 <LI><a href="#[bc]">rgb1_rgb_convert</a> from jdcolor.o(.text) referenced from jdcolor.o(.text)
 <LI><a href="#[bb]">rgb_convert</a> from jdcolor.o(.text) referenced from jdcolor.o(.text)
 <LI><a href="#[bf]">rgb_gray_convert</a> from jdcolor.o(.text) referenced from jdcolor.o(.text)
 <LI><a href="#[95]">save_marker</a> from jdmarker.o(.text) referenced from jdmarker.o(.text)
 <LI><a href="#[ab]">self_destruct</a> from jmemmgr.o(.text) referenced from jmemmgr.o(.text)
 <LI><a href="#[fd]">sep_upsample</a> from jdsample.o(.text) referenced from jdsample.o(.text)
 <LI><a href="#[8d]">skip_input_data</a> from mjpeg.o(.text) referenced from mjpeg.o(.text)
 <LI><a href="#[93]">skip_variable</a> from jdmarker.o(.text) referenced from jdmarker.o(.text)
 <LI><a href="#[9d]">start_input_pass</a> from jdinput.o(.text) referenced 2 times from jdinput.o(.text)
 <LI><a href="#[b6]">start_output_pass</a> from jdcoefct.o(.text) referenced from jdcoefct.o(.text)
 <LI><a href="#[b1]">start_pass</a> from jdarith.o(.text) referenced 2 times from jdarith.o(.text)
 <LI><a href="#[108]">start_pass_1_quant</a> from jquant1.o(.text) referenced from jquant1.o(.text)
 <LI><a href="#[110]">start_pass_2_quant</a> from jquant2.o(.text) referenced from jquant2.o(.text)
 <LI><a href="#[ba]">start_pass_dcolor</a> from jdcolor.o(.text) referenced from jdcolor.o(.text)
 <LI><a href="#[fb]">start_pass_dpost</a> from jdpostct.o(.text) referenced from jdpostct.o(.text)
 <LI><a href="#[ed]">start_pass_huff_decoder</a> from jdhuff.o(.text) referenced from jdhuff.o(.text)
 <LI><a href="#[f2]">start_pass_main</a> from jdmainct.o(.text) referenced from jdmainct.o(.text)
 <LI><a href="#[f3]">start_pass_merged_upsample</a> from jdmerge.o(.text) referenced from jdmerge.o(.text)
 <LI><a href="#[fc]">start_pass_upsample</a> from jdsample.o(.text) referenced from jdsample.o(.text)
 <LI><a href="#[8f]">term_source</a> from mjpeg.o(.text) referenced from mjpeg.o(.text)
 <LI><a href="#[c1]">ycc_rgb_convert</a> from jdcolor.o(.text) referenced from jdcolor.o(.text)
 <LI><a href="#[c3]">ycck_cmyk_convert</a> from jdcolor.o(.text) referenced from jdcolor.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[11a]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[11b]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[11d]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[5e0]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[5e1]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[5e2]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[5e3]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[5e4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[11e]"></a>_printf_n</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_n.o(.ARM.Collect$$_printf_percent$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount
</UL>

<P><STRONG><a name="[45e]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[120]"></a>_printf_p</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_p.o(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_p &rArr; _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
</UL>

<P><STRONG><a name="[122]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[124]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[125]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[126]"></a>_printf_o</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_o &rArr; _printf_int_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[128]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[5e5]"></a>_printf_l</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_l.o(.ARM.Collect$$_printf_percent$$00000012))

<P><STRONG><a name="[12a]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[12c]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[12e]"></a>_printf_lc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[5e6]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[13c]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[130]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[132]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[5e7]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[5e8]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[134]"></a>__rt_lib_init_rand_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_rand_2 &rArr; _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[5e9]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[136]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[5ea]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[5eb]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[138]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[5ec]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[5ed]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[5ee]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[5ef]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[5f0]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[5f1]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[5f2]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[5f3]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[5f4]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[5f5]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[5f6]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[5f7]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[5f8]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[5f9]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[5fa]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[141]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[5fb]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[5fc]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[5fd]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[5fe]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[5ff]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[600]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[601]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[602]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[11c]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[603]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[139]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[13b]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[604]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[13d]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 6200 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; systemApp &rArr; Menu_CtCursor &rArr; Bor_CreatData &rArr; Bor_ModPindis &rArr; Bor_docur &rArr; Bor_doline &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[605]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[477]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[140]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[606]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[142]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[1e8]"></a>MSR_MSP</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sys.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_dispprogram
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update1_dispprogram
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[226]"></a>rand</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, rand.o(.emb_text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460MatchID
</UL>

<P><STRONG><a name="[24]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[607]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.emb_text), UNUSED)

<P><STRONG><a name="[25]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>LTDC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[476]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f429xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[144]"></a>disk_initialize</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, usbh_msc_fatfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = disk_initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[3a6]"></a>disk_status</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usbh_msc_fatfs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[146]"></a>disk_read</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, usbh_msc_fatfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = disk_read &rArr; USBH_UDISK_Read &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_UDISK_Read
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadSingleBlock
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadDisk
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[14a]"></a>disk_write</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, usbh_msc_fatfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_UDISK_Write
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteSingleBlock
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteDisk
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[14f]"></a>disk_ioctl</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, usbh_msc_fatfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = disk_ioctl &rArr; __aeabi_ldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[151]"></a>UART1_Init</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UART1_Init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[153]"></a>UART2_Init</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UART2_Init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[154]"></a>UART1_SendByte</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchParaOutPut
</UL>

<P><STRONG><a name="[155]"></a>UART1_ISendBuf</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>

<P><STRONG><a name="[156]"></a>UART1_DMASendBuf</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>

<P><STRONG><a name="[157]"></a>UART2_SendByte</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>

<P><STRONG><a name="[158]"></a>UART2_ISendBuf</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>

<P><STRONG><a name="[159]"></a>UART2_DMASendBuf</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART2_DMASendBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_DS
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_DS
</UL>

<P><STRONG><a name="[53]"></a>USART1_IRQHandler</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>USART2_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2_Stream5_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[597]"></a>CRC16</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_rsd
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_DS
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_DS
</UL>

<P><STRONG><a name="[15a]"></a>Fsmc_Init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fsmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Fsmc_Init &rArr; Check_SST_39VF160
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_SST_39VF160
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[15d]"></a>SDRAM_Send_Cmd</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, fsmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SDRAM_Send_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[15c]"></a>SDRAM_Init</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, fsmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SDRAM_Init &rArr; SDRAM_Send_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Send_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[15b]"></a>Check_SST_39VF160</STRONG> (Thumb, 182 bytes, Stack size 20 bytes, s39vf160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Check_SST_39VF160
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fsmc_Init
</UL>

<P><STRONG><a name="[608]"></a>SST39VFXX_CheckID</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, s39vf160.o(.text), UNUSED)

<P><STRONG><a name="[160]"></a>Delay_150_Nano_Seconds</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, s39vf160.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_One_Block
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_One_Sector
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_One_Block
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_One_Sector
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_Entire_Chip
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFI_Query
</UL>

<P><STRONG><a name="[15f]"></a>CFI_Query</STRONG> (Thumb, 116 bytes, Stack size 20 bytes, s39vf160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_150_Nano_Seconds
</UL>

<P><STRONG><a name="[161]"></a>Check_Toggle_Ready</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, s39vf160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_One_Block
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_One_Sector
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_One_Word1
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_One_Word
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_One_Block
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_One_Sector
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_Entire_Chip
</UL>

<P><STRONG><a name="[162]"></a>Erase_Entire_Chip</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, s39vf160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Toggle_Ready
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_150_Nano_Seconds
</UL>

<P><STRONG><a name="[163]"></a>Erase_One_Sector</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, s39vf160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Toggle_Ready
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_150_Nano_Seconds
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_One_Sector
</UL>

<P><STRONG><a name="[164]"></a>Erase_One_Block</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, s39vf160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Toggle_Ready
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_150_Nano_Seconds
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_One_Block
</UL>

<P><STRONG><a name="[609]"></a>FlashCheck_Entire_Chip</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, s39vf160.o(.text), UNUSED)

<P><STRONG><a name="[165]"></a>Program_One_Word</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, s39vf160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Toggle_Ready
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST39VFXX_Write
</UL>

<P><STRONG><a name="[166]"></a>Program_One_Word1</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, s39vf160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Toggle_Ready
</UL>

<P><STRONG><a name="[167]"></a>Program_One_Sector</STRONG> (Thumb, 206 bytes, Stack size 40 bytes, s39vf160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_One_Sector
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Toggle_Ready
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_150_Nano_Seconds
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST39VFXX_Write
</UL>

<P><STRONG><a name="[168]"></a>Program_One_Block</STRONG> (Thumb, 220 bytes, Stack size 40 bytes, s39vf160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_One_Block
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Toggle_Ready
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_150_Nano_Seconds
</UL>

<P><STRONG><a name="[169]"></a>Read_One_Word</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, s39vf160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST39VFXX_Read
</UL>

<P><STRONG><a name="[16a]"></a>Read_One_Sector</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, s39vf160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST39VFXX_Write
</UL>

<P><STRONG><a name="[16b]"></a>SST39VFXX_Write</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, s39vf160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_One_Sector
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_One_Sector
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_One_Word
</UL>

<P><STRONG><a name="[16c]"></a>SST39VFXX_Read</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, s39vf160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_One_Word
</UL>

<P><STRONG><a name="[60a]"></a>Check_Data_Polling</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, s39vf160.o(.text), UNUSED)

<P><STRONG><a name="[60b]"></a>Delay_25_Milli_Seconds</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, s39vf160.o(.text), UNUSED)

<P><STRONG><a name="[60c]"></a>Delay_100_Milli_Seconds</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, s39vf160.o(.text), UNUSED)

<P><STRONG><a name="[60d]"></a>Delay_20_Micro_Seconds</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, s39vf160.o(.text), UNUSED)

<P><STRONG><a name="[60e]"></a>LTDC_Select_Layer</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ltdc.o(.text), UNUSED)

<P><STRONG><a name="[16e]"></a>LTDC_Layer_Switch</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, ltdc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Layer_Window_Config
</UL>

<P><STRONG><a name="[16d]"></a>LTDC_Layer_Window_Config</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, ltdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LTDC_Layer_Window_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Layer_Switch
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Init
</UL>

<P><STRONG><a name="[171]"></a>LTDC_Layer_Parameter_Config</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, ltdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTDC_Layer_Parameter_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Init
</UL>

<P><STRONG><a name="[170]"></a>LTDC_Clk_Set</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, ltdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTDC_Clk_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Init
</UL>

<P><STRONG><a name="[16f]"></a>LTDC_Init</STRONG> (Thumb, 304 bytes, Stack size 52 bytes, ltdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LTDC_Init &rArr; LTDC_Clk_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Clk_Set
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Layer_Parameter_Config
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Layer_Window_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[183]"></a>SD_SetDeviceMode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sdio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[17d]"></a>SDIO_Clock_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sdio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[174]"></a>CmdResp1Error</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, sdio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlocks
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlocks
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[173]"></a>SDIO_Send_Cmd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, sdio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlocks
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCardProgramming
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlocks
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[175]"></a>SDIO_Send_Data_Cfg</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDIO_Send_Data_Cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlocks
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlocks
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[172]"></a>FindSCR</STRONG> (Thumb, 218 bytes, Stack size 28 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Send_Data_Cfg
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Send_Cmd
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
</UL>

<P><STRONG><a name="[176]"></a>SDEnWideBus</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Send_Cmd
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_EnableWideBusOperation
</UL>

<P><STRONG><a name="[177]"></a>SD_EnableWideBusOperation</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[178]"></a>SD_SelectDeselect</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SD_SelectDeselect
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Send_Cmd
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[182]"></a>SD_GetCardInfo</STRONG> (Thumb, 564 bytes, Stack size 32 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SD_GetCardInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[17a]"></a>CmdResp2Error</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CmdResp2Error
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
</UL>

<P><STRONG><a name="[17b]"></a>CmdResp6Error</STRONG> (Thumb, 112 bytes, Stack size 12 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CmdResp6Error
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
</UL>

<P><STRONG><a name="[179]"></a>SD_InitializeCards</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SD_InitializeCards &rArr; CmdResp6Error
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp6Error
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp2Error
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Send_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[180]"></a>CmdResp3Error</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, sdio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[17f]"></a>CmdResp7Error</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CmdResp7Error
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[17e]"></a>CmdError</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, sdio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[17c]"></a>SD_PowerON</STRONG> (Thumb, 294 bytes, Stack size 40 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SD_PowerON &rArr; CmdResp7Error
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdError
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp7Error
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp3Error
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Send_Cmd
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Clock_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[181]"></a>SD_Init</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_USR_MSC_FATFSINIT
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCardInfo
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_EnableWideBusOperation
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Clock_Set
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SetDeviceMode
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlocks
</UL>

<P><STRONG><a name="[186]"></a>SD_PowerOFF</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, sdio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReSet
</UL>

<P><STRONG><a name="[185]"></a>SD_ReSet</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SD_ReSet &rArr; SDIO_USR_MSC_FATFSRESET &rArr; f_mount
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_USR_MSC_FATFSRESET
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerOFF
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[18b]"></a>SD_DMA_Config</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SD_DMA_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlocks
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlocks
</UL>

<P><STRONG><a name="[188]"></a>SD_ReadBlocks</STRONG> (Thumb, 444 bytes, Stack size 56 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SD_ReadBlocks &rArr; SD_DMA_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INTX_ENABLE
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INTX_DISABLE
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMA_Config
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Send_Data_Cfg
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Send_Cmd
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadDisk
</UL>

<P><STRONG><a name="[18c]"></a>IsCardProgramming</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IsCardProgramming
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Send_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlocks
</UL>

<P><STRONG><a name="[18d]"></a>SD_WriteBlocks</STRONG> (Thumb, 736 bytes, Stack size 40 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INTX_ENABLE
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INTX_DISABLE
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCardProgramming
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMA_Config
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Send_Data_Cfg
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Send_Cmd
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteDisk
</UL>

<P><STRONG><a name="[18e]"></a>SD_ProcessIRQSrc</STRONG> (Thumb, 210 bytes, Stack size 20 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SD_ProcessIRQSrc
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Send_Cmd
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_IRQHandler
</UL>

<P><STRONG><a name="[5f]"></a>SDIO_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SDIO_IRQHandler &rArr; SD_ProcessIRQSrc
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[18f]"></a>SD_SendStatus</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, sdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Send_Cmd
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetState
</UL>

<P><STRONG><a name="[190]"></a>SD_GetState</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
</UL>

<P><STRONG><a name="[148]"></a>SD_ReadDisk</STRONG> (Thumb, 100 bytes, Stack size 48 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SD_ReadDisk &rArr; SD_ReadBlocks &rArr; SD_DMA_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlocks
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[14d]"></a>SD_WriteDisk</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, sdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlocks
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[60f]"></a>show_sdcard_info</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sdio.o(.text), UNUSED)

<P><STRONG><a name="[569]"></a>SPI1_Init</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[5c5]"></a>SPI2_Init</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI2_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[5c9]"></a>SPI3_Init</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI3_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[1b0]"></a>SPI1_SetSpeed</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TF_Init
</UL>

<P><STRONG><a name="[610]"></a>SPI2_SetSpeed</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, spi.o(.text), UNUSED)

<P><STRONG><a name="[1bf]"></a>SPI3_SetSpeed</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Init
</UL>

<P><STRONG><a name="[51]"></a>SPI1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, spi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>SPI2_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, spi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>SPI3_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, spi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[192]"></a>SPI1_ReadWriteByte</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TF_Init
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlock
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlock
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReceiveData
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitReady
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand_NoDeassert
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WAKEUP
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_PowerDown
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Block64K
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Block32K
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Chip
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Page
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Disable
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Enable
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_SR
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadID
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadSR
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteSingleBlock
</UL>

<P><STRONG><a name="[193]"></a>SPI2_ReadWriteByte</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>

<P><STRONG><a name="[194]"></a>SPI3_ReadWriteByte</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI3_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_SimTestChg
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_SimTest
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_ReadCMD
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_WriteCMD
</UL>

<P><STRONG><a name="[1a8]"></a>SPI1_DMAR_Config</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI1_DMAR_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
</UL>

<P><STRONG><a name="[19d]"></a>SPI1_DMATR_Config</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Page
</UL>

<P><STRONG><a name="[19e]"></a>SPI1_DMAT_Config</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI1_DMAT_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Page
</UL>

<P><STRONG><a name="[1ec]"></a>SPI2_DMAR_Config</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_TchData
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream3_IRQHandler
</UL>

<P><STRONG><a name="[611]"></a>SPI2_DMATR_Config</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, spi.o(.text), UNUSED)

<P><STRONG><a name="[1ed]"></a>SPI2_DMAT_Config</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_TchData
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream3_IRQHandler
</UL>

<P><STRONG><a name="[612]"></a>SPI3_DMAR_Config</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, spi.o(.text), UNUSED)

<P><STRONG><a name="[1c3]"></a>SPI3_DMATR_Config</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_WriteDAT
</UL>

<P><STRONG><a name="[1c4]"></a>SPI3_DMAT_Config</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_WriteDAT
</UL>

<P><STRONG><a name="[195]"></a>W25QXX_ReadSR</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, w25qxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = W25QXX_ReadSR &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Wait_Busy
</UL>

<P><STRONG><a name="[196]"></a>W25QXX_ReadID</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, w25qxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = W25QXX_ReadID &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
</UL>

<P><STRONG><a name="[197]"></a>W25QXX_Init</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, w25qxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = W25QXX_Init &rArr; W25QXX_ReadID &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadID
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadSR
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[613]"></a>W25QXX_CheckID</STRONG> (Thumb, 96 bytes, Stack size 20 bytes, w25qxx.o(.text), UNUSED)

<P><STRONG><a name="[198]"></a>W25QXX_Write_SR</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>

<P><STRONG><a name="[199]"></a>W25QXX_Write_Enable</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, w25qxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = W25QXX_Write_Enable &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Block64K
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Block32K
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Chip
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Page
</UL>

<P><STRONG><a name="[19a]"></a>W25QXX_Write_Disable</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>

<P><STRONG><a name="[19b]"></a>W25QXX_Wait_Busy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, w25qxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadSR
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Block64K
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Block32K
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Chip
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Page
</UL>

<P><STRONG><a name="[19c]"></a>W25QXX_Write_Page</STRONG> (Thumb, 624 bytes, Stack size 40 bytes, w25qxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Wait_Busy
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Enable
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_DMAT_Config
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_DMATR_Config
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_NoCheck
</UL>

<P><STRONG><a name="[19f]"></a>W25QXX_Write_NoCheck</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, w25qxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Page
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_One_Sector
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
</UL>

<P><STRONG><a name="[1a0]"></a>W25QXX_Erase_Chip</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Wait_Busy
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Enable
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3toflash
</UL>

<P><STRONG><a name="[1a1]"></a>W25QXX_Erase_Sector</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, w25qxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = W25QXX_Erase_Sector &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Wait_Busy
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Enable
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_One_Sector
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
</UL>

<P><STRONG><a name="[1a2]"></a>W25QXX_Erase_Block32K</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Wait_Busy
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Enable
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>

<P><STRONG><a name="[1a3]"></a>W25QXX_Erase_Block64K</STRONG> (Thumb, 240 bytes, Stack size 32 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Wait_Busy
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_Enable
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>

<P><STRONG><a name="[1a4]"></a>W25QXX_PowerDown</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>

<P><STRONG><a name="[1a6]"></a>W25QXX_WAKEUP</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>

<P><STRONG><a name="[1a7]"></a>W25QXX_Read</STRONG> (Thumb, 638 bytes, Stack size 40 bytes, w25qxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = W25QXX_Read &rArr; SPI1_DMAT_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_DMAT_Config
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_DMAR_Config
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_One_Sector
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read_One_Sector
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update1_dispprogram
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBootScreenMode
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBootScreenMxg
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayBootScreen
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Start
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTouchPara
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlaySound
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initflashadd
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteScreeData
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash2bin
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3tobin
</UL>

<P><STRONG><a name="[1aa]"></a>Compare</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, w25qxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Compare
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_One_Sector
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
</UL>

<P><STRONG><a name="[1a9]"></a>W25QXX_Write</STRONG> (Thumb, 322 bytes, Stack size 56 bytes, w25qxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Compare
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_NoCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mp3
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_dispprogram
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update1_dispprogram
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBootScreenMode
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_dispprogram
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_flash
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initflashadd
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteScreeData
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTouchPara
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;binfiletoflash
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3toflash
</UL>

<P><STRONG><a name="[1ab]"></a>W25QXX_Read_One_Sector</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
</UL>

<P><STRONG><a name="[1ac]"></a>W25QXX_Write_One_Sector</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Compare
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_NoCheck
</UL>

<P><STRONG><a name="[614]"></a>testp</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tfcard.o(.text), UNUSED)

<P><STRONG><a name="[1ad]"></a>SD_SendCommand_NoDeassert</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, tfcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SD_SendCommand_NoDeassert &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TF_Init
</UL>

<P><STRONG><a name="[1ae]"></a>SD_SendCommand</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, tfcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SD_SendCommand &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TF_Init
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlock
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlock
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCSD
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCID
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteSingleBlock
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadSingleBlock
</UL>

<P><STRONG><a name="[1af]"></a>TF_Init</STRONG> (Thumb, 444 bytes, Stack size 40 bytes, tfcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TF_Init &rArr; SD_SendCommand &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFCD_USR_MSC_FATFSINIT
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand_NoDeassert
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_SetSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_AviFile
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_BookFile
</UL>

<P><STRONG><a name="[1b2]"></a>SD_WaitReady</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, tfcard.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlock
</UL>

<P><STRONG><a name="[1b3]"></a>SD_ReceiveData</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, tfcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SD_ReceiveData &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlock
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCSD
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCID
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadSingleBlock
</UL>

<P><STRONG><a name="[1b4]"></a>SD_GetCID</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, tfcard.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReceiveData
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand
</UL>

<P><STRONG><a name="[1b5]"></a>SD_GetCSD</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, tfcard.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReceiveData
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCapacity
</UL>

<P><STRONG><a name="[1b6]"></a>SD_GetCapacity</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, tfcard.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCSD
</UL>

<P><STRONG><a name="[149]"></a>SD_ReadSingleBlock</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, tfcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SD_ReadSingleBlock &rArr; SD_ReceiveData &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReceiveData
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[14e]"></a>SD_WriteSingleBlock</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, tfcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SD_WriteSingleBlock &rArr; SD_SendCommand &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[1b7]"></a>SD_ReadMultiBlock</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, tfcard.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReceiveData
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>

<P><STRONG><a name="[1b8]"></a>SD_WriteMultiBlock</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, tfcard.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitReady
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendCommand
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>

<P><STRONG><a name="[1b9]"></a>VS1003B_Delay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, vs1003.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Delay
</UL>

<P><STRONG><a name="[1ba]"></a>VS1003B_WriteCMD</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, vs1003.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = VS1003B_WriteCMD &rArr; SPI3_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Init
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_AviFile
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_SimTest
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_SoftReset
</UL>

<P><STRONG><a name="[1bb]"></a>VS1003B_ReadCMD</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, vs1003.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = VS1003B_ReadCMD &rArr; SPI3_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Init
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_AviFile
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_SoftReset
</UL>

<P><STRONG><a name="[1bc]"></a>VS1003B_SoftReset</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, vs1003.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = VS1003B_SoftReset &rArr;  VS1003B_Init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Init
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_ReadCMD
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_WriteCMD
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Init
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Mp3Off
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Mp3On
</UL>

<P><STRONG><a name="[1be]"></a>VS1003B_Reset</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, vs1003.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = VS1003B_Reset &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Init
</UL>

<P><STRONG><a name="[1bd]"></a>VS1003B_Init</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, vs1003.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = VS1003B_Init &rArr; VS1003B_SoftReset &rArr;  VS1003B_Init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Reset
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_SoftReset
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_ReadCMD
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_WriteCMD
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_SetSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_SoftReset
</UL>

<P><STRONG><a name="[1c0]"></a>VS1003B_SimTest</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, vs1003.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_WriteCMD
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_ReadWriteByte
</UL>

<P><STRONG><a name="[1c1]"></a>VS1003B_SimTestChg</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, vs1003.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_ReadWriteByte
</UL>

<P><STRONG><a name="[1c2]"></a>VS1003B_WriteDAT</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, vs1003.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = VS1003B_WriteDAT
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_DMAT_Config
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_DMATR_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playmp3_1
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Mp3On
</UL>

<P><STRONG><a name="[1c5]"></a>VS1003B_Mp3On</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, vs1003.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = VS1003B_Mp3On &rArr; VS1003B_SoftReset &rArr;  VS1003B_Init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_WriteDAT
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_SoftReset
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Avi_Play
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlaySound
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playmp3
</UL>

<P><STRONG><a name="[1c6]"></a>VS1003B_Mp3Off</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, vs1003.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = VS1003B_Mp3Off &rArr; VS1003B_SoftReset &rArr;  VS1003B_Init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_SoftReset
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Avi_Play
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlaySound
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playmp3
</UL>

<P><STRONG><a name="[615]"></a>VS1003B_Mp3Stats</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, vs1003.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, vs1003.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Stream2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1c7]"></a>PlaySound</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, vs1003.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = PlaySound &rArr; VS1003B_Mp3Off &rArr; VS1003B_SoftReset &rArr;  VS1003B_Init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Mp3Off
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Mp3On
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStrUser
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr1
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initflashadd
</UL>

<P><STRONG><a name="[1c9]"></a>Playmp3</STRONG> (Thumb, 170 bytes, Stack size 192 bytes, vs1003.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Mp3Off
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Mp3On
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>

<P><STRONG><a name="[1d0]"></a>Playmp3_1</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, vs1003.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Playmp3_1 &rArr; VS1003B_WriteDAT
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_WriteDAT
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Avi_Play
</UL>

<P><STRONG><a name="[1d1]"></a>isUpInfoData</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, wflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = isUpInfoData &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Start
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initflashadd
</UL>

<P><STRONG><a name="[1d3]"></a>creatUpInfoData</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, wflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = creatUpInfoData &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mp3
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_dispprogram
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update1_dispprogram
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_flash
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initflashadd
</UL>

<P><STRONG><a name="[1d4]"></a>mp3toflash</STRONG> (Thumb, 1028 bytes, Stack size 232 bytes, wflash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProgressbar
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFStr
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Chip
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>

<P><STRONG><a name="[1d9]"></a>binfiletoflash</STRONG> (Thumb, 1112 bytes, Stack size 232 bytes, wflash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProgressbar
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFStr
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>

<P><STRONG><a name="[1da]"></a>mp3tobin</STRONG> (Thumb, 586 bytes, Stack size 152 bytes, wflash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFStr
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>

<P><STRONG><a name="[1df]"></a>flash2bin</STRONG> (Thumb, 886 bytes, Stack size 152 bytes, wflash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFStr
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>

<P><STRONG><a name="[1e0]"></a>update_mp3</STRONG> (Thumb, 1108 bytes, Stack size 136 bytes, wflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 984 + Unknown Stack Size
<LI>Call Chain = update_mp3 &rArr; Read_ProgramFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_ExtMemory
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ProgramFile
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtMemory_Status
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProgressbar
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMboard_ProgramData
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;creatUpInfoData
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asctonum
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[1e6]"></a>update_dispprogram</STRONG> (Thumb, 1144 bytes, Stack size 112 bytes, wflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 960 + Unknown Stack Size
<LI>Call Chain = update_dispprogram &rArr; Read_ProgramFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_ExtMemory
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ProgramFile
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtMemory_Status
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProgressbar
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd1
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMboard_ProgramData
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSR_MSP
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;creatUpInfoData
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[1e9]"></a>update1_dispprogram</STRONG> (Thumb, 750 bytes, Stack size 120 bytes, wflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = update1_dispprogram &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProgressbar
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSR_MSP
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;creatUpInfoData
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[1ea]"></a>copy_dispprogram</STRONG> (Thumb, 880 bytes, Stack size 96 bytes, wflash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 944 + Unknown Stack Size
<LI>Call Chain = copy_dispprogram &rArr; Read_ProgramFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_ExtMemory
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ProgramFile
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtMemory_Status
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProgressbar
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMboard_ProgramData
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[1eb]"></a>Read_TchData</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Read_TchData
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_DMAT_Config
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_DMAR_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream3_IRQHandler
</UL>

<P><STRONG><a name="[3c]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 592 bytes, Stack size 16 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA1_Stream3_IRQHandler &rArr; Read_TchData
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_TchData
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_DMAT_Config
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_DMAR_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1f0]"></a>getDisplayPoint</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = getDisplayPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_AutoGet_XY
</UL>

<P><STRONG><a name="[1ef]"></a>CheckKeyZone</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CheckKeyZone
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_AutoGet_XY
</UL>

<P><STRONG><a name="[1ee]"></a>Touch_AutoGet_XY</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Touch_AutoGet_XY &rArr; getDisplayPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckKeyZone
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDisplayPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
</UL>

<P><STRONG><a name="[1f1]"></a>setCalibrationMatrix</STRONG> (Thumb, 370 bytes, Stack size 80 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = setCalibrationMatrix
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkTouch
</UL>

<P><STRONG><a name="[1f3]"></a>crcByte</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycBuff
</UL>

<P><STRONG><a name="[1f2]"></a>cycBuff</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cycBuff
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crcByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTouchPara
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTouchPara
</UL>

<P><STRONG><a name="[1f4]"></a>SaveTouchPara</STRONG> (Thumb, 132 bytes, Stack size 136 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = SaveTouchPara &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycBuff
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkTouch
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoveTouchPara
</UL>

<P><STRONG><a name="[1f5]"></a>RecoveTouchPara</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = RecoveTouchPara &rArr; SaveTouchPara &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTouchPara
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkTouch
</UL>

<P><STRONG><a name="[1f6]"></a>ReadTouchPara</STRONG> (Thumb, 266 bytes, Stack size 152 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = ReadTouchPara &rArr; W25QXX_Read &rArr; SPI1_DMAT_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycBuff
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkTouch
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reg_Init
</UL>

<P><STRONG><a name="[1f7]"></a>ChkTouch</STRONG> (Thumb, 734 bytes, Stack size 168 bytes, touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = ChkTouch &rArr; RecoveTouchPara &rArr; SaveTouchPara &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawIconon
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawIconoff
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawIcon
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFStr32
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTouchPara
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoveTouchPara
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTouchPara
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCalibrationMatrix
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTouchPara
</UL>

<P><STRONG><a name="[202]"></a>TouchParaOutPut</STRONG> (Thumb, 1080 bytes, Stack size 8 bytes, touch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SendByte
</UL>

<P><STRONG><a name="[203]"></a>I2C1_Init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = I2C1_Init &rArr; CT_IIC_Init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[4d]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, i2c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[205]"></a>Wait_I2C0_end</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>

<P><STRONG><a name="[206]"></a>DS2460_Read</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = DS2460_Read &rArr; CT_IIC_Read_Byte &rArr; CT_IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Start
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Send_Byte
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Read_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ReadEEP
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ReadMAC
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ReadInputSHA
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ReadSerialNumber
</UL>

<P><STRONG><a name="[20c]"></a>DS2460_Write</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DS2460_Write &rArr; CT_IIC_Send_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Start
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteESecret3
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteESecret2
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteESecret1
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteSSecret
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_TransferSecret
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteEEP
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteMAC
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_MatchMAC
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ComputeSHA
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteInputSHA
</UL>

<P><STRONG><a name="[20d]"></a>GT9271_Read</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GT9271_Read &rArr; CT_IIC_Read_Byte &rArr; CT_IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Start
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Send_Byte
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Read_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9271_RD_Reg
</UL>

<P><STRONG><a name="[20e]"></a>GT9271_Write</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GT9271_Write &rArr; CT_IIC_Send_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Start
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9271_WR_Reg
</UL>

<P><STRONG><a name="[616]"></a>DS2460_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ds2460.o(.text), UNUSED)

<P><STRONG><a name="[20f]"></a>DS2460_ReadSerialNumber</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460MatchID
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460Loaddown_ESecret
</UL>

<P><STRONG><a name="[210]"></a>DS2460_WriteInputSHA</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460MatchID
</UL>

<P><STRONG><a name="[211]"></a>DS2460_ReadInputSHA</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Read
</UL>

<P><STRONG><a name="[213]"></a>msDelay</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460MatchID
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460Loaddown_ESecret
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_TransferSecret
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ComputeSHA
</UL>

<P><STRONG><a name="[212]"></a>DS2460_ComputeSHA</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msDelay
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460MatchID
</UL>

<P><STRONG><a name="[214]"></a>DS2460_MatchMAC</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Write
</UL>

<P><STRONG><a name="[215]"></a>DS2460_ReadMAC</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460MatchID
</UL>

<P><STRONG><a name="[216]"></a>DS2460_WriteMAC</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Write
</UL>

<P><STRONG><a name="[217]"></a>DS2460_ReadEEP</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, ds2460.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = DS2460_ReadEEP &rArr; DS2460_Read &rArr; CT_IIC_Read_Byte &rArr; CT_IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPessVal
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadJogmethod
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPromgParas
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadUserNo
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSysid
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBatType
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBackLight
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTimeMode
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadVoice
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysid
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSeed
</UL>

<P><STRONG><a name="[218]"></a>DS2460_WriteEEP</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, ds2460.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DS2460_WriteEEP &rArr; DS2460_Write &rArr; CT_IIC_Send_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteJogmethod
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserNo
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePessVal
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBackLight
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteromgParas
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteTimeMode
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveVoice
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBatType
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSysid
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSeed
</UL>

<P><STRONG><a name="[219]"></a>DS2460_TransferSecret</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msDelay
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Write
</UL>

<P><STRONG><a name="[21a]"></a>DS2460_WriteSSecret</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Write
</UL>

<P><STRONG><a name="[21b]"></a>DS2460_WriteESecret1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460Loaddown_ESecret
</UL>

<P><STRONG><a name="[21c]"></a>DS2460_WriteESecret2</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460Loaddown_ESecret
</UL>

<P><STRONG><a name="[21d]"></a>DS2460_WriteESecret3</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460Loaddown_ESecret
</UL>

<P><STRONG><a name="[617]"></a>I2C_Test</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ds2460.o(.text), UNUSED)

<P><STRONG><a name="[220]"></a>KTN</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComputeSHAEE
</UL>

<P><STRONG><a name="[21f]"></a>NLF</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComputeSHAEE
</UL>

<P><STRONG><a name="[21e]"></a>ComputeSHAEE</STRONG> (Thumb, 222 bytes, Stack size 352 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NLF
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KTN
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460MatchID
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460Loaddown_ESecret
</UL>

<P><STRONG><a name="[222]"></a>Data_Encrypt</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460MatchID
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460Loaddown_ESecret
</UL>

<P><STRONG><a name="[221]"></a>DS2460Loaddown_ESecret</STRONG> (Thumb, 536 bytes, Stack size 192 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Encrypt
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComputeSHAEE
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteESecret3
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteESecret2
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteESecret1
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msDelay
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ReadSerialNumber
</UL>

<P><STRONG><a name="[227]"></a>Read_HwRng</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460MatchID
</UL>

<P><STRONG><a name="[223]"></a>SaveSeed</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteEEP
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460MatchID
</UL>

<P><STRONG><a name="[224]"></a>DS2460MatchID</STRONG> (Thumb, 764 bytes, Stack size 232 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSeed
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_HwRng
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Encrypt
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComputeSHAEE
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ReadMAC
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ComputeSHA
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msDelay
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteInputSHA
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ReadSerialNumber
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>

<P><STRONG><a name="[228]"></a>ReadSeed</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ReadEEP
</UL>

<P><STRONG><a name="[229]"></a>ReadSysid</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, ds2460.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = ReadSysid &rArr; DS2460_ReadEEP &rArr; DS2460_Read &rArr; CT_IIC_Read_Byte &rArr; CT_IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ReadEEP
</UL>
<BR>[Called By]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reg_Init
</UL>

<P><STRONG><a name="[22a]"></a>SaveSysid</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteEEP
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ReadEEP
</UL>

<P><STRONG><a name="[22b]"></a>ReadBackLight</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ds2460.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ReadBackLight &rArr; DS2460_ReadEEP &rArr; DS2460_Read &rArr; CT_IIC_Read_Byte &rArr; CT_IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ReadEEP
</UL>
<BR>[Called By]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reg_Init
</UL>

<P><STRONG><a name="[22c]"></a>SaveBackLight</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ds2460.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SaveBackLight &rArr; DS2460_WriteEEP &rArr; DS2460_Write &rArr; CT_IIC_Send_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteEEP
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
</UL>

<P><STRONG><a name="[22d]"></a>ReadBatType</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ds2460.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ReadBatType &rArr; DS2460_ReadEEP &rArr; DS2460_Read &rArr; CT_IIC_Read_Byte &rArr; CT_IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ReadEEP
</UL>
<BR>[Called By]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reg_Init
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadStartupWait
</UL>

<P><STRONG><a name="[22e]"></a>SaveBatType</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteEEP
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveStartupWait
</UL>

<P><STRONG><a name="[22f]"></a>ReadStartupWait</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBatType
</UL>

<P><STRONG><a name="[230]"></a>SaveStartupWait</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBatType
</UL>

<P><STRONG><a name="[231]"></a>ReadVoice</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ReadEEP
</UL>

<P><STRONG><a name="[232]"></a>SaveVoice</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteEEP
</UL>

<P><STRONG><a name="[233]"></a>ReadUserNo</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ds2460.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ReadUserNo &rArr; DS2460_ReadEEP &rArr; DS2460_Read &rArr; CT_IIC_Read_Byte &rArr; CT_IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ReadEEP
</UL>
<BR>[Called By]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reg_Init
</UL>

<P><STRONG><a name="[234]"></a>SaveUserNo</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ds2460.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SaveUserNo &rArr; DS2460_WriteEEP &rArr; DS2460_Write &rArr; CT_IIC_Send_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteEEP
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
</UL>

<P><STRONG><a name="[235]"></a>ReadTimeMode</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ReadEEP
</UL>

<P><STRONG><a name="[236]"></a>WriteTimeMode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteEEP
</UL>

<P><STRONG><a name="[237]"></a>ReadPessVal</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ds2460.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ReadPessVal &rArr; DS2460_ReadEEP &rArr; DS2460_Read &rArr; CT_IIC_Read_Byte &rArr; CT_IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ReadEEP
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[238]"></a>WritePessVal</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ds2460.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = WritePessVal &rArr; DS2460_WriteEEP &rArr; DS2460_Write &rArr; CT_IIC_Send_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteEEP
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
</UL>

<P><STRONG><a name="[239]"></a>ReadJogmethod</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ds2460.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ReadJogmethod &rArr; DS2460_ReadEEP &rArr; DS2460_Read &rArr; CT_IIC_Read_Byte &rArr; CT_IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ReadEEP
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[23a]"></a>WriteJogmethod</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ds2460.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = WriteJogmethod &rArr; DS2460_WriteEEP &rArr; DS2460_Write &rArr; CT_IIC_Send_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteEEP
</UL>
<BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
</UL>

<P><STRONG><a name="[23b]"></a>ReadPromgParas</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ReadEEP
</UL>

<P><STRONG><a name="[23c]"></a>WriteromgParas</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ds2460.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteEEP
</UL>

<P><STRONG><a name="[618]"></a>HwRng_Init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ds2460.o(.text), UNUSED)

<P><STRONG><a name="[619]"></a>WFI_SET</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sys.o(.text), UNUSED)

<P><STRONG><a name="[189]"></a>INTX_DISABLE</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sys.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlocks
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlocks
</UL>

<P><STRONG><a name="[18a]"></a>INTX_ENABLE</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sys.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlocks
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlocks
</UL>

<P><STRONG><a name="[61a]"></a>Sys_Standby</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, sys.o(.text), UNUSED)

<P><STRONG><a name="[61b]"></a>Sys_Soft_Reset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sys.o(.text), UNUSED)

<P><STRONG><a name="[479]"></a>_ttywrch</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sys.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[143]"></a>_sys_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sys.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[116]"></a>fputc</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, sys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[23d]"></a>initFileProgress</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = initFileProgress &rArr; DrawRect &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mf_copy
</UL>

<P><STRONG><a name="[23f]"></a>SetFileProgress</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SetFileProgress &rArr; DrawFillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mf_copy
</UL>

<P><STRONG><a name="[240]"></a>USB_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USB_Init &rArr; USBH_Init &rArr; HCD_Init &rArr; USB_OTG_CoreInitHost &rArr; USB_OTG_DriveVbus &rArr; USB_OTG_BSP_mDelay &rArr; BSP_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[242]"></a>USB_Process</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = USB_Process &rArr; USBH_Process &rArr; USBH_HandleEnum &rArr; USBH_Get_CfgDesc &rArr; USBH_ParseCfgDesc
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[244]"></a>USB_USR_MSC_FATFSINIT</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_USR_MSC_FATFSINIT &rArr; f_mount
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDiskStatus
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_USR_MSC_Application
</UL>

<P><STRONG><a name="[246]"></a>USB_USR_MSC_FATFSRESET</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_USR_MSC_FATFSRESET &rArr; f_mount
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_USR_DeviceDisconnected
</UL>

<P><STRONG><a name="[184]"></a>SDIO_USR_MSC_FATFSINIT</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SDIO_USR_MSC_FATFSINIT &rArr; f_mount
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[187]"></a>SDIO_USR_MSC_FATFSRESET</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDIO_USR_MSC_FATFSRESET &rArr; f_mount
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReSet
</UL>

<P><STRONG><a name="[1b1]"></a>TFCD_USR_MSC_FATFSINIT</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TFCD_USR_MSC_FATFSINIT &rArr; f_mount
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TF_Init
</UL>

<P><STRONG><a name="[247]"></a>TFCD_USR_MSC_FATFSRESET</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, disk_oper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
</UL>

<P><STRONG><a name="[1e2]"></a>Select_ExtMemory</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, disk_oper.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mcpuprogram
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalyseUpdateList
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mp3
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_dispprogram
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_dispprogram
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_getPatData
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_flash
</UL>

<P><STRONG><a name="[1e1]"></a>ExtMemory_Status</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ExtMemory_Status
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mcpuprogram
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalyseUpdateList
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mp3
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_dispprogram
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_dispprogram
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDiskStatus
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtFormat
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_flash
</UL>

<P><STRONG><a name="[248]"></a>Explore_Disk_Group</STRONG> (Thumb, 1316 bytes, Stack size 216 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = Explore_Disk_Group &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
</UL>

<P><STRONG><a name="[24a]"></a>Delete_GroupFile</STRONG> (Thumb, 640 bytes, Stack size 216 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = Delete_GroupFile &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[24c]"></a>Write_GroupFile</STRONG> (Thumb, 522 bytes, Stack size 176 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = Write_GroupFile &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[24d]"></a>Write_SysBackupkFile</STRONG> (Thumb, 396 bytes, Stack size 192 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = Write_SysBackupkFile &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[24e]"></a>Read_SysBackupkFile</STRONG> (Thumb, 1246 bytes, Stack size 224 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = Read_SysBackupkFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[24f]"></a>Write_RecordFile</STRONG> (Thumb, 540 bytes, Stack size 176 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = Write_RecordFile &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[61c]"></a>exportErrMxg</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, disk_oper.o(.text), UNUSED)

<P><STRONG><a name="[61d]"></a>exportSysIoPara</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, disk_oper.o(.text), UNUSED)

<P><STRONG><a name="[61e]"></a>inportSysIoPara</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, disk_oper.o(.text), UNUSED)

<P><STRONG><a name="[253]"></a>exportParas</STRONG> (Thumb, 632 bytes, Stack size 208 bytes, disk_oper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProgressbar
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>

<P><STRONG><a name="[254]"></a>importParas</STRONG> (Thumb, 554 bytes, Stack size 424 bytes, disk_oper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProgressbar
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mymemset
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>

<P><STRONG><a name="[256]"></a>Explore_Disk</STRONG> (Thumb, 2610 bytes, Stack size 288 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = Explore_Disk &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[257]"></a>Explore_Disk_G</STRONG> (Thumb, 2572 bytes, Stack size 288 bytes, disk_oper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>

<P><STRONG><a name="[259]"></a>G_Changto_E</STRONG> (Thumb, 770 bytes, Stack size 52 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = G_Changto_E
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFileByName
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_PatFile
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFile
</UL>

<P><STRONG><a name="[258]"></a>Read_PatFile</STRONG> (Thumb, 1568 bytes, Stack size 312 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = Read_PatFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekDrawCmd
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juki_TO_Bor
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Change_E
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G_Changto_E
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_getPatData
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
</UL>

<P><STRONG><a name="[1e3]"></a>Read_ProgramFile</STRONG> (Thumb, 1554 bytes, Stack size 352 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = Read_ProgramFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProgressbar
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mcpuprogram
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalyseUpdateList
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mp3
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_dispprogram
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_dispprogram
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_flash
</UL>

<P><STRONG><a name="[25e]"></a>Write_PatFile</STRONG> (Thumb, 840 bytes, Stack size 280 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = Write_PatFile &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[25f]"></a>Delete_PatFile</STRONG> (Thumb, 1046 bytes, Stack size 216 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = Delete_PatFile &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[61f]"></a>CopyPat_ToMemory</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, disk_oper.o(.text), UNUSED)

<P><STRONG><a name="[620]"></a>CopyPat_ToUsb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, disk_oper.o(.text), UNUSED)

<P><STRONG><a name="[260]"></a>Format_Disk</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = Format_Disk &rArr; f_mkfs &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[262]"></a>get_fattime</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = get_fattime &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[263]"></a>USH_User_App</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, disk_oper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>

<P><STRONG><a name="[266]"></a>pnoIsContain</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, disk_oper.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDiskFiles
</UL>

<P><STRONG><a name="[264]"></a>getFileTypeByName</STRONG> (Thumb, 920 bytes, Stack size 24 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = getFileTypeByName
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFileByName
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDiskFiles
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFile
</UL>

<P><STRONG><a name="[265]"></a>getDiskFiles</STRONG> (Thumb, 3864 bytes, Stack size 304 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = getDiskFiles &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_FileAnaly
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFileTypeByName
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pnoIsContain
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFileNo
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[269]"></a>newDiskFolder</STRONG> (Thumb, 144 bytes, Stack size 1080 bytes, disk_oper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>

<P><STRONG><a name="[26a]"></a>renameDiskFile</STRONG> (Thumb, 250 bytes, Stack size 3128 bytes, disk_oper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>

<P><STRONG><a name="[26c]"></a>readDiskPatFile</STRONG> (Thumb, 1172 bytes, Stack size 1256 bytes, disk_oper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Change_E
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFileTypeByName
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G_Changto_E
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>

<P><STRONG><a name="[26e]"></a>readDiskPatFileByName</STRONG> (Thumb, 724 bytes, Stack size 1224 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1720<LI>Call Chain = readDiskPatFileByName &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Change_E
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFileTypeByName
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;G_Changto_E
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[26f]"></a>writeDiskPatFile</STRONG> (Thumb, 836 bytes, Stack size 1144 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1656<LI>Call Chain = writeDiskPatFile &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[270]"></a>writeDiskGroupFile</STRONG> (Thumb, 370 bytes, Stack size 1144 bytes, disk_oper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>

<P><STRONG><a name="[271]"></a>writeDiskEmbFile</STRONG> (Thumb, 426 bytes, Stack size 1128 bytes, disk_oper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>

<P><STRONG><a name="[272]"></a>FS_DeleteIntFile</STRONG> (Thumb, 176 bytes, Stack size 600 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064 + In Cycle
<LI>Call Chain = FS_DeleteIntFile &rArr;  FS_DeleteIntFile (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_DeleteIntFile
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deleteDiskFile
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_DeleteIntFile
</UL>

<P><STRONG><a name="[273]"></a>deleteDiskFile</STRONG> (Thumb, 290 bytes, Stack size 608 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1672<LI>Call Chain = deleteDiskFile &rArr; FS_DeleteIntFile &rArr;  FS_DeleteIntFile (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strEqual
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_DeleteIntFile
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[275]"></a>mf_copy</STRONG> (Thumb, 160 bytes, Stack size 616 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112<LI>Call Chain = mf_copy &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFileProgress
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initFileProgress
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copyDiskPatFile
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mf_dcopy
</UL>

<P><STRONG><a name="[276]"></a>mf_dcopy</STRONG> (Thumb, 364 bytes, Stack size 1144 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2256 + In Cycle
<LI>Call Chain = mf_dcopy &rArr;  mf_dcopy (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mf_dcopy
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mf_copy
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copyDiskPatFile
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mf_dcopy
</UL>

<P><STRONG><a name="[278]"></a>copyDiskPatFile</STRONG> (Thumb, 286 bytes, Stack size 1112 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3368<LI>Call Chain = copyDiskPatFile &rArr; mf_dcopy &rArr;  mf_dcopy (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strEqual
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mf_dcopy
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mf_copy
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[279]"></a>readDiskGropFileByName</STRONG> (Thumb, 396 bytes, Stack size 1080 bytes, disk_oper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>

<P><STRONG><a name="[27a]"></a>disktest</STRONG> (Thumb, 48 bytes, Stack size 144 bytes, disk_oper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>

<P><STRONG><a name="[27c]"></a>MY_NVIC_PriorityGroupConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, aviplayer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_Init
</UL>

<P><STRONG><a name="[27b]"></a>MY_NVIC_Init</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, aviplayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MY_NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9xx_Init
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
</UL>

<P><STRONG><a name="[4b]"></a>TIM3_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, aviplayer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[27d]"></a>TIM3_Int_Init</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, aviplayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM3_Int_Init &rArr; MY_NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_AviFile
</UL>

<P><STRONG><a name="[27e]"></a>Find_BookFile</STRONG> (Thumb, 454 bytes, Stack size 200 bytes, aviplayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TF_Init
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asctonum
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>

<P><STRONG><a name="[27f]"></a>InitPage</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, aviplayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePage
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFBMP2
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBMP
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Book_Play
</UL>

<P><STRONG><a name="[283]"></a>Read_BookData</STRONG> (Thumb, 302 bytes, Stack size 64 bytes, aviplayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MjpegDecode
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>

<P><STRONG><a name="[285]"></a>Book_Zoom</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, aviplayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Book_Play
</UL>

<P><STRONG><a name="[289]"></a>DrawBook</STRONG> (Thumb, 208 bytes, Stack size 120 bytes, aviplayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FFStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Book_Play
</UL>

<P><STRONG><a name="[28e]"></a>Book_Play</STRONG> (Thumb, 262 bytes, Stack size 56 bytes, aviplayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBook
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Book_Zoom
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPage
</UL>

<P><STRONG><a name="[28f]"></a>Find_AviFile</STRONG> (Thumb, 460 bytes, Stack size 200 bytes, aviplayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TF_Init
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>

<P><STRONG><a name="[290]"></a>Search_Auds</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, aviplayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Search_Auds
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_AviFile
</UL>

<P><STRONG><a name="[291]"></a>Search_Movi</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, aviplayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Search_Movi
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_AviFile
</UL>

<P><STRONG><a name="[292]"></a>ReadUnit</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, aviplayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadUnit
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AVI_Parser
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strl_Parser
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strf_Parser
</UL>

<P><STRONG><a name="[293]"></a>Strf_Parser</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, aviplayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Strf_Parser &rArr; ReadUnit
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadUnit
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_AviFile
</UL>

<P><STRONG><a name="[294]"></a>Strl_Parser</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, aviplayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Strl_Parser &rArr; ReadUnit
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadUnit
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_AviFile
</UL>

<P><STRONG><a name="[295]"></a>Avih_Parser</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, aviplayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Avih_Parser
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_AviFile
</UL>

<P><STRONG><a name="[296]"></a>AVI_Parser</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, aviplayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AVI_Parser &rArr; ReadUnit
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadUnit
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_AviFile
</UL>

<P><STRONG><a name="[297]"></a>Check_AviFile</STRONG> (Thumb, 484 bytes, Stack size 128 bytes, aviplayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = Check_AviFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AVI_Parser
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Avih_Parser
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strl_Parser
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strf_Parser
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Search_Movi
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Search_Auds
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_ReadCMD
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_WriteCMD
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayBootScreen
</UL>

<P><STRONG><a name="[298]"></a>DrawAviProgress</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, aviplayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[299]"></a>DrawAvi</STRONG> (Thumb, 476 bytes, Stack size 48 bytes, aviplayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = DrawAvi &rArr; DrawFStr &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePage
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFStr
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Avi_Play
</UL>

<P><STRONG><a name="[29b]"></a>Avi_Play</STRONG> (Thumb, 450 bytes, Stack size 56 bytes, aviplayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1328<LI>Call Chain = Avi_Play &rArr; MjpegDecode &rArr; jpeg_CreateDecompress &rArr; jinit_memory_mgr &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MjpegDecode
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawAvi
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playmp3_1
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Mp3Off
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Mp3On
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayBootScreen
</UL>

<P><STRONG><a name="[29c]"></a>Search_Fram</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, aviplayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>

<P><STRONG><a name="[29d]"></a>getBootScreenMxg</STRONG> (Thumb, 130 bytes, Stack size 56 bytes, aviplayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = getBootScreenMxg &rArr; W25QXX_Read &rArr; SPI1_DMAT_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29e]"></a>setBootScreenMode</STRONG> (Thumb, 86 bytes, Stack size 56 bytes, aviplayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = setBootScreenMode &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[29f]"></a>anyWriteScreeData</STRONG> (Thumb, 100 bytes, Stack size 128 bytes, aviplayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MjpegDecode
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[2a0]"></a>WriteScreeData</STRONG> (Thumb, 290 bytes, Stack size 72 bytes, aviplayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[2a7]"></a>Ex_NVIC_Config</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, gttouch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Ex_NVIC_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9xx_Init
</UL>

<P><STRONG><a name="[2a1]"></a>GT9271_WR_Reg</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gttouch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GT9271_WR_Reg &rArr; GT9271_Write &rArr; CT_IIC_Send_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9271_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9xx_ScanIRQ
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9xx_Init
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Send_Cfg
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9271_Send_Cfg
</UL>

<P><STRONG><a name="[2a2]"></a>GT9271_Send_Cfg</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, gttouch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9271_WR_Reg
</UL>

<P><STRONG><a name="[2a3]"></a>GT_Send_Cfg</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, gttouch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GT_Send_Cfg &rArr; GT9271_WR_Reg &rArr; GT9271_Write &rArr; CT_IIC_Send_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9271_WR_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9xx_Init
</UL>

<P><STRONG><a name="[2a4]"></a>GT9271_RD_Reg</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gttouch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GT9271_RD_Reg &rArr; GT9271_Read &rArr; CT_IIC_Read_Byte &rArr; CT_IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9271_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9xx_ScanIRQ
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9xx_Init
</UL>

<P><STRONG><a name="[2a5]"></a>GT9xx_Init</STRONG> (Thumb, 436 bytes, Stack size 56 bytes, gttouch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GT9xx_Init &rArr; GT_Send_Cfg &rArr; GT9271_WR_Reg &rArr; GT9271_Write &rArr; CT_IIC_Send_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9271_RD_Reg
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Send_Cfg
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9271_WR_Reg
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ex_NVIC_Config
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_Init
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[59d]"></a>GT9xx_Scan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gttouch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
</UL>

<P><STRONG><a name="[2a8]"></a>GT9xx_ScanIRQ</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, gttouch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = GT9xx_ScanIRQ &rArr; GT9271_RD_Reg &rArr; GT9271_Read &rArr; CT_IIC_Read_Byte &rArr; CT_IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9271_RD_Reg
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9271_WR_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
</UL>

<P><STRONG><a name="[2ac]"></a>get_checkSum</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_checkSum
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModSpeed
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModOrg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoveLine
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoPinSwitch
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoPin
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoArea
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModAddPin
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_DealSaveData
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_2deal
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModTack
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPF
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModLF
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModCode
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveStartEnd
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveRepe
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveAss
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConSpin
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConMirr
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_To_Bor
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataCheckSum
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSREG
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juki_TO_Bor
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Change_E
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPinAng
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPindis
</UL>

<P><STRONG><a name="[25c]"></a>SeekDrawCmd</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SeekDrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_PatFile
</UL>

<P><STRONG><a name="[2a9]"></a>Bor_DrawCmd</STRONG> (Thumb, 1740 bytes, Stack size 24 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_getStPin
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModSpeed
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModOrg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoveLine
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoPin
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoArea
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModDelPins
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModAddPin
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalLFval
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_2deal
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_getPinAddr
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_ctOverlap
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_UpFeed
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sewP2Pmove
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sewFindPinAndPos
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doCode
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_copyImgs
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModTack
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPF
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModLF
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModCode
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Isocclu
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CtBefDatAny
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatDelData
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatData
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatCalLF
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPFval
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getctNearPointPos
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNearPointPos
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveStartEnd
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveRepe
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveAss
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConZoom
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConSpin
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConMirr
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConCalAssArea
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sew_GetSewLen
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_To_Bor
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim1
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPFlimt
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;viewFeedCode
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFeedXY1
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFeedXY
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFeedPos
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDrawPatPos
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDrawScale
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juki_TO_Bor
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Change_E
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BorCmdAnaly
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_UpFeed1
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dealFeed
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Ctsplinectl
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doTack
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPinAng
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPindis
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_IsneedTrim
</UL>

<P><STRONG><a name="[25a]"></a>Bor_Change_E</STRONG> (Thumb, 1554 bytes, Stack size 112 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = Bor_Change_E &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mysetU16
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copyU16
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCD_2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFileByName
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_PatFile
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFile
</UL>

<P><STRONG><a name="[26d]"></a>Bor_AnaInfo</STRONG> (Thumb, 254 bytes, Stack size 24 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Bor_AnaInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_getStPin
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModSpeed
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModOrg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoveLine
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoPin
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoArea
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModDelPins
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModAddPin
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalLFval
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFileByName
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_DealSaveData
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_2deal
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_getPinAddr
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_ctOverlap
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_UpFeed
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sewP2Pmove
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sewFindPinAndPos
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeedOrg
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doSpeed
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doPF
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doLF
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doExCode
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doEndcmd
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doCode
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_copyImgs
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModTack
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPF
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModLF
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModCode
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Isocclu
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatUnDO
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatDelData
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatData
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPFval
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getctNearPointPos
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNearPointPos
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveStartEnd
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveRepe
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveAss
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConZoom
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConSpin
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConMirr
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConCalAssArea
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sew_GetSewLen
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim1
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPFlimt
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;viewFeedCode
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFeedXY1
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFeedXY
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFeedPos
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDrawPatPos
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDrawScale
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFile
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_UpFeed1
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doTack
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPinAng
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPindis
</UL>

<P><STRONG><a name="[268]"></a>Bor_FileAnaly</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Bor_FileAnaly
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDiskFiles
</UL>

<P><STRONG><a name="[2ae]"></a>Bor_BaseAddr</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Bor_BaseAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_To_Bor
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juki_TO_Bor
</UL>

<P><STRONG><a name="[2af]"></a>Bor_CalPatLim</STRONG> (Thumb, 300 bytes, Stack size 96 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Bor_CalPatLim &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModSpeed
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModOrg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoveLine
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoPin
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoArea
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModDelPins
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModAddPin
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_TO_Juki
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_UpFeed
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeedOrg
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doExCode
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doCode
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_To_Mit
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModTack
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModCode
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatUnDO
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatDelData
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatData
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveStartEnd
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveRepe
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveAss
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConZoom
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConSpin
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConMirr
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDrawScale
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_UpFeed1
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPindis
</UL>

<P><STRONG><a name="[2b0]"></a>Sew_GetSewLen</STRONG> (Thumb, 170 bytes, Stack size 64 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Sew_GetSewLen &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
</UL>

<P><STRONG><a name="[2b4]"></a>Bor_CalPatLim1</STRONG> (Thumb, 226 bytes, Stack size 80 bytes, bor_patfun.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[2b5]"></a>Bor_MoveData</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Bor_MoveData
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModSpeed
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModOrg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoveLine
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoPin
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoArea
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModDelPins
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModAddPin
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_ctOverlap
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doSpeed
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doPF
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doLF
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doExCode
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doEndcmd
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doCode
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPF
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModLF
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatUnDO
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatDelData
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatData
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveRepe
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveAss
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConMirr
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doTack
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docur
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doline
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
</UL>

<P><STRONG><a name="[2b6]"></a>Bor_CalPFlimt</STRONG> (Thumb, 132 bytes, Stack size 72 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Bor_CalPFlimt &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDrawScale
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[2b7]"></a>Bor_IsneedTrim</STRONG> (Thumb, 212 bytes, Stack size 48 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Bor_IsneedTrim &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoPin
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeedOrg
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doEndcmd
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doCode
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModCode
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatData
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doTack
</UL>

<P><STRONG><a name="[2b8]"></a>Bor_CtBefDatAny</STRONG> (Thumb, 1164 bytes, Stack size 72 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = Bor_CtBefDatAny &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mysetU16
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCD_2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_backPattingData
</UL>

<P><STRONG><a name="[509]"></a>Bor_CreatBack</STRONG> (Thumb, 184 bytes, Stack size 36 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Bor_CreatBack
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_backPattingData
</UL>

<P><STRONG><a name="[2b9]"></a>sewFindPinAndPos</STRONG> (Thumb, 210 bytes, Stack size 104 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = sewFindPinAndPos &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[2ba]"></a>sewP2Pmove</STRONG> (Thumb, 142 bytes, Stack size 72 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = sewP2Pmove &rArr; Comm_RelationMove &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RelationMove
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[2bc]"></a>Bor_CalPFval</STRONG> (Thumb, 118 bytes, Stack size 72 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Bor_CalPFval &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConMirr
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[2bd]"></a>Bor_CalLFval</STRONG> (Thumb, 172 bytes, Stack size 80 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Bor_CalLFval &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
</UL>

<P><STRONG><a name="[2be]"></a>Bor_doEndcmd</STRONG> (Thumb, 172 bytes, Stack size 72 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Bor_doEndcmd &rArr; Bor_IsneedTrim &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_IsneedTrim
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
</UL>

<P><STRONG><a name="[2bf]"></a>Bor_dofeed</STRONG> (Thumb, 280 bytes, Stack size 56 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Bor_dofeed &rArr; Bor_MoveData
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModOrg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoveLine
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoPin
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoArea
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModDelPins
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModAddPin
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_2deal
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_UpFeed
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeedOrg
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_copyImgs
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModCode
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatData
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveStartEnd
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveRepe
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveAss
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConMirr
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_UpFeed1
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dealFeed
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doTack
</UL>

<P><STRONG><a name="[2c0]"></a>Bor_dofeedOrg</STRONG> (Thumb, 246 bytes, Stack size 136 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = Bor_dofeedOrg &rArr; Bor_CalPatLim &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_IsneedTrim
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
</UL>

<P><STRONG><a name="[2c1]"></a>Bor_doCode</STRONG> (Thumb, 582 bytes, Stack size 120 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Bor_doCode &rArr; Bor_CalPatLim &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_IsneedTrim
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
</UL>

<P><STRONG><a name="[2c2]"></a>Bor_doExCode</STRONG> (Thumb, 334 bytes, Stack size 96 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Bor_doExCode &rArr; Bor_CalPatLim &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
</UL>

<P><STRONG><a name="[2c3]"></a>Bor_ModPF</STRONG> (Thumb, 354 bytes, Stack size 96 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Bor_ModPF &rArr; Bor_MoveData
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
</UL>

<P><STRONG><a name="[2c4]"></a>Bor_CreatCalLF</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Bor_CreatCalLF &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
</UL>

<P><STRONG><a name="[2c5]"></a>Bor_ModLF</STRONG> (Thumb, 292 bytes, Stack size 80 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Bor_ModLF &rArr; Bor_MoveData
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
</UL>

<P><STRONG><a name="[2c6]"></a>Bor_feedInfo</STRONG> (Thumb, 400 bytes, Stack size 96 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Bor_feedInfo &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoPin
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoArea
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModDelPins
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModAddPin
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModCode
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bor_getPointXY
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pathTohome
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Stpoint
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_backPattingData
</UL>

<P><STRONG><a name="[2c7]"></a>Bor_ModOrg</STRONG> (Thumb, 790 bytes, Stack size 144 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = Bor_ModOrg &rArr; Bor_CalPatLim &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
</UL>

<P><STRONG><a name="[2c8]"></a>Bor_ModDelPins</STRONG> (Thumb, 1210 bytes, Stack size 192 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = Bor_ModDelPins &rArr; Bor_feedInfo &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
</UL>

<P><STRONG><a name="[2c9]"></a>Bor_ModAddPin</STRONG> (Thumb, 1954 bytes, Stack size 208 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Bor_ModAddPin &rArr; Bor_feedInfo &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
</UL>

<P><STRONG><a name="[2ca]"></a>Bor_ModMoPin</STRONG> (Thumb, 2596 bytes, Stack size 208 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Bor_ModMoPin &rArr; Bor_feedInfo &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_IsneedTrim
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
</UL>

<P><STRONG><a name="[2cb]"></a>Bor_doline</STRONG> (Thumb, 1128 bytes, Stack size 96 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Bor_doline &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verticalline_pos
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getpoint_sum
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoveLine
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatData
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveRepe
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docur
</UL>

<P><STRONG><a name="[2cf]"></a>Bor_ModMoveLine</STRONG> (Thumb, 1500 bytes, Stack size 168 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = Bor_ModMoveLine &rArr; Bor_doline &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doline
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
</UL>

<P><STRONG><a name="[2d0]"></a>Bor_docur</STRONG> (Thumb, 5644 bytes, Stack size 288 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = Bor_docur &rArr; Bor_doline &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verticalline_pos_zag
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getpoint_sum
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doline
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatData
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPindis
</UL>

<P><STRONG><a name="[2d7]"></a>Bor_ModPindis</STRONG> (Thumb, 1216 bytes, Stack size 208 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = Bor_ModPindis &rArr; Bor_docur &rArr; Bor_doline &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docur
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoPinSwitch
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatData
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveRepe
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveAss
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConZoom
</UL>

<P><STRONG><a name="[2d9]"></a>Bor_ModMoPinSwitch</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 744<LI>Call Chain = Bor_ModMoPinSwitch &rArr; Bor_ModPindis &rArr; Bor_docur &rArr; Bor_doline &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPindis
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
</UL>

<P><STRONG><a name="[2da]"></a>Bor_ModSpeed</STRONG> (Thumb, 1048 bytes, Stack size 128 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Bor_ModSpeed &rArr; Bor_CalPatLim &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
</UL>

<P><STRONG><a name="[2db]"></a>Bor_ModCode</STRONG> (Thumb, 966 bytes, Stack size 176 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Bor_ModCode &rArr; Bor_feedInfo &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_IsneedTrim
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
</UL>

<P><STRONG><a name="[2dc]"></a>Bor_ModPinAng</STRONG> (Thumb, 198 bytes, Stack size 72 bytes, bor_patfun.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[2e2]"></a>Bor_ctlIsocclu</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Bor_ctlIsocclu
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
</UL>

<P><STRONG><a name="[2dd]"></a>Bor_Updatct2</STRONG> (Thumb, 1348 bytes, Stack size 48 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Bor_Updatct2
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
</UL>

<P><STRONG><a name="[2de]"></a>dealChPoint</STRONG> (Thumb, 486 bytes, Stack size 24 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = dealChPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
</UL>

<P><STRONG><a name="[2e9]"></a>isChPoint</STRONG> (Thumb, 224 bytes, Stack size 20 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = isChPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
</UL>

<P><STRONG><a name="[2df]"></a>isInflPoint</STRONG> (Thumb, 664 bytes, Stack size 48 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = isInflPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
</UL>

<P><STRONG><a name="[2e8]"></a>isInflPoint0</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isInflPoint0
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
</UL>

<P><STRONG><a name="[2e7]"></a>dealChPoint1</STRONG> (Thumb, 278 bytes, Stack size 20 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = dealChPoint1
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
</UL>

<P><STRONG><a name="[2e0]"></a>Bor_UpSplCtr</STRONG> (Thumb, 984 bytes, Stack size 80 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Bor_UpSplCtr &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
</UL>

<P><STRONG><a name="[2e1]"></a>Bor_Updatctl</STRONG> (Thumb, 18160 bytes, Stack size 184 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = Bor_Updatctl &rArr; Bor_UpSplCtr &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ctlIsocclu
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lines_intersection
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circle_center
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_UpSplCtr
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dealChPoint1
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isInflPoint0
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isInflPoint
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isChPoint
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dealChPoint
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatct2
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatData
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveRepe
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveAss
</UL>

<P><STRONG><a name="[2eb]"></a>Bor_docir</STRONG> (Thumb, 3168 bytes, Stack size 152 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Bor_docir &rArr; __hardfp_tan &rArr; __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqr
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getpoint_sum2
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circle_center
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_tan
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoArea
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatData
</UL>

<P><STRONG><a name="[2f4]"></a>Bor_ModMoArea</STRONG> (Thumb, 2974 bytes, Stack size 240 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 744<LI>Call Chain = Bor_ModMoArea &rArr; Bor_docur &rArr; Bor_doline &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docur
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doline
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
</UL>

<P><STRONG><a name="[2f5]"></a>Bor_doTack</STRONG> (Thumb, 3030 bytes, Stack size 200 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = Bor_doTack &rArr; Bor_dofeed &rArr; Bor_MoveData
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_IsneedTrim
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModTack
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatData
</UL>

<P><STRONG><a name="[2f6]"></a>Bor_Ctsplinectl</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Bor_Ctsplinectl &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatData
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveRepe
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveAss
</UL>

<P><STRONG><a name="[2f7]"></a>Bor_ctNewPat</STRONG> (Thumb, 414 bytes, Stack size 96 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Bor_ctNewPat
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatData
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveRepe
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveAss
</UL>

<P><STRONG><a name="[2f8]"></a>Bor_CreatData</STRONG> (Thumb, 9682 bytes, Stack size 1776 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2488<LI>Call Chain = Bor_CreatData &rArr; Bor_ModPindis &rArr; Bor_docur &rArr; Bor_doline &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ctNewPat
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Ctsplinectl
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doTack
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPindis
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docur
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doline
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_IsneedTrim
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[2f9]"></a>sew_ctOverlap</STRONG> (Thumb, 650 bytes, Stack size 88 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = sew_ctOverlap &rArr; Bor_MoveData
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
</UL>

<P><STRONG><a name="[2fa]"></a>Bor_doSpeed</STRONG> (Thumb, 250 bytes, Stack size 64 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Bor_doSpeed &rArr; Bor_MoveData
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[2fb]"></a>Bor_doPF</STRONG> (Thumb, 154 bytes, Stack size 64 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Bor_doPF &rArr; Bor_MoveData
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
</UL>

<P><STRONG><a name="[2fc]"></a>Bor_doLF</STRONG> (Thumb, 172 bytes, Stack size 72 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Bor_doLF &rArr; Bor_MoveData
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
</UL>

<P><STRONG><a name="[2fd]"></a>Bor_CreatUnDO</STRONG> (Thumb, 222 bytes, Stack size 80 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Bor_CreatUnDO &rArr; Bor_CalPatLim &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[2fe]"></a>Bor_CreatDelData</STRONG> (Thumb, 1106 bytes, Stack size 112 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Bor_CreatDelData &rArr; Bor_CalPatLim &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[2ff]"></a>Bor_ConZoom</STRONG> (Thumb, 2052 bytes, Stack size 136 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = Bor_ConZoom &rArr; Bor_ModPindis &rArr; Bor_docur &rArr; Bor_doline &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPindis
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[300]"></a>Bor_ConMirr</STRONG> (Thumb, 8724 bytes, Stack size 144 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = Bor_ConMirr &rArr; Bor_CalPatLim &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPFval
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[621]"></a>Bor_ConCopy</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bor_patfun.o(.text), UNUSED)

<P><STRONG><a name="[622]"></a>Bor_ConShrin</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bor_patfun.o(.text), UNUSED)

<P><STRONG><a name="[301]"></a>Bor_ConSpin</STRONG> (Thumb, 1460 bytes, Stack size 152 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Bor_ConSpin &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[302]"></a>Bor_ConCalAssArea</STRONG> (Thumb, 408 bytes, Stack size 80 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Bor_ConCalAssArea &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[303]"></a>Bor_getStPin</STRONG> (Thumb, 162 bytes, Stack size 64 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Bor_getStPin &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
</UL>

<P><STRONG><a name="[304]"></a>Bor_ConveAss</STRONG> (Thumb, 1386 bytes, Stack size 200 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = Bor_ConveAss &rArr; Bor_ModPindis &rArr; Bor_docur &rArr; Bor_doline &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ctNewPat
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Ctsplinectl
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPindis
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[305]"></a>Bor_ConveRepe</STRONG> (Thumb, 1524 bytes, Stack size 208 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = Bor_ConveRepe &rArr; Bor_ModPindis &rArr; Bor_docur &rArr; Bor_doline &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ctNewPat
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Ctsplinectl
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPindis
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doline
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[306]"></a>Bor_ConveStartEnd</STRONG> (Thumb, 862 bytes, Stack size 192 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = Bor_ConveStartEnd &rArr; Bor_CalPatLim &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[307]"></a>Bor_Isocclu</STRONG> (Thumb, 352 bytes, Stack size 104 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Bor_Isocclu &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
</UL>

<P><STRONG><a name="[308]"></a>Bor_ModTack</STRONG> (Thumb, 410 bytes, Stack size 136 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = Bor_ModTack &rArr; Bor_doTack &rArr; Bor_dofeed &rArr; Bor_MoveData
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doTack
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
</UL>

<P><STRONG><a name="[309]"></a>Bor_dealFeed</STRONG> (Thumb, 202 bytes, Stack size 96 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Bor_dealFeed &rArr; Bor_dofeed &rArr; Bor_MoveData
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_copyImgs
</UL>

<P><STRONG><a name="[30a]"></a>Bor_copyImgs</STRONG> (Thumb, 3850 bytes, Stack size 256 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = Bor_copyImgs &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dealFeed
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[30b]"></a>Bor_2deal</STRONG> (Thumb, 310 bytes, Stack size 104 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Bor_2deal &rArr; Bor_dofeed &rArr; Bor_MoveData
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[25b]"></a>Juki_TO_Bor</STRONG> (Thumb, 2554 bytes, Stack size 144 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = Juki_TO_Bor &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_BaseAddr
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mysetU16
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copyU16
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCD_2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_PatFile
</UL>

<P><STRONG><a name="[30c]"></a>Juki_dofeed</STRONG> (Thumb, 280 bytes, Stack size 40 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Juki_dofeed &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getpoint_sum
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_TO_Juki
</UL>

<P><STRONG><a name="[30e]"></a>Juki_Drawdat</STRONG> (Thumb, 180 bytes, Stack size 20 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Juki_Drawdat
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_TO_Juki
</UL>

<P><STRONG><a name="[30d]"></a>Bor_TO_Juki</STRONG> (Thumb, 1956 bytes, Stack size 152 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = Bor_TO_Juki &rArr; Juki_dofeed &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mysetU16
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BorCmdAnaly
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juki_Drawdat
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juki_dofeed
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[310]"></a>bor_getPointXY</STRONG> (Thumb, 74 bytes, Stack size 80 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = bor_getPointXY &rArr; Bor_feedInfo &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[311]"></a>getSewPoint_sum</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bor_patfun.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>

<P><STRONG><a name="[312]"></a>sewVerPosZag</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, bor_patfun.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis_zag
</UL>

<P><STRONG><a name="[314]"></a>sew_getPinAddr</STRONG> (Thumb, 134 bytes, Stack size 64 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sew_getPinAddr &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[315]"></a>sew_UpFeed</STRONG> (Thumb, 686 bytes, Stack size 136 bytes, bor_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = sew_UpFeed &rArr; Bor_CalPatLim &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[316]"></a>sew_UpFeed1</STRONG> (Thumb, 538 bytes, Stack size 144 bytes, bor_patfun.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[317]"></a>Mit_CailPadOffestPF</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Mit_CailPadOffestPF
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Stpoint
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailPfootVal
</UL>

<P><STRONG><a name="[516]"></a>Mit_CailPadOffestLF</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Mit_CailPadOffestLF
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[318]"></a>Mit_DealSaveData</STRONG> (Thumb, 424 bytes, Stack size 64 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Mit_DealSaveData &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCD_2Hex
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[480]"></a>Mit_CalPFlimt</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Mit_CalPFlimt
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDrawScale
</UL>

<P><STRONG><a name="[319]"></a>Mit_To_Bor</STRONG> (Thumb, 3382 bytes, Stack size 104 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = Mit_To_Bor &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_BaseAddr
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mysetU16
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copyU16
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCD_2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[31a]"></a>Mit_do_feed1</STRONG> (Thumb, 382 bytes, Stack size 56 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Mit_do_feed1 &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getpoint_sum
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_To_Mit
</UL>

<P><STRONG><a name="[30f]"></a>BorCmdAnaly</STRONG> (Thumb, 340 bytes, Stack size 48 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BorCmdAnaly &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_TO_Juki
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_To_Mit
</UL>

<P><STRONG><a name="[31b]"></a>Bor_To_Mit</STRONG> (Thumb, 2504 bytes, Stack size 160 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = Bor_To_Mit &rArr; Mit_do_feed1 &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mysetU16
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copyU16
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqr
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_feed1
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BorCmdAnaly
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[31c]"></a>mitFindPinAndPos</STRONG> (Thumb, 160 bytes, Stack size 56 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mitFindPinAndPos
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[31d]"></a>mitP2Pmove</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = mitP2Pmove &rArr; Comm_RelationMove &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RelationMove
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[31e]"></a>Mit_do_endbt</STRONG> (Thumb, 550 bytes, Stack size 40 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Mit_do_endbt
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Create_Data
</UL>

<P><STRONG><a name="[31f]"></a>Mit_do_repeat</STRONG> (Thumb, 602 bytes, Stack size 48 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Mit_do_repeat
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Create_Data
</UL>

<P><STRONG><a name="[320]"></a>Mit_do_feed</STRONG> (Thumb, 614 bytes, Stack size 56 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Mit_do_feed &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getpoint_sum
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Create_Data
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CreateAllData
</UL>

<P><STRONG><a name="[321]"></a>Mit_do_srtbt</STRONG> (Thumb, 384 bytes, Stack size 40 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Mit_do_srtbt
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Create_Data
</UL>

<P><STRONG><a name="[323]"></a>Mit_Addition_XYData</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Mit_Addition_XYData
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Disconnect_DrawData
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailModifyStitchPara
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Do_Offset
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CialMutiSplinePoint
</UL>

<P><STRONG><a name="[322]"></a>Mit_CialMutiSplinePoint</STRONG> (Thumb, 456 bytes, Stack size 80 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Mit_CialMutiSplinePoint &rArr; Mit_Addition_XYData
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Addition_XYData
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_figurepoint_spline
</UL>

<P><STRONG><a name="[324]"></a>Mit_figurepoint_spline</STRONG> (Thumb, 1848 bytes, Stack size 64 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verticalline_pos2
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lines_intersection1
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CialMutiSplinePoint
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Create_Data
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Disconnect_DrawData
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Do_Offset
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailSplinePNum
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_spline
</UL>

<P><STRONG><a name="[327]"></a>Mit_do_spline</STRONG> (Thumb, 6504 bytes, Stack size 256 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verticalline_pos_zag
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getpoint_sum
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_figurepoint_spline
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Create_Data
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Disconnect_DrawData
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailSplinePNum
</UL>

<P><STRONG><a name="[328]"></a>Mit_do_line</STRONG> (Thumb, 2298 bytes, Stack size 48 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Mit_do_line &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verticalline_pos
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getpoint_sum2
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getpoint_sum
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Create_Data
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_polygon
</UL>

<P><STRONG><a name="[329]"></a>Mit_do_arc</STRONG> (Thumb, 3274 bytes, Stack size 96 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = Mit_do_arc &rArr; __hardfp_tan &rArr; __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqr
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getpoint_sum2
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_tan
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Create_Data
</UL>

<P><STRONG><a name="[32a]"></a>Mit_do_polygon</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Mit_do_polygon &rArr; Mit_do_line &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_line
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Create_Data
</UL>

<P><STRONG><a name="[32b]"></a>Mit_do_point</STRONG> (Thumb, 318 bytes, Stack size 32 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Mit_do_point &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Create_Data
</UL>

<P><STRONG><a name="[32c]"></a>Mit_Create_Data</STRONG> (Thumb, 15426 bytes, Stack size 104 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = Mit_Create_Data &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verticalline_pos
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lines_intersection
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circle_center
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_point
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_polygon
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_arc
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_line
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_spline
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_figurepoint_spline
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_srtbt
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_feed
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_repeat
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_endbt
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CreateAllData
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[32d]"></a>mit_ctOverlap</STRONG> (Thumb, 752 bytes, Stack size 40 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = mit_ctOverlap &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis
</UL>
<BR>[Called By]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
</UL>

<P><STRONG><a name="[330]"></a>mit_getRepNexPins</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = mit_getRepNexPins
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailSplinePad
</UL>

<P><STRONG><a name="[32f]"></a>mit_getRepConPins</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = mit_getRepConPins
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailSplinePad
</UL>

<P><STRONG><a name="[32e]"></a>Mit_CailSplinePad</STRONG> (Thumb, 2592 bytes, Stack size 152 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = Mit_CailSplinePad &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verticalline_pos
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lines_intersection
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_getRepConPins
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_getRepNexPins
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CreateAllData
</UL>

<P><STRONG><a name="[331]"></a>Mit_CreateAllData</STRONG> (Thumb, 5212 bytes, Stack size 136 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = Mit_CreateAllData &rArr; Mit_Create_Data &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Create_Data
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailSplinePad
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_feed
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_CtToMod
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_setRepConPins
</UL>

<P><STRONG><a name="[332]"></a>Mit_getLinePins</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, mit_patfun.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getpoint_sum2
</UL>

<P><STRONG><a name="[333]"></a>Mit_Analyse_Data</STRONG> (Thumb, 778 bytes, Stack size 40 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Mit_Analyse_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[334]"></a>Mit_Analyse_Data1</STRONG> (Thumb, 658 bytes, Stack size 40 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Mit_Analyse_Data1
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Disconnect_DrawData_N
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Disconnect_DrawData
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailModifyStitchPara
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_cailNextPfootDrawadd
</UL>

<P><STRONG><a name="[336]"></a>Mit_CailPolygonLineVal</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Mit_CailPolygonLineVal
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Analyse_SplineData
</UL>

<P><STRONG><a name="[335]"></a>Mit_Analyse_SplineData</STRONG> (Thumb, 1036 bytes, Stack size 40 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Mit_Analyse_SplineData &rArr; Mit_CailPolygonLineVal
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailPolygonLineVal
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_CtToMod
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
</UL>

<P><STRONG><a name="[337]"></a>Mit_AnalyseDataCorrect</STRONG> (Thumb, 628 bytes, Stack size 32 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Mit_AnalyseDataCorrect
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_CtToMod
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
</UL>

<P><STRONG><a name="[338]"></a>Mit_CailSavePadAdd</STRONG> (Thumb, 712 bytes, Stack size 40 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Mit_CailSavePadAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBakData
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_SaveSregData
</UL>

<P><STRONG><a name="[33a]"></a>Mit_SaveSregData</STRONG> (Thumb, 650 bytes, Stack size 48 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Mit_SaveSregData &rArr; Mit_CailSavePadAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBakData
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailSavePadAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_ConvertMultiDraw
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
</UL>

<P><STRONG><a name="[33b]"></a>Mit_CailSplinePNum</STRONG> (Thumb, 246 bytes, Stack size 24 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = Mit_CailSplinePNum &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_spline
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_figurepoint_spline
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_ConvertMultiDraw
</UL>

<P><STRONG><a name="[33d]"></a>Mit_Set_DrawData1</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Mit_Set_DrawData1
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Disconnect_DrawData
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_SetPfootDrawData
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Do_Offset
</UL>

<P><STRONG><a name="[33e]"></a>Mit_Set_DrawData</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Mit_Set_DrawData
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Disconnect_DrawData
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Do_Offset
</UL>

<P><STRONG><a name="[33c]"></a>Mit_Do_Offset</STRONG> (Thumb, 2318 bytes, Stack size 72 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Mit_Do_Offset &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Set_DrawData
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Set_DrawData1
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_figurepoint_spline
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Addition_XYData
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_ConvertMultiDraw
</UL>

<P><STRONG><a name="[33f]"></a>Mit_ConvertMultiDraw</STRONG> (Thumb, 2562 bytes, Stack size 64 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = Mit_ConvertMultiDraw &rArr; Mit_CailSplinePNum &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Do_Offset
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailSplinePNum
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_SaveSregData
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_CtToMod
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
</UL>

<P><STRONG><a name="[341]"></a>Mit_UpdataSregData</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, mit_patfun.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>

<P><STRONG><a name="[342]"></a>Mit_ReadSregData</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Mit_ReadSregData
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
</UL>

<P><STRONG><a name="[343]"></a>Mit_cailNextPfootDrawadd</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Mit_cailNextPfootDrawadd &rArr; Mit_Analyse_Data1
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Analyse_Data1
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Disconnect_DrawData
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_SetPfootDrawData
</UL>

<P><STRONG><a name="[344]"></a>Mit_SetPfootDrawData</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Mit_SetPfootDrawData &rArr; Mit_cailNextPfootDrawadd &rArr; Mit_Analyse_Data1
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_cailNextPfootDrawadd
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Set_DrawData1
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Disconnect_DrawData
</UL>

<P><STRONG><a name="[348]"></a>Mit_Get_XYData</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Mit_Get_XYData
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Disconnect_DrawData
</UL>

<P><STRONG><a name="[349]"></a>Mit_Check_Direction</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Mit_Check_Direction
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Disconnect_DrawData
</UL>

<P><STRONG><a name="[345]"></a>Mit_CailModifyStitchPara</STRONG> (Thumb, 244 bytes, Stack size 56 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Mit_CailModifyStitchPara &rArr; Mit_Analyse_Data1
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Analyse_Data1
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Addition_XYData
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Disconnect_DrawData
</UL>

<P><STRONG><a name="[347]"></a>Mit_CailPfmode</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Mit_CailPfmode
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Disconnect_DrawData
</UL>

<P><STRONG><a name="[346]"></a>Mit_Disconnect_DrawData</STRONG> (Thumb, 19244 bytes, Stack size 152 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = Mit_Disconnect_DrawData &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Analyse_Data1
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailPfmode
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailModifyStitchPara
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Check_Direction
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Get_XYData
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_SetPfootDrawData
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_cailNextPfootDrawadd
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Set_DrawData
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Set_DrawData1
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_spline
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_figurepoint_spline
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Addition_XYData
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Disconnect_DrawData_N
</UL>

<P><STRONG><a name="[34a]"></a>Mit_Npoint_Dis</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Mit_Npoint_Dis
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
</UL>

<P><STRONG><a name="[34b]"></a>Mit_Disconnect_DrawData_N</STRONG> (Thumb, 368 bytes, Stack size 48 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = Mit_Disconnect_DrawData_N &rArr; Mit_Disconnect_DrawData &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Analyse_Data1
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Disconnect_DrawData
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
</UL>

<P><STRONG><a name="[34c]"></a>Mit_CailPfootVal</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Mit_CailPfootVal &rArr; Mit_CailPadOffestPF
</UL>
<BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailPadOffestPF
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
</UL>

<P><STRONG><a name="[34d]"></a>Mit_Modify_Data</STRONG> (Thumb, 18462 bytes, Stack size 136 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = Mit_Modify_Data &rArr; Mit_CreateAllData &rArr; Mit_Create_Data &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Analyse_Data1
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_ReadSregData
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CreateAllData
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mitBackupSREG
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_xyposi
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailPfootVal
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Disconnect_DrawData_N
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Npoint_Dis
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Disconnect_DrawData
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailModifyStitchPara
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_SaveSregData
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[351]"></a>Mit_Draw_Centre</STRONG> (Thumb, 290 bytes, Stack size 36 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Mit_Draw_Centre
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[350]"></a>Mit_Convert_Data</STRONG> (Thumb, 7996 bytes, Stack size 120 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = Mit_Convert_Data &rArr; Mit_CreateAllData &rArr; Mit_Create_Data &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Analyse_Data1
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_ReadSregData
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Draw_Centre
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CreateAllData
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailPadOffestPF
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mitBackupSREG
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circle_center
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_SaveSregData
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[352]"></a>Mit_SaveSplPatData</STRONG> (Thumb, 904 bytes, Stack size 40 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Mit_SaveSplPatData
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBakData
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_CtToMod
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
</UL>

<P><STRONG><a name="[353]"></a>mit_setRepConPins</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = mit_setRepConPins &rArr; Mit_CreateAllData &rArr; Mit_Create_Data &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CreateAllData
</UL>
<BR>[Called By]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
</UL>

<P><STRONG><a name="[354]"></a>mit_getPointXY</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mit_getPointXY
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
</UL>

<P><STRONG><a name="[355]"></a>mit_getExCodeData</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mit_getExCodeData
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[512]"></a>mit_getPinsMsg</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mit_getPinsMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[356]"></a>mit_CtToMod</STRONG> (Thumb, 490 bytes, Stack size 32 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = mit_CtToMod &rArr; Mit_CreateAllData &rArr; Mit_Create_Data &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_SaveSplPatData
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_ConvertMultiDraw
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Analyse_SplineData
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_AnalyseDataCorrect
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CreateAllData
</UL>
<BR>[Called By]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[514]"></a>mit_ModToCt</STRONG> (Thumb, 966 bytes, Stack size 36 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = mit_ModToCt
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[51c]"></a>mit_upInsetPs</STRONG> (Thumb, 152 bytes, Stack size 28 bytes, mit_patfun.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = mit_upInsetPs
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
</UL>

<P><STRONG><a name="[357]"></a>HCD_Init</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, usb_hcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HCD_Init &rArr; USB_OTG_CoreInitHost &rArr; USB_OTG_DriveVbus &rArr; USB_OTG_BSP_mDelay &rArr; BSP_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_SetCurrentMode
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_SelectCore
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EnableGlobalInt
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_DisableGlobalInt
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInit
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>

<P><STRONG><a name="[37a]"></a>HCD_GetCurrentSpeed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb_hcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>

<P><STRONG><a name="[35e]"></a>HCD_ResetPort</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, usb_hcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HCD_ResetPort &rArr; USB_OTG_ResetPort &rArr; USB_OTG_BSP_mDelay &rArr; BSP_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ResetPort
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>

<P><STRONG><a name="[145]"></a>HCD_IsDeviceConnected</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_hcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ProgramFile
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtMemory_Status
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskPatFile
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFileByName
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDiskFiles
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deleteDiskFile
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SysBackupkFile
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_RecordFile
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_PatFile
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_GroupFile
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_SysBackupkFile
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_PatFile
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk_Group
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete_PatFile
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete_GroupFile
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disktest
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskGropFileByName
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskEmbFile
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskGroupFile
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFile
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;renameDiskFile
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;newDiskFolder
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USH_User_App
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk_G
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;importParas
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exportParas
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash2bin
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3tobin
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;binfiletoflash
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3toflash
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playmp3
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_UDISK_Write
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_UDISK_Read
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_DecodeCSW
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_UDISK_Status
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Read10
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Write10
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_TestUnitReady
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_RequestSense
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ReadCapacity10
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ModeSense6
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Init
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[378]"></a>HCD_IsPortEnabled</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_hcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>

<P><STRONG><a name="[36d]"></a>HCD_GetCurrentFrame</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_hcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleControl
</UL>

<P><STRONG><a name="[36c]"></a>HCD_GetURB_State</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_hcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleControl
</UL>

<P><STRONG><a name="[3eb]"></a>HCD_GetXferCnt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_hcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_DecodeCSW
</UL>

<P><STRONG><a name="[623]"></a>HCD_GetHCState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_hcd.o(.text), UNUSED)

<P><STRONG><a name="[360]"></a>HCD_HC_Init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_hcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Init
</UL>

<P><STRONG><a name="[362]"></a>HCD_SubmitRequest</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usb_hcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_StartXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_IsocSendData
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_IsocReceiveData
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_InterruptSendData
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_InterruptReceiveData
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BulkReceiveData
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BulkSendData
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlSendSetup
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlSendData
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReceiveData
</UL>

<P><STRONG><a name="[a]"></a>USBH_Connected</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usbh_core.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_core.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>USBH_PortEnabled</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usbh_core.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_core.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>USBH_PortDisabled</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usbh_core.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_core.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>USBH_Disconnected</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usbh_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_Disconnected
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_DriveVBUS
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_DisableGlobalInt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_core.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>USBH_SOF</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usbh_core.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_core.o(.data)
</UL>
<P><STRONG><a name="[365]"></a>USBH_DeInit</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, usbh_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free_Channel
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>

<P><STRONG><a name="[241]"></a>USBH_Init</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, usbh_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = USBH_Init &rArr; HCD_Init &rArr; USB_OTG_CoreInitHost &rArr; USB_OTG_DriveVbus &rArr; USB_OTG_BSP_mDelay &rArr; BSP_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Init
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_EnableInterrupt
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_ConfigVBUS
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeInit
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
</UL>

<P><STRONG><a name="[36a]"></a>USBH_HandleControl</STRONG> (Thumb, 458 bytes, Stack size 40 bytes, usbh_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = USBH_HandleControl &rArr; USBH_CtlSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlSendSetup
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlSendData
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReceiveData
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_GetURB_State
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_GetCurrentFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>

<P><STRONG><a name="[37c]"></a>USBH_ErrorHandle</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, usbh_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_ErrorHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>

<P><STRONG><a name="[243]"></a>USBH_Process</STRONG> (Thumb, 454 bytes, Stack size 32 bytes, usbh_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = USBH_Process &rArr; USBH_HandleEnum &rArr; USBH_Get_CfgDesc &rArr; USBH_ParseCfgDesc
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Open_Channel
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeAllocate_AllChannel
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Alloc_Channel
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ErrorHandle
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleControl
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeInit
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsPortEnabled
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_ResetPort
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_GetCurrentSpeed
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Process
</UL>

<P><STRONG><a name="[37e]"></a>USB_OTG_BSP_Resume</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, usbh_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadHPRT0
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
</UL>

<P><STRONG><a name="[380]"></a>USB_OTG_BSP_Suspend</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, usbh_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadHPRT0
</UL>

<P><STRONG><a name="[386]"></a>USBH_MSC_ErrorHandle</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, usbh_msc_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[385]"></a>USBH_MSC_TestUnitReady</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, usbh_msc_scsi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_MSC_TestUnitReady
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[387]"></a>USBH_MSC_ReadCapacity10</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, usbh_msc_scsi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_MSC_ReadCapacity10
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[388]"></a>USBH_MSC_ModeSense6</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, usbh_msc_scsi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_MSC_ModeSense6
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[38a]"></a>USBH_MSC_RequestSense</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, usbh_msc_scsi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_MSC_RequestSense
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[38b]"></a>USBH_MSC_Write10</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, usbh_msc_scsi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBH_MSC_Write10
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_UDISK_Write
</UL>

<P><STRONG><a name="[38c]"></a>USBH_MSC_Read10</STRONG> (Thumb, 204 bytes, Stack size 56 bytes, usbh_msc_scsi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USBH_MSC_Read10
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_UDISK_Read
</UL>

<P><STRONG><a name="[395]"></a>clust2sect</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>

<P><STRONG><a name="[390]"></a>get_fat</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = get_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
</UL>

<P><STRONG><a name="[391]"></a>put_fat</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
</UL>

<P><STRONG><a name="[397]"></a>gen_numname</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gen_numname
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[245]"></a>f_mount</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = f_mount
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ProgramFile
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Format_Disk
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_MSC_FATFSINIT
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFCD_USR_MSC_FATFSRESET
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_MSC_FATFSRESET
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFCD_USR_MSC_FATFSINIT
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_USR_MSC_FATFSRESET
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_USR_MSC_FATFSINIT
</UL>

<P><STRONG><a name="[1cd]"></a>f_open</STRONG> (Thumb, 314 bytes, Stack size 96 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ProgramFile
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskPatFile
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFileByName
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDiskFiles
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SysBackupkFile
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_RecordFile
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_PatFile
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_GroupFile
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_SysBackupkFile
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_PatFile
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk_Group
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_AviFile
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anyWriteScreeData
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_AviFile
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_BookData
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_BookFile
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskGropFileByName
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mf_copy
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskEmbFile
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskGroupFile
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFile
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk_G
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;importParas
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exportParas
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash2bin
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3tobin
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;binfiletoflash
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3toflash
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playmp3
</UL>

<P><STRONG><a name="[1ce]"></a>f_read</STRONG> (Thumb, 286 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = f_read &rArr; get_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ProgramFile
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFileByName
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDiskFiles
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_SysBackupkFile
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_PatFile
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk_Group
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_AviFile
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Avi_Play
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anyWriteScreeData
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawAviProgress
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_BookData
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskGropFileByName
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mf_copy
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFile
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk_G
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;importParas
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;binfiletoflash
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3toflash
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playmp3
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_gets
</UL>

<P><STRONG><a name="[1de]"></a>f_write</STRONG> (Thumb, 394 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskPatFile
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SysBackupkFile
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_RecordFile
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_PatFile
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_GroupFile
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mf_copy
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskEmbFile
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskGroupFile
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exportParas
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash2bin
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3tobin
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_putc
</UL>

<P><STRONG><a name="[3a8]"></a>f_sync</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = f_sync &rArr; sync &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[1cf]"></a>f_close</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = f_close &rArr; f_sync &rArr; sync &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ProgramFile
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskPatFile
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFileByName
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDiskFiles
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SysBackupkFile
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_RecordFile
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_PatFile
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_GroupFile
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_SysBackupkFile
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_PatFile
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk_Group
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Avi_Play
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawAviProgress
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_AviFile
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_BookFile
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskGropFileByName
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mf_copy
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskEmbFile
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskGroupFile
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFile
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk_G
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;importParas
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exportParas
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash2bin
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3tobin
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;binfiletoflash
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3toflash
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playmp3
</UL>

<P><STRONG><a name="[624]"></a>f_chdrive</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(.text), UNUSED)

<P><STRONG><a name="[3a9]"></a>f_chdir</STRONG> (Thumb, 76 bytes, Stack size 56 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[3aa]"></a>f_getcwd</STRONG> (Thumb, 274 bytes, Stack size 120 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>

<P><STRONG><a name="[25d]"></a>f_lseek</STRONG> (Thumb, 254 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ProgramFile
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_AviFile
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawAviProgress
</UL>

<P><STRONG><a name="[1cc]"></a>f_opendir</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ProgramFile
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFileByName
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDiskFiles
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deleteDiskFile
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copyDiskPatFile
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_SysBackupkFile
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_PatFile
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk_Group
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete_PatFile
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete_GroupFile
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_AviFile
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_BookFile
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disktest
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mf_dcopy
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_DeleteIntFile
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFile
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;renameDiskFile
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;newDiskFolder
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk_G
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;importParas
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash2bin
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3tobin
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;binfiletoflash
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3toflash
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playmp3
</UL>

<P><STRONG><a name="[249]"></a>f_readdir</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = f_readdir &rArr; dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ProgramFile
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDiskFiles
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deleteDiskFile
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copyDiskPatFile
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_SysBackupkFile
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_PatFile
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk_Group
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete_PatFile
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete_GroupFile
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_AviFile
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_BookFile
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mf_dcopy
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_DeleteIntFile
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFile
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk_G
</UL>

<P><STRONG><a name="[3ab]"></a>f_stat</STRONG> (Thumb, 62 bytes, Stack size 72 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
</UL>

<P><STRONG><a name="[3ac]"></a>f_getfree</STRONG> (Thumb, 208 bytes, Stack size 48 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[3ad]"></a>f_truncate</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
</UL>

<P><STRONG><a name="[24b]"></a>f_unlink</STRONG> (Thumb, 178 bytes, Stack size 96 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deleteDiskFile
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete_PatFile
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete_GroupFile
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_DeleteIntFile
</UL>

<P><STRONG><a name="[1db]"></a>f_mkdir</STRONG> (Thumb, 414 bytes, Stack size 112 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskPatFile
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SysBackupkFile
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_RecordFile
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_PatFile
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_GroupFile
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mf_dcopy
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;newDiskFolder
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exportParas
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash2bin
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3tobin
</UL>

<P><STRONG><a name="[3ae]"></a>f_chmod</STRONG> (Thumb, 86 bytes, Stack size 72 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[3af]"></a>f_utime</STRONG> (Thumb, 92 bytes, Stack size 64 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[26b]"></a>f_rename</STRONG> (Thumb, 280 bytes, Stack size 136 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;renameDiskFile
</UL>

<P><STRONG><a name="[261]"></a>f_mkfs</STRONG> (Thumb, 1264 bytes, Stack size 72 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = f_mkfs &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Format_Disk
</UL>

<P><STRONG><a name="[3b0]"></a>f_gets</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>

<P><STRONG><a name="[3b1]"></a>f_putc</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_putc
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_putc
</UL>

<P><STRONG><a name="[3b2]"></a>f_puts</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_putc
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
</UL>

<P><STRONG><a name="[3b3]"></a>f_printf</STRONG> (Thumb, 480 bytes, Stack size 72 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_putc
</UL>

<P><STRONG><a name="[71]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = OTG_FS_IRQHandler &rArr; USBH_OTG_ISR_Handler &rArr; USB_OTG_USBH_handle_hc_ISR &rArr; USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>USBH_USR_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>USBH_USR_DeviceAttached</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>USBH_USR_DeviceDisconnected</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_USR_DeviceDisconnected &rArr; USB_USR_MSC_FATFSRESET &rArr; f_mount
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_MSC_FATFSRESET
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>USBH_USR_ResetDevice</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>USBH_USR_DeviceSpeedDetected</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>USBH_USR_Device_DescAvailable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>USBH_USR_DeviceAddressAssigned</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>USBH_USR_Configuration_DescAvailable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>USBH_USR_Manufacturer_String</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>USBH_USR_Product_String</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>USBH_USR_SerialNum_String</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>USBH_USR_EnumerationDone</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>USBH_USR_DeviceNotSupported</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>USBH_USR_UserInput</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>USBH_USR_OverCurrentDetected</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[3b5]"></a>IS_checkLogin</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = IS_checkLogin
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_USR_MSC_Application
</UL>

<P><STRONG><a name="[147]"></a>USBH_UDISK_Read</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = USBH_UDISK_Read &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Read10
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_USR_MSC_Application
</UL>

<P><STRONG><a name="[21]"></a>USBH_USR_MSC_Application</STRONG> (Thumb, 112 bytes, Stack size 528 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = USBH_USR_MSC_Application &rArr; USBH_UDISK_Read &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_MSC_FATFSINIT
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_UDISK_Read
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IS_checkLogin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>USBH_USR_DeInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>USBH_USR_UnrecoveredError</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbh_usr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_usr.o(.data)
</UL>
<P><STRONG><a name="[3b6]"></a>USBH_UDISK_Status</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usbh_usr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>

<P><STRONG><a name="[14c]"></a>USBH_UDISK_Write</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, usbh_usr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = USBH_UDISK_Write &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Write10
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[284]"></a>MjpegDecode</STRONG> (Thumb, 716 bytes, Stack size 992 bytes, mjpeg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272<LI>Call Chain = MjpegDecode &rArr; jpeg_CreateDecompress &rArr; jinit_memory_mgr &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePage
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_std_error
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_start_decompress
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_read_scanlines
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_read_header
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_finish_decompress
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_destroy_decompress
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_CreateDecompress
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setjmp
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Avi_Play
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anyWriteScreeData
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_BookData
</UL>

<P><STRONG><a name="[2a6]"></a>GPIO_Set</STRONG> (Thumb, 128 bytes, Stack size 36 bytes, ctiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIO_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9xx_Init
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Init
</UL>

<P><STRONG><a name="[3c1]"></a>delay_us</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ctiic.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Start
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Send_Byte
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Read_Byte
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_NAck
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Ack
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_Delay
</UL>

<P><STRONG><a name="[3c0]"></a>CT_Delay</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctiic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>

<P><STRONG><a name="[204]"></a>CT_IIC_Init</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, ctiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = CT_IIC_Init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_Init
</UL>

<P><STRONG><a name="[207]"></a>CT_IIC_Start</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, ctiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CT_IIC_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9271_Write
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9271_Read
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Write
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Read
</UL>

<P><STRONG><a name="[20b]"></a>CT_IIC_Stop</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, ctiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CT_IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9271_Write
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9271_Read
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Write
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Read
</UL>

<P><STRONG><a name="[209]"></a>CT_IIC_Wait_Ack</STRONG> (Thumb, 68 bytes, Stack size 4 bytes, ctiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CT_IIC_Wait_Ack &rArr; CT_IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9271_Write
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9271_Read
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Write
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Read
</UL>

<P><STRONG><a name="[3c2]"></a>CT_IIC_Ack</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, ctiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CT_IIC_Ack
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Read_Byte
</UL>

<P><STRONG><a name="[3c3]"></a>CT_IIC_NAck</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ctiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CT_IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Read_Byte
</UL>

<P><STRONG><a name="[208]"></a>CT_IIC_Send_Byte</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, ctiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CT_IIC_Send_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9271_Write
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9271_Read
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Write
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Read
</UL>

<P><STRONG><a name="[20a]"></a>CT_IIC_Read_Byte</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, ctiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CT_IIC_Read_Byte &rArr; CT_IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_NAck
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Ack
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9271_Read
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_Read
</UL>

<P><STRONG><a name="[3cc]"></a>USB_OTG_WritePacket</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_nptxfempty_ISR
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_ptxfempty_ISR
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_StartXfer
</UL>

<P><STRONG><a name="[3d7]"></a>USB_OTG_ReadPacket</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_ReadPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_rx_qlvl_ISR
</UL>

<P><STRONG><a name="[358]"></a>USB_OTG_SelectCore</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_SelectCore
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
</UL>

<P><STRONG><a name="[35a]"></a>USB_OTG_CoreInit</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_OTG_CoreInit &rArr; USB_OTG_CoreReset &rArr; USB_OTG_BSP_uDelay &rArr; BSP_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreReset
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
</UL>

<P><STRONG><a name="[35d]"></a>USB_OTG_EnableGlobalInt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
</UL>

<P><STRONG><a name="[359]"></a>USB_OTG_DisableGlobalInt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Disconnected
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
</UL>

<P><STRONG><a name="[3c6]"></a>USB_OTG_FlushTxFifo</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay &rArr; BSP_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_StopHost
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
</UL>

<P><STRONG><a name="[3c7]"></a>USB_OTG_FlushRxFifo</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_FlushRxFifo &rArr; USB_OTG_BSP_uDelay &rArr; BSP_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_StopHost
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
</UL>

<P><STRONG><a name="[35b]"></a>USB_OTG_SetCurrentMode</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_OTG_SetCurrentMode &rArr; USB_OTG_BSP_mDelay &rArr; BSP_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
</UL>

<P><STRONG><a name="[625]"></a>USB_OTG_GetMode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_core.o(.text), UNUSED)

<P><STRONG><a name="[626]"></a>USB_OTG_IsDeviceMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usb_core.o(.text), UNUSED)

<P><STRONG><a name="[3d8]"></a>USB_OTG_IsHostMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usb_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[3d9]"></a>USB_OTG_ReadCoreItr</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[627]"></a>USB_OTG_ReadOtgItr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_core.o(.text), UNUSED)

<P><STRONG><a name="[3ca]"></a>USB_OTG_EnableHostInt</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_EnableHostInt
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
</UL>

<P><STRONG><a name="[37f]"></a>USB_OTG_ReadHPRT0</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_DriveVbus
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Suspend
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Resume
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ResetPort
</UL>

<P><STRONG><a name="[3c8]"></a>USB_OTG_DriveVbus</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_DriveVbus &rArr; USB_OTG_BSP_mDelay &rArr; BSP_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadHPRT0
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_DriveVBUS
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
</UL>

<P><STRONG><a name="[35f]"></a>USB_OTG_ResetPort</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_ResetPort &rArr; USB_OTG_BSP_mDelay &rArr; BSP_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadHPRT0
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_ResetPort
</UL>

<P><STRONG><a name="[3c9]"></a>USB_OTG_InitFSLSPClkSel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_port_ISR
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
</UL>

<P><STRONG><a name="[35c]"></a>USB_OTG_CoreInitHost</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_OTG_CoreInitHost &rArr; USB_OTG_DriveVbus &rArr; USB_OTG_BSP_mDelay &rArr; BSP_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_InitFSLSPClkSel
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_DriveVbus
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EnableHostInt
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushRxFifo
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushTxFifo
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_ConfigVBUS
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ResetPort
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_Init
</UL>

<P><STRONG><a name="[3cb]"></a>USB_OTG_IsEvenFrame</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_StartXfer
</UL>

<P><STRONG><a name="[3d3]"></a>USB_OTG_ReadHostAllChannels_intr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_ISR
</UL>

<P><STRONG><a name="[361]"></a>USB_OTG_HC_Init</STRONG> (Thumb, 236 bytes, Stack size 20 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_OTG_HC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Open_Channel
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Modify_Channel
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_HC_Init
</UL>

<P><STRONG><a name="[363]"></a>USB_OTG_HC_StartXfer</STRONG> (Thumb, 256 bytes, Stack size 20 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_IsEvenFrame
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>

<P><STRONG><a name="[381]"></a>USB_OTG_HC_Halt</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_OTG_HC_Halt
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_In_ISR
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_Out_ISR
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_InterfaceDeInit
</UL>

<P><STRONG><a name="[3d0]"></a>USB_OTG_HC_DoPing</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_HC_DoPing
</UL>
<BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_Out_ISR
</UL>

<P><STRONG><a name="[3cd]"></a>USB_OTG_StopHost</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, usb_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushRxFifo
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushTxFifo
</UL>

<P><STRONG><a name="[3b4]"></a>USBH_OTG_ISR_Handler</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USBH_OTG_ISR_Handler &rArr; USB_OTG_USBH_handle_hc_ISR &rArr; USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_rx_qlvl_ISR
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_nptxfempty_ISR
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_ptxfempty_ISR
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_ISR
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_port_ISR
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_Disconnect_ISR
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_IncompletePeriodicXfer_ISR
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadCoreItr
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_IsHostMode
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_IRQHandler
</UL>

<P><STRONG><a name="[37b]"></a>USBH_Open_Channel</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, usbh_hcs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USBH_Open_Channel &rArr; USB_OTG_HC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_InterfaceInit
</UL>

<P><STRONG><a name="[372]"></a>USBH_Modify_Channel</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, usbh_hcs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USBH_Modify_Channel &rArr; USB_OTG_HC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[379]"></a>USBH_Alloc_Channel</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, usbh_hcs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USBH_Alloc_Channel
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_InterfaceInit
</UL>

<P><STRONG><a name="[366]"></a>USBH_Free_Channel</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usbh_hcs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_InterfaceDeInit
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeInit
</UL>

<P><STRONG><a name="[37d]"></a>USBH_DeAllocate_AllChannel</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usbh_hcs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>

<P><STRONG><a name="[383]"></a>USBH_CtlReq</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, usbh_ioreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USBH_CtlReq
</UL>
<BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ClearDeviceFeature
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetDeviceFeature
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetInterface
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptor
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ClrFeature
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetCfg
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetAddress
</UL>

<P><STRONG><a name="[36b]"></a>USBH_CtlSendSetup</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, usbh_ioreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBH_CtlSendSetup &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleControl
</UL>

<P><STRONG><a name="[36f]"></a>USBH_CtlSendData</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, usbh_ioreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBH_CtlSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleControl
</UL>

<P><STRONG><a name="[36e]"></a>USBH_CtlReceiveData</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usbh_ioreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBH_CtlReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleControl
</UL>

<P><STRONG><a name="[3dc]"></a>USBH_BulkSendData</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, usbh_ioreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBH_BulkSendData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
</UL>

<P><STRONG><a name="[3dd]"></a>USBH_BulkReceiveData</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, usbh_ioreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
</UL>

<P><STRONG><a name="[3de]"></a>USBH_InterruptReceiveData</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, usbh_ioreq.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>

<P><STRONG><a name="[3df]"></a>USBH_InterruptSendData</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, usbh_ioreq.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>

<P><STRONG><a name="[3e0]"></a>USBH_IsocReceiveData</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usbh_ioreq.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>

<P><STRONG><a name="[3e1]"></a>USBH_IsocSendData</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usbh_ioreq.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_SubmitRequest
</UL>

<P><STRONG><a name="[3e2]"></a>USBH_GetDescriptor</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usbh_stdreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USBH_GetDescriptor &rArr; USBH_CtlReq
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_StringDesc
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_DevDesc
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_CfgDesc
</UL>

<P><STRONG><a name="[371]"></a>USBH_Get_DevDesc</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, usbh_stdreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USBH_Get_DevDesc &rArr; USBH_GetDescriptor &rArr; USBH_CtlReq
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[3e4]"></a>USBH_GetNextDesc</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbh_stdreq.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ParseCfgDesc
</UL>

<P><STRONG><a name="[3e3]"></a>USBH_ParseCfgDesc</STRONG> (Thumb, 292 bytes, Stack size 72 bytes, usbh_stdreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USBH_ParseCfgDesc
</UL>
<BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetNextDesc
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ParseInterfaceDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_CfgDesc
</UL>

<P><STRONG><a name="[375]"></a>USBH_Get_CfgDesc</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, usbh_stdreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USBH_Get_CfgDesc &rArr; USBH_ParseCfgDesc
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ParseCfgDesc
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[376]"></a>USBH_Get_StringDesc</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, usbh_stdreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USBH_Get_StringDesc &rArr; USBH_GetDescriptor &rArr; USBH_CtlReq
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_GetDescriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[373]"></a>USBH_SetAddress</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usbh_stdreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USBH_SetAddress &rArr; USBH_CtlReq
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[377]"></a>USBH_SetCfg</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usbh_stdreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USBH_SetCfg &rArr; USBH_CtlReq
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
</UL>

<P><STRONG><a name="[3e6]"></a>USBH_SetInterface</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usbh_stdreq.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>

<P><STRONG><a name="[3e7]"></a>USBH_SetDeviceFeature</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usbh_stdreq.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>

<P><STRONG><a name="[3e8]"></a>USBH_ClearDeviceFeature</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usbh_stdreq.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>

<P><STRONG><a name="[384]"></a>USBH_ClrFeature</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, usbh_stdreq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USBH_ClrFeature &rArr; USBH_CtlReq
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_BOT_Abort
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[382]"></a>USBH_MSC_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, usbh_msc_bot.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBH_MSC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[3e9]"></a>USBH_MSC_BOT_Abort</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, usbh_msc_bot.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USBH_MSC_BOT_Abort &rArr; USBH_ClrFeature &rArr; USBH_CtlReq
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ClrFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
</UL>

<P><STRONG><a name="[3ea]"></a>USBH_MSC_DecodeCSW</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, usbh_msc_bot.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_MSC_DecodeCSW
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_GetXferCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
</UL>

<P><STRONG><a name="[389]"></a>USBH_MSC_HandleBOTXfer</STRONG> (Thumb, 580 bytes, Stack size 48 bytes, usbh_msc_bot.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_DecodeCSW
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_BOT_Abort
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BulkReceiveData
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_BulkSendData
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_GetURB_State
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_UDISK_Write
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_UDISK_Read
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Handle
</UL>

<P><STRONG><a name="[3ed]"></a>OneGBKtoUNICODE</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ccsbcs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GBKToUnicode
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
</UL>

<P><STRONG><a name="[3ef]"></a>OneUNICODEtoGBK</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, ccsbcs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnicodeToGBK
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
</UL>

<P><STRONG><a name="[3ec]"></a>GBKToUnicode</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ccsbcs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneGBKtoUNICODE
</UL>

<P><STRONG><a name="[3ee]"></a>UnicodeToGBK</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ccsbcs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneUNICODEtoGBK
</UL>

<P><STRONG><a name="[3a0]"></a>ff_convert</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ccsbcs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneUNICODEtoGBK
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneGBKtoUNICODE
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[39a]"></a>ff_wtoupper</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ccsbcs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[367]"></a>USB_OTG_BSP_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>

<P><STRONG><a name="[369]"></a>USB_OTG_BSP_EnableInterrupt</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
</UL>

<P><STRONG><a name="[628]"></a>USB_OTG_BSP_DisableInterrupt</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_bsp.o(.text), UNUSED)

<P><STRONG><a name="[364]"></a>USB_OTG_BSP_DriveVBUS</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_DriveVbus
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Disconnected
</UL>

<P><STRONG><a name="[368]"></a>USB_OTG_BSP_ConfigVBUS</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_bsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Init
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitHost
</UL>

<P><STRONG><a name="[3c5]"></a>USB_OTG_BSP_uDelay</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_BSP_uDelay &rArr; BSP_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushRxFifo
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushTxFifo
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreReset
</UL>

<P><STRONG><a name="[374]"></a>USB_OTG_BSP_mDelay</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_BSP_mDelay &rArr; BSP_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_DriveVbus
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Resume
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_HandleEnum
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_SetCurrentMode
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ResetPort
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInit
</UL>

<P><STRONG><a name="[65]"></a>TIM7_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usb_bsp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3bb]"></a>jpeg_CreateDecompress</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, jdapimin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = jpeg_CreateDecompress &rArr; jinit_memory_mgr &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_memory_mgr
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_marker_reader
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_input_controller
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MjpegDecode
</UL>

<P><STRONG><a name="[3ba]"></a>jpeg_destroy_decompress</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, jdapimin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jpeg_destroy_decompress &rArr; jpeg_destroy
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MjpegDecode
</UL>

<P><STRONG><a name="[3f5]"></a>jpeg_abort_decompress</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, jdapimin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_abort
</UL>

<P><STRONG><a name="[3f7]"></a>jpeg_consume_input</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, jdapimin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = jpeg_consume_input &rArr; default_decompress_parms
</UL>
<BR>[Calls]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_decompress_parms
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_read_header
</UL>

<P><STRONG><a name="[3bc]"></a>jpeg_read_header</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, jdapimin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = jpeg_read_header &rArr; jpeg_consume_input &rArr; default_decompress_parms
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_consume_input
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_abort
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MjpegDecode
</UL>

<P><STRONG><a name="[629]"></a>jpeg_input_complete</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, jdapimin.o(.text), UNUSED)

<P><STRONG><a name="[62a]"></a>jpeg_has_multiple_scans</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, jdapimin.o(.text), UNUSED)

<P><STRONG><a name="[3bf]"></a>jpeg_finish_decompress</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, jdapimin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = jpeg_finish_decompress &rArr; jpeg_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_abort
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MjpegDecode
</UL>

<P><STRONG><a name="[3bd]"></a>jpeg_start_decompress</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, jdapistd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = jpeg_start_decompress &rArr; jinit_master_decompress &rArr; master_selection &rArr; jinit_1pass_quantizer &rArr; create_colormap &rArr; select_ncolors
</UL>
<BR>[Calls]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_master_decompress
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_pass_setup
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MjpegDecode
</UL>

<P><STRONG><a name="[3be]"></a>jpeg_read_scanlines</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, jdapistd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = jpeg_read_scanlines
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MjpegDecode
</UL>

<P><STRONG><a name="[62b]"></a>jpeg_read_raw_data</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, jdapistd.o(.text), UNUSED)

<P><STRONG><a name="[3fb]"></a>jpeg_start_output</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, jdapistd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_pass_setup
</UL>

<P><STRONG><a name="[62c]"></a>jpeg_finish_output</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, jdapistd.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>jpeg_resync_to_restart</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, jdmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = jpeg_resync_to_restart &rArr; next_marker
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_marker
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mjpeg.o(.text)
</UL>
<P><STRONG><a name="[3f2]"></a>jinit_marker_reader</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, jdmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = jinit_marker_reader
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_marker_reader
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_CreateDecompress
</UL>

<P><STRONG><a name="[62d]"></a>jpeg_save_markers</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, jdmarker.o(.text), UNUSED)

<P><STRONG><a name="[62e]"></a>jpeg_set_marker_processor</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, jdmarker.o(.text), UNUSED)

<P><STRONG><a name="[3b8]"></a>jpeg_std_error</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, jerror.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MjpegDecode
</UL>

<P><STRONG><a name="[3f6]"></a>jpeg_abort</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, jcomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = jpeg_abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_abort_decompress
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_read_header
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_finish_decompress
</UL>

<P><STRONG><a name="[3f4]"></a>jpeg_destroy</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, jcomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jpeg_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_destroy_decompress
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_exit
</UL>

<P><STRONG><a name="[401]"></a>jpeg_alloc_quant_table</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, jcomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jpeg_alloc_quant_table
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dqt
</UL>

<P><STRONG><a name="[3ff]"></a>jpeg_alloc_huff_table</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, jcomapi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jpeg_alloc_huff_table
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dht
</UL>

<P><STRONG><a name="[40d]"></a>jpeg_core_output_dimensions</STRONG> (Thumb, 656 bytes, Stack size 24 bytes, jdinput.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = jpeg_core_output_dimensions
</UL>
<BR>[Calls]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jdiv_round_up
</UL>
<BR>[Called By]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_calc_output_dimensions
</UL>

<P><STRONG><a name="[3f3]"></a>jinit_input_controller</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, jdinput.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jinit_input_controller
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_CreateDecompress
</UL>

<P><STRONG><a name="[411]"></a>jpeg_calc_output_dimensions</STRONG> (Thumb, 338 bytes, Stack size 24 bytes, jdmaster.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = jpeg_calc_output_dimensions &rArr; jpeg_core_output_dimensions
</UL>
<BR>[Calls]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;use_merged_upsample
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jdiv_round_up
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_core_output_dimensions
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[62f]"></a>jpeg_new_colormap</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, jdmaster.o(.text), UNUSED)

<P><STRONG><a name="[3fa]"></a>jinit_master_decompress</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, jdmaster.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = jinit_master_decompress &rArr; master_selection &rArr; jinit_1pass_quantizer &rArr; create_colormap &rArr; select_ncolors
</UL>
<BR>[Calls]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_start_decompress
</UL>

<P><STRONG><a name="[3f1]"></a>jinit_memory_mgr</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = jinit_memory_mgr &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_mem_term
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_mem_init
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_get_small
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_CreateDecompress
</UL>

<P><STRONG><a name="[40e]"></a>jdiv_round_up</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, jutils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_calc_output_dimensions
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_core_output_dimensions
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;per_scan_setup
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initial_setup
</UL>

<P><STRONG><a name="[433]"></a>jround_up</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, jutils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_upsampler
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_d_post_controller
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_d_coef_controller
</UL>

<P><STRONG><a name="[42c]"></a>jcopy_sample_rows</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, jutils.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = jcopy_sample_rows
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h2v2_upsample
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_upsample
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;merged_2v_upsample
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grayscale_convert
</UL>

<P><STRONG><a name="[42d]"></a>jcopy_block_row</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, jutils.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompress_smooth_data
</UL>

<P><STRONG><a name="[41c]"></a>jinit_arith_decoder</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, jdarith.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jinit_arith_decoder
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[41e]"></a>jinit_d_coef_controller</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, jdcoefct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = jinit_d_coef_controller
</UL>
<BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jround_up
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[418]"></a>jinit_color_deconverter</STRONG> (Thumb, 502 bytes, Stack size 24 bytes, jdcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = jinit_color_deconverter &rArr; build_bg_ycc_rgb_table
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_bg_ycc_rgb_table
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_ycc_rgb_table
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[41b]"></a>jinit_inverse_dct</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, jddctmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = jinit_inverse_dct
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[41d]"></a>jinit_huff_decoder</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, jdhuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = jinit_huff_decoder
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[41f]"></a>jinit_d_main_controller</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, jdmainct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = jinit_d_main_controller &rArr; alloc_funny_pointers
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_funny_pointers
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[417]"></a>jinit_merged_upsampler</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, jdmerge.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = jinit_merged_upsampler &rArr; build_ycc_rgb_table
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_ycc_rgb_table
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[41a]"></a>jinit_d_post_controller</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, jdpostct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = jinit_d_post_controller
</UL>
<BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jround_up
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[419]"></a>jinit_upsampler</STRONG> (Thumb, 258 bytes, Stack size 24 bytes, jdsample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = jinit_upsampler
</UL>
<BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jround_up
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[421]"></a>jpeg_get_small</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jmemnobs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = jpeg_get_small &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_small
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_memory_mgr
</UL>

<P><STRONG><a name="[428]"></a>jpeg_free_small</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jmemnobs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = jpeg_free_small &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_destruct
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_pool
</UL>

<P><STRONG><a name="[422]"></a>jpeg_get_large</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jmemnobs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = jpeg_get_large &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_large
</UL>

<P><STRONG><a name="[427]"></a>jpeg_free_large</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jmemnobs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = jpeg_free_large &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_pool
</UL>

<P><STRONG><a name="[423]"></a>jpeg_mem_available</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, jmemnobs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realize_virt_arrays
</UL>

<P><STRONG><a name="[424]"></a>jpeg_open_backing_store</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, jmemnobs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realize_virt_arrays
</UL>

<P><STRONG><a name="[42a]"></a>jpeg_mem_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, jmemnobs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_memory_mgr
</UL>

<P><STRONG><a name="[429]"></a>jpeg_mem_term</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, jmemnobs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_destruct
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_memory_mgr
</UL>

<P><STRONG><a name="[415]"></a>jinit_1pass_quantizer</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, jquant1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = jinit_1pass_quantizer &rArr; create_colormap &rArr; select_ncolors
</UL>
<BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_colormap
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_fs_workspace
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_colorindex
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[416]"></a>jinit_2pass_quantizer</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, jquant2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = jinit_2pass_quantizer &rArr; init_error_limit
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_error_limit
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[e5]"></a>jpeg_idct_float</STRONG> (Thumb, 814 bytes, Stack size 276 bytes, jidctflt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = jpeg_idct_float
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[e4]"></a>jpeg_idct_ifast</STRONG> (Thumb, 692 bytes, Stack size 312 bytes, jidctfst.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = jpeg_idct_ifast
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[e3]"></a>jpeg_idct_islow</STRONG> (Thumb, 854 bytes, Stack size 328 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = jpeg_idct_islow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[ca]"></a>jpeg_idct_7x7</STRONG> (Thumb, 648 bytes, Stack size 256 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = jpeg_idct_7x7
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[c9]"></a>jpeg_idct_6x6</STRONG> (Thumb, 372 bytes, Stack size 196 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = jpeg_idct_6x6
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[c8]"></a>jpeg_idct_5x5</STRONG> (Thumb, 348 bytes, Stack size 136 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = jpeg_idct_5x5
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[c7]"></a>jpeg_idct_4x4</STRONG> (Thumb, 282 bytes, Stack size 100 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = jpeg_idct_4x4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[c6]"></a>jpeg_idct_3x3</STRONG> (Thumb, 208 bytes, Stack size 64 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = jpeg_idct_3x3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[c5]"></a>jpeg_idct_2x2</STRONG> (Thumb, 106 bytes, Stack size 20 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = jpeg_idct_2x2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[c4]"></a>jpeg_idct_1x1</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = jpeg_idct_1x1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[cb]"></a>jpeg_idct_9x9</STRONG> (Thumb, 754 bytes, Stack size 364 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = jpeg_idct_9x9
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[cc]"></a>jpeg_idct_10x10</STRONG> (Thumb, 818 bytes, Stack size 404 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = jpeg_idct_10x10
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[cd]"></a>jpeg_idct_11x11</STRONG> (Thumb, 1152 bytes, Stack size 436 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = jpeg_idct_11x11
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[ce]"></a>jpeg_idct_12x12</STRONG> (Thumb, 1030 bytes, Stack size 472 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = jpeg_idct_12x12
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[cf]"></a>jpeg_idct_13x13</STRONG> (Thumb, 1374 bytes, Stack size 508 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = jpeg_idct_13x13
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[d0]"></a>jpeg_idct_14x14</STRONG> (Thumb, 1124 bytes, Stack size 548 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = jpeg_idct_14x14
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[d1]"></a>jpeg_idct_15x15</STRONG> (Thumb, 1234 bytes, Stack size 580 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = jpeg_idct_15x15
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[d2]"></a>jpeg_idct_16x16</STRONG> (Thumb, 1496 bytes, Stack size 624 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = jpeg_idct_16x16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[d3]"></a>jpeg_idct_16x8</STRONG> (Thumb, 1250 bytes, Stack size 364 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = jpeg_idct_16x8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[d4]"></a>jpeg_idct_14x7</STRONG> (Thumb, 884 bytes, Stack size 320 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = jpeg_idct_14x7
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[d5]"></a>jpeg_idct_12x6</STRONG> (Thumb, 690 bytes, Stack size 276 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = jpeg_idct_12x6
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[d6]"></a>jpeg_idct_10x5</STRONG> (Thumb, 558 bytes, Stack size 232 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = jpeg_idct_10x5
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[d7]"></a>jpeg_idct_8x4</STRONG> (Thumb, 470 bytes, Stack size 196 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = jpeg_idct_8x4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[d8]"></a>jpeg_idct_6x3</STRONG> (Thumb, 280 bytes, Stack size 108 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = jpeg_idct_6x3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[d9]"></a>jpeg_idct_4x2</STRONG> (Thumb, 180 bytes, Stack size 64 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = jpeg_idct_4x2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[da]"></a>jpeg_idct_2x1</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = jpeg_idct_2x1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[db]"></a>jpeg_idct_8x16</STRONG> (Thumb, 1148 bytes, Stack size 624 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = jpeg_idct_8x16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[dc]"></a>jpeg_idct_7x14</STRONG> (Thumb, 924 bytes, Stack size 492 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = jpeg_idct_7x14
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[dd]"></a>jpeg_idct_6x12</STRONG> (Thumb, 708 bytes, Stack size 376 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = jpeg_idct_6x12
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[de]"></a>jpeg_idct_5x10</STRONG> (Thumb, 592 bytes, Stack size 280 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = jpeg_idct_5x10
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[df]"></a>jpeg_idct_4x8</STRONG> (Thumb, 574 bytes, Stack size 200 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = jpeg_idct_4x8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[e0]"></a>jpeg_idct_3x6</STRONG> (Thumb, 280 bytes, Stack size 124 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = jpeg_idct_3x6
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[e1]"></a>jpeg_idct_2x4</STRONG> (Thumb, 186 bytes, Stack size 68 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = jpeg_idct_2x4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[e2]"></a>jpeg_idct_1x2</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, jidctint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = jpeg_idct_1x2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[630]"></a>__use_no_semihosting</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi_2.o(.text), UNUSED)

<P><STRONG><a name="[43e]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_get_small
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_get_large
</UL>

<P><STRONG><a name="[43f]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_free_small
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_free_large
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[152]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Init
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Init
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_sdiv
</UL>

<P><STRONG><a name="[631]"></a>_ll_udiv</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[150]"></a>__aeabi_ldivmod</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lines_intersection1
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lines_intersection
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>

<P><STRONG><a name="[450]"></a>_ll_sdiv</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, llsdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[40b]"></a>__2printf</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, noretval__2printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMboard_ProgramData
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_message
</UL>

<P><STRONG><a name="[40c]"></a>__2sprintf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;format_message
</UL>

<P><STRONG><a name="[454]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[455]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[456]"></a>_printf_truncate_signed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[457]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[453]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[123]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[11f]"></a>_printf_charcount</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, _printf_charcount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n
</UL>

<P><STRONG><a name="[459]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, _printf_wctomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[127]"></a>_printf_int_oct</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, _printf_oct_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[632]"></a>_printf_longlong_oct</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_oct_int.o(.text), UNUSED)

<P><STRONG><a name="[45b]"></a>_printf_longlong_hex</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, _printf_hex_int_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[129]"></a>_printf_int_hex</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, _printf_hex_int_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[121]"></a>_printf_hex_ptr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_hex_int_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p
</UL>

<P><STRONG><a name="[45c]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[42b]"></a>__0sscanf</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_memory_mgr
</UL>

<P><STRONG><a name="[460]"></a>_scanf_int</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[472]"></a>_scanf_string</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, _scanf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[225]"></a>srand</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = srand
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460MatchID
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[135]"></a>_rand_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_rand_2
</UL>

<P><STRONG><a name="[53e]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
</UL>

<P><STRONG><a name="[277]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;viewFeedCode
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Iotest
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEditTit
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mf_dcopy
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disProgVal
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disProgCode
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[1dc]"></a>strncmp</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mp3
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_flash
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initflashadd
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash2bin
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3tobin
</UL>

<P><STRONG><a name="[1cb]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ProgramFile
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskPatFile
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFileByName
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDiskFiles
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deleteDiskFile
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copyDiskPatFile
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SysBackupkFile
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_RecordFile
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_PatFile
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_GroupFile
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_SysBackupkFile
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_PatFile
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk_Group
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete_PatFile
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete_GroupFile
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_AviFile
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_AviFile
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_BookData
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_BookFile
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disktest
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskGropFileByName
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mf_dcopy
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_DeleteIntFile
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskEmbFile
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskGroupFile
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFile
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;renameDiskFile
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;newDiskFolder
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk_G
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;importParas
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exportParas
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash2bin
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3tobin
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;binfiletoflash
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3toflash
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playmp3
</UL>

<P><STRONG><a name="[191]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteDisk
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadDisk
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jcopy_block_row
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jcopy_sample_rows
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_input_pass
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dht
</UL>

<P><STRONG><a name="[462]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[633]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[1d2]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusUpdate
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusTit
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusFeedSum
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusFeedNow
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatus
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SysBackupkFile
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_RecordFile
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_PatFile
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_GroupFile
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_data
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Iotest
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_HeSupportConnect
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Function
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtFormat
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtMethod
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkTouch
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rotary_Logo
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isUpInfoData
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;creatUpInfoData
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asctonum
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anyWriteScreeData
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBook
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exportParas
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3toflash
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_sub
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_DC_first
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[634]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[635]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[636]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[414]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_getPatData
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass_2_quant
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass_1_quant
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantize_fs_dither
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantize_ord_dither
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_bg_ycc_rgb_table
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompress_onepass
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;access_virt_barray
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;access_virt_sarray
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_inverse_dct
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_d_coef_controller
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>

<P><STRONG><a name="[463]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[637]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[1ca]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_getStPin
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModSpeed
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModOrg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoveLine
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoPin
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoArea
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModDelPins
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModAddPin
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalLFval
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskPatFile
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFileByName
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDiskFiles
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deleteDiskFile
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copyDiskPatFile
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SysBackupkFile
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_RecordFile
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_PatFile
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_GroupFile
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_DealSaveData
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete_PatFile
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete_GroupFile
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_2deal
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_getPinAddr
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_ctOverlap
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_UpFeed
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sewP2Pmove
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sewFindPinAndPos
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeedOrg
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doSpeed
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doPF
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doLF
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doExCode
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doEndcmd
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doCode
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_copyImgs
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModTack
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPF
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModLF
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModCode
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Isocclu
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatUnDO
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatDelData
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatData
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPFval
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getctNearPointPos
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNearPointPos
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveStartEnd
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveRepe
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveAss
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConZoom
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConSpin
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConMirr
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConCalAssArea
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sew_GetSewLen
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim1
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPFlimt
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFeedXY1
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFeedXY
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFeedPos
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDrawPatPos
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDrawScale
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_AviFile
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Start
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFilename
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountUnicodeInfo
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFilesNo1
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initflashadd
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteScreeData
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_AviFile
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_BookData
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_BookFile
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disktest
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mf_dcopy
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS_DeleteIntFile
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskEmbFile
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskGroupFile
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFile
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;renameDiskFile
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;newDiskFolder
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;importParas
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playmp3
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_CreateDecompress
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_UpFeed1
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doTack
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPinAng
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPindis
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_make_d_derived_tbl
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dht
</UL>

<P><STRONG><a name="[638]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[639]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[464]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[3fd]"></a>strncpy</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_lse
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sos
</UL>

<P><STRONG><a name="[1c8]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMboard_ProgramData
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9xx_Init
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlaySound
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[63a]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[3]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[3b9]"></a>setjmp</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, setjmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = setjmp
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MjpegDecode
</UL>

<P><STRONG><a name="[3b7]"></a>longjmp</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, setjmp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_error_exit
</UL>

<P><STRONG><a name="[63b]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[63c]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[44e]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[63d]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[63e]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[7]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[5]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[44f]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[466]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[133]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[468]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[4]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[469]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[46b]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_tan
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[458]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[452]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[112]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[46c]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[12b]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[12d]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[451]"></a>_printf_char_file</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, _printf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[46e]"></a>_printf_lcs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[12f]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[46f]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[461]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>

<P><STRONG><a name="[45f]"></a>__vfscanf_char</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[113]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[114]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[45a]"></a>_wcrtomb</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, _wcrtomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[63f]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[475]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[640]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[471]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>

<P><STRONG><a name="[46a]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[641]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[642]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[465]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[118]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isspace &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[470]"></a>__vfscanf</STRONG> (Thumb, 880 bytes, Stack size 96 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>
<BR>[Called By]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[46d]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ferror.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[467]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[13a]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[137]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
</UL>

<P><STRONG><a name="[13f]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[474]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[473]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[478]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __default_signal_display
</UL>
<BR>[Calls]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[340]"></a>AnaPattern</STRONG> (Thumb, 1692 bytes, Stack size 104 bytes, function.o(i.AnaPattern))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = AnaPattern &rArr; Sew_GetSewLen &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sew_GetSewLen
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mysetU16
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_ConvertMultiDraw
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
</UL>

<P><STRONG><a name="[47a]"></a>AnalyseUpdateList</STRONG> (Thumb, 190 bytes, Stack size 48 bytes, communication.o(i.AnalyseUpdateList))
<BR><BR>[Stack]<UL><LI>Max Depth = 896 + Unknown Stack Size
<LI>Call Chain = AnalyseUpdateList &rArr; Read_ProgramFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_ExtMemory
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ProgramFile
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtMemory_Status
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMboard_ProgramData
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
</UL>

<P><STRONG><a name="[2ab]"></a>BCD_2Hex</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcddisp.o(i.BCD_2Hex))
<BR><BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_DealSaveData
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CtBefDatAny
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_To_Bor
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showTime
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juki_TO_Bor
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Change_E
</UL>

<P><STRONG><a name="[47b]"></a>BackupIREG</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, function.o(i.BackupIREG))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BackupIREG
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_StReadData
</UL>

<P><STRONG><a name="[50e]"></a>BackupSHREG</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, function.o(i.BackupSHREG))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BackupSHREG
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[4fd]"></a>BackupSREG</STRONG> (Thumb, 380 bytes, Stack size 32 bytes, function.o(i.BackupSREG))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BackupSREG
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[50b]"></a>BarcodeCompare</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, function.o(i.BarcodeCompare))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BarcodeCompare
</UL>
<BR>[Called By]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPatList
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMemorryList
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[1d5]"></a>Beep_On</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, utility.o(i.Beep_On))
<BR><BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Iotest
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_HeSupportConnect
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Function
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtFormat
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtMethod
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkTouch
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;binfiletoflash
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3toflash
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[28a]"></a>BmpFillRect</STRONG> (Thumb, 78 bytes, Stack size 20 bytes, lcddisp.o(i.BmpFillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BmpFillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProgressbar
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusTit
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clrAllStatus
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSerialNumber2
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSerialNumber
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Iotest
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_HeSupportConnect
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Function
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtFormat
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtMethod
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomIn
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showTime
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showDiskStatus
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refreshPoint
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteScreeData
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawAvi
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBook
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[47c]"></a>CLR_Screen</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lcddisp.o(i.CLR_Screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLR_Screen
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Start
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTouchPara
</UL>

<P><STRONG><a name="[541]"></a>CailDate</STRONG> (Thumb, 150 bytes, Stack size 12 bytes, function.o(i.CailDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CailDate
</UL>
<BR>[Called By]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
</UL>

<P><STRONG><a name="[54d]"></a>CalGroSaveNo</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, function.o(i.CalGroSaveNo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CalGroSaveNo
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
</UL>

<P><STRONG><a name="[47d]"></a>CheckDrawData</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, function.o(i.CheckDrawData))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = CheckDrawData &rArr; CheckDrawScale &rArr; Bor_CalPatLim &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDrawScale
</UL>
<BR>[Called By]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
</UL>

<P><STRONG><a name="[47e]"></a>CheckDrawScale</STRONG> (Thumb, 832 bytes, Stack size 128 bytes, function.o(i.CheckDrawScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = CheckDrawScale &rArr; Bor_CalPatLim &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CalPFlimt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPFlimt
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataCheckSum
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDrawData
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
</UL>

<P><STRONG><a name="[481]"></a>CheckSREG</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, function.o(i.CheckSREG))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CheckSREG &rArr; get_checkSum
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[482]"></a>CheckTouch</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, main.o(i.CheckTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CheckTouch &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
</UL>
<BR>[Called By]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTouchPara
</UL>

<P><STRONG><a name="[483]"></a>CheckTouchPara</STRONG> (Thumb, 508 bytes, Stack size 64 bytes, main.o(i.CheckTouchPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = CheckTouchPara &rArr; ChkTouch &rArr; RecoveTouchPara &rArr; SaveTouchPara &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkTouch
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTouch
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePage
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLFU32
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMultiLStr24
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLR_Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[488]"></a>Comm_Move</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, function.o(i.Comm_Move))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = Comm_Move &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Stpoint
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_backPattingData
</UL>

<P><STRONG><a name="[2bb]"></a>Comm_RelationMove</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, function.o(i.Comm_RelationMove))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = Comm_RelationMove &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sewP2Pmove
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mitP2Pmove
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pathTohome
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Stpoint
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[48a]"></a>CountUnicodeInfo</STRONG> (Thumb, 216 bytes, Stack size 64 bytes, lcddisp.o(i.CountUnicodeInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CountUnicodeInfo &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeStr1
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeStr
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeMulStr
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeFMenuStr
</UL>

<P><STRONG><a name="[47f]"></a>DataCheckSum</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, function.o(i.DataCheckSum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DataCheckSum &rArr; get_checkSum
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_checkSum
</UL>
<BR>[Called By]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_getPatData
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDrawScale
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
</UL>

<P><STRONG><a name="[15e]"></a>DelayMs</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, utility.o(i.DelayMs))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mcpuprogram
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1_Status
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_dispprogram
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update1_dispprogram
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_dispprogram
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete_PatFile
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete_GroupFile
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Move_End
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPatList
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Stpoint
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Home
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RelationMove
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Init
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TF_Init
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9xx_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProPara
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkTouch
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTouchPara
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTouch
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_WriteEEP
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ReadEEP
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DS2460_ReadSerialNumber
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;binfiletoflash
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3toflash
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_SimTest
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Reset
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_SoftReset
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[1a5]"></a>DelayUs</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, utility.o(i.DelayUs))
<BR><BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_WriteDAT
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream3_IRQHandler
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_WriteCMD
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WAKEUP
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_PowerDown
</UL>

<P><STRONG><a name="[48b]"></a>DisAnimation</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, main.o(i.DisAnimation))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DisAnimation &rArr; DrawFPBMPNEW
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPNEW
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[48d]"></a>DispInStatus</STRONG> (Thumb, 126 bytes, Stack size 48 bytes, menu_iotest.o(i.DispInStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = DispInStatus &rArr; Draw24X24FStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
</UL>
<BR>[Called By]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
</UL>

<P><STRONG><a name="[48e]"></a>DispMotorStatus</STRONG> (Thumb, 126 bytes, Stack size 48 bytes, menu_iotest.o(i.DispMotorStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = DispMotorStatus &rArr; Draw24X24FStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
</UL>
<BR>[Called By]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
</UL>

<P><STRONG><a name="[48f]"></a>DispOutStatus</STRONG> (Thumb, 126 bytes, Stack size 48 bytes, menu_iotest.o(i.DispOutStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = DispOutStatus &rArr; Draw24X24FStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
</UL>
<BR>[Called By]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
</UL>

<P><STRONG><a name="[490]"></a>Draw16x16Str</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, lcddisp.o(i.Draw16x16Str))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Draw16x16Str &rArr; DrawUnicodeStr1 &rArr; DrawUnicodeMulStr16x16
</UL>
<BR>[Calls]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeStr1
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFStr
</UL>
<BR>[Called By]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusTit
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatus
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_data
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Iotest
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEditTit
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disProgCode
</UL>

<P><STRONG><a name="[28d]"></a>Draw24X24FFStr</STRONG> (Thumb, 256 bytes, Stack size 64 bytes, lcddisp.o(i.Draw24X24FFStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFHz24X24
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFASC12
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStrUser
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr1
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBook
</UL>

<P><STRONG><a name="[495]"></a>Draw24X24FFStrN</STRONG> (Thumb, 236 bytes, Stack size 60 bytes, lcddisp.o(i.Draw24X24FFStrN))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Draw24X24FFStrN &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFHz24X24
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFASC12
</UL>
<BR>[Called By]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disIOname
</UL>

<P><STRONG><a name="[496]"></a>Draw24X24FPY</STRONG> (Thumb, 94 bytes, Stack size 36 bytes, lcddisp.o(i.Draw24X24FPY))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Draw24X24FPY &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFHz24X24
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFASC12
</UL>
<BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;viewFeedCode
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
</UL>

<P><STRONG><a name="[28c]"></a>Draw24X24FStr</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, lcddisp.o(i.Draw24X24FStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Draw24X24FStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFHz24X24
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFASC12
</UL>
<BR>[Called By]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOutStatus
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispMotorStatus
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispInStatus
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTouchPara
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFStr32
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFilename
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showTime
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refreshPoint
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBook
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
</UL>

<P><STRONG><a name="[497]"></a>Draw24X24FStrByLine</STRONG> (Thumb, 192 bytes, Stack size 60 bytes, lcddisp.o(i.Draw24X24FStrByLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Draw24X24FStrByLine &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFHz24X24
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFASC12
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[498]"></a>Draw24x24MulStr</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, lcddisp.o(i.Draw24x24MulStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Draw24x24MulStr &rArr; DrawUnicodeMulStr &rArr; DrawUnicodeMulStr24x24
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeMulStr
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMultiLStr24
</UL>
<BR>[Called By]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewMsg
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToastShow1
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disProgDesc
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[487]"></a>Draw24x24Str</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, lcddisp.o(i.Draw24x24Str))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeStr
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FFStr
</UL>
<BR>[Called By]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusTit
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Iotest
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_HeSupportConnect
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Function
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtFormat
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtMethod
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTouchPara
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEditTit
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showTime
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disProgVal
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disProgCode
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[49b]"></a>Draw32X32FStr</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, lcddisp.o(i.Draw32X32FStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Draw32X32FStr &rArr; DrawFASC3216 &rArr; dsp_F32x16
</UL>
<BR>[Calls]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFHz24X24
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFASC3216
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[282]"></a>DrawBMP</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, lcddisp.o(i.DrawBMP))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DrawBMP
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayBootScreen
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPage
</UL>

<P><STRONG><a name="[49d]"></a>DrawBigPoint</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, function.o(i.DrawBigPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DrawBigPoint &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawVLine
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_BigCrossLimit
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_BigCross
</UL>

<P><STRONG><a name="[1fa]"></a>DrawButton</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, lcddisp.o(i.DrawButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DrawButton &rArr; DrawButtonOff1 &rArr; DrawFrame &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff1
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Iotest
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_HeSupportConnect
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Function
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtFormat
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtMethod
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkTouch
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBook
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[4a1]"></a>DrawButton2</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, lcddisp.o(i.DrawButton2))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = DrawButton2 &rArr; DrawButtonOff3 &rArr; DrawFrame &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff3
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
</UL>

<P><STRONG><a name="[4a3]"></a>DrawButton3</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lcddisp.o(i.DrawButton3))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = DrawButton3 &rArr; DrawFPBMPBTN1
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN1
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
</UL>

<P><STRONG><a name="[4a5]"></a>DrawButtonDisPat</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, lcddisp.o(i.DrawButtonDisPat))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DrawButtonDisPat &rArr; DrawRect &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
</UL>

<P><STRONG><a name="[4a6]"></a>DrawButtonEdit</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, lcddisp.o(i.DrawButtonEdit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DrawButtonEdit &rArr; DrawDottedRect &rArr; DrawVDottedLine
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
</UL>
<BR>[Called By]<UL><LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[201]"></a>DrawButtonOff</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, lcddisp.o(i.DrawButtonOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DrawButtonOff &rArr; DrawFrame &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPixel
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Iotest
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_HeSupportConnect
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Function
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtFormat
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtMethod
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkTouch
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[4a0]"></a>DrawButtonOff1</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, lcddisp.o(i.DrawButtonOff1))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DrawButtonOff1 &rArr; DrawFrame &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
</UL>

<P><STRONG><a name="[4a2]"></a>DrawButtonOff3</STRONG> (Thumb, 444 bytes, Stack size 72 bytes, lcddisp.o(i.DrawButtonOff3))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DrawButtonOff3 &rArr; DrawFrame &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton2
</UL>

<P><STRONG><a name="[1fe]"></a>DrawButtonOn</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, lcddisp.o(i.DrawButtonOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DrawButtonOn &rArr; DrawFrame &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPixel
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Iotest
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_HeSupportConnect
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Function
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtFormat
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtMethod
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkTouch
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBook
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[4aa]"></a>DrawButtonOnZoomIn</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, lcddisp.o(i.DrawButtonOnZoomIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DrawButtonOnZoomIn &rArr; BmpFillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPixel
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[4ab]"></a>DrawButtonOnZoomInRes</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, lcddisp.o(i.DrawButtonOnZoomInRes))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DrawButtonOnZoomInRes &rArr; DrawDottedRect &rArr; DrawVDottedLine
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[4ac]"></a>DrawButtonSingleColor</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcddisp.o(i.DrawButtonSingleColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = DrawButtonSingleColor &rArr; DrawButtonOff1 &rArr; DrawFrame &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff1
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[4ad]"></a>DrawColor_Gray1</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, lcddisp.o(i.DrawColor_Gray1))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DrawColor_Gray1
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Function
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[4ae]"></a>DrawCross7x7</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lcddisp.o(i.DrawCross7x7))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DrawCross7x7 &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawVLine
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_SmallCrossLimit
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_SmallCross
</UL>

<P><STRONG><a name="[4af]"></a>DrawDFrame</STRONG> (Thumb, 230 bytes, Stack size 64 bytes, lcddisp.o(i.DrawDFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = DrawDFrame &rArr; DrawLine &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawVLine
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLine
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
</UL>

<P><STRONG><a name="[4a7]"></a>DrawDottedRect</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, lcddisp.o(i.DrawDottedRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DrawDottedRect &rArr; DrawVDottedLine
</UL>
<BR>[Calls]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawVDottedLine
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHDottedLine
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_data
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEdit
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomInRes
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonEdit
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
</UL>

<P><STRONG><a name="[4b3]"></a>DrawEdit</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, lcddisp.o(i.DrawEdit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DrawEdit &rArr; DrawDottedRect &rArr; DrawVDottedLine
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
</UL>
<BR>[Called By]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
</UL>

<P><STRONG><a name="[4b4]"></a>DrawEditTit</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, lcddisp.o(i.DrawEditTit))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = DrawEditTit &rArr; Draw16x16Str &rArr; DrawUnicodeStr1 &rArr; DrawUnicodeMulStr16x16
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw16x16Str
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
</UL>

<P><STRONG><a name="[4b5]"></a>DrawF16Str</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, lcddisp.o(i.DrawF16Str))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DrawF16Str &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFHz
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFChar
</UL>
<BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusUpdate
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatus
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_data
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFilename
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[494]"></a>DrawFASC12</STRONG> (Thumb, 60 bytes, Stack size 28 bytes, lcddisp.o(i.DrawFASC12))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_F24x12
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32Z
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FPY
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32ZR
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFS32P
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFHEX
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMultiLStr24LimtL
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMultiLStr24
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFileno_24x12
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFileno
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStrByLine
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FFStrN
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FFStr
</UL>

<P><STRONG><a name="[49c]"></a>DrawFASC3216</STRONG> (Thumb, 58 bytes, Stack size 28 bytes, lcddisp.o(i.DrawFASC3216))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DrawFASC3216 &rArr; dsp_F32x16
</UL>
<BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_F32x16
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLFU32
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw32X32FStr
</UL>

<P><STRONG><a name="[281]"></a>DrawFBMP2</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, lcddisp.o(i.DrawFBMP2))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DrawFBMP2
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayBootScreen
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rotary_Logo
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DesktopInit
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPage
</UL>

<P><STRONG><a name="[4b6]"></a>DrawFChar</STRONG> (Thumb, 56 bytes, Stack size 28 bytes, lcddisp.o(i.DrawFChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_F16x8
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSerialNumber
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFS32P
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFStrN
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32Z
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFStr
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMultiLStr16
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFileno_16x8
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFStr
</UL>

<P><STRONG><a name="[491]"></a>DrawFFStr</STRONG> (Thumb, 230 bytes, Stack size 60 bytes, lcddisp.o(i.DrawFFStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = DrawFFStr &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFHz
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFChar
</UL>
<BR>[Called By]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw16x16Str
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
</UL>

<P><STRONG><a name="[4bc]"></a>DrawFFStrN</STRONG> (Thumb, 236 bytes, Stack size 60 bytes, lcddisp.o(i.DrawFFStrN))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = DrawFFStrN &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFHz
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFChar
</UL>
<BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;viewFeedCode
</UL>

<P><STRONG><a name="[4bd]"></a>DrawFFilename</STRONG> (Thumb, 624 bytes, Stack size 120 bytes, lcddisp.o(i.DrawFFilename))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = DrawFFilename &rArr; DrawF16Str &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[4be]"></a>DrawFFileno</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, lcddisp.o(i.DrawFFileno))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DrawFFileno &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFASC12
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[4bf]"></a>DrawFFileno_16x8</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, lcddisp.o(i.DrawFFileno_16x8))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DrawFFileno_16x8 &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFChar
</UL>
<BR>[Called By]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[4c0]"></a>DrawFFileno_24x12</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, lcddisp.o(i.DrawFFileno_24x12))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DrawFFileno_24x12 &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFASC12
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
</UL>

<P><STRONG><a name="[4b7]"></a>DrawFHz</STRONG> (Thumb, 104 bytes, Stack size 36 bytes, lcddisp.o(i.DrawFHz))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DrawFHz
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFStrN
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFStr
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMultiLStr16
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFStr
</UL>

<P><STRONG><a name="[493]"></a>DrawFHz24X24</STRONG> (Thumb, 226 bytes, Stack size 36 bytes, lcddisp.o(i.DrawFHz24X24))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DrawFHz24X24
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FPY
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMultiLStr24LimtL
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMultiLStr24
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw32X32FStr
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStrByLine
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FFStrN
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FFStr
</UL>

<P><STRONG><a name="[4c1]"></a>DrawFMenuStr</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, lcddisp.o(i.DrawFMenuStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = DrawFMenuStr &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeFMenuStr
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FFStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlaySound
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Iotest
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_HeSupportConnect
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Function
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtFormat
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtMethod
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStrP
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[4c3]"></a>DrawFMenuStr1</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, lcddisp.o(i.DrawFMenuStr1))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = DrawFMenuStr1 &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeFMenuStr
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FFStr
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlaySound
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStrP1
</UL>

<P><STRONG><a name="[4c4]"></a>DrawFMenuStrP</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, lcddisp.o(i.DrawFMenuStrP))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = DrawFMenuStrP &rArr; DrawFMenuStr &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
</UL>
<BR>[Called By]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
</UL>

<P><STRONG><a name="[4c5]"></a>DrawFMenuStrP1</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, lcddisp.o(i.DrawFMenuStrP1))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = DrawFMenuStrP1 &rArr; DrawFMenuStr1 &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr1
</UL>
<BR>[Called By]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
</UL>

<P><STRONG><a name="[4c6]"></a>DrawFMenuStrUser</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, lcddisp.o(i.DrawFMenuStrUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = DrawFMenuStrUser &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeFMenuStr
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FFStr
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlaySound
</UL>
<BR>[Called By]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
</UL>

<P><STRONG><a name="[4c7]"></a>DrawFMultiLStr16</STRONG> (Thumb, 418 bytes, Stack size 64 bytes, lcddisp.o(i.DrawFMultiLStr16))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = DrawFMultiLStr16 &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFHz
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFChar
</UL>
<BR>[Called By]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
</UL>

<P><STRONG><a name="[485]"></a>DrawFMultiLStr24</STRONG> (Thumb, 418 bytes, Stack size 64 bytes, lcddisp.o(i.DrawFMultiLStr24))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = DrawFMultiLStr24 &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFHz24X24
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFASC12
</UL>
<BR>[Called By]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTouchPara
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24MulStr
</UL>

<P><STRONG><a name="[4c8]"></a>DrawFMultiLStr24LimtL</STRONG> (Thumb, 374 bytes, Stack size 64 bytes, lcddisp.o(i.DrawFMultiLStr24LimtL))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = DrawFMultiLStr24LimtL &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFHz24X24
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFASC12
</UL>
<BR>[Called By]<UL><LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
</UL>

<P><STRONG><a name="[29a]"></a>DrawFPBMPBTN</STRONG> (Thumb, 210 bytes, Stack size 64 bytes, lcddisp.o(i.DrawFPBMPBTN))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DrawFPBMPBTN
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton2
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showDiskStatus
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawAvi
</UL>

<P><STRONG><a name="[4a4]"></a>DrawFPBMPBTN1</STRONG> (Thumb, 196 bytes, Stack size 60 bytes, lcddisp.o(i.DrawFPBMPBTN1))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = DrawFPBMPBTN1
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton3
</UL>

<P><STRONG><a name="[4c9]"></a>DrawFPBMPBTN2</STRONG> (Thumb, 214 bytes, Stack size 56 bytes, lcddisp.o(i.DrawFPBMPBTN2))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DrawFPBMPBTN2
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Code_BMP
</UL>

<P><STRONG><a name="[48c]"></a>DrawFPBMPNEW</STRONG> (Thumb, 194 bytes, Stack size 56 bytes, lcddisp.o(i.DrawFPBMPNEW))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DrawFPBMPNEW
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisAnimation
</UL>

<P><STRONG><a name="[4ca]"></a>DrawFS32P</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, lcddisp.o(i.DrawFS32P))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DrawFS32P &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFChar
</UL>
<BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusUpdate
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatus
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_data
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
</UL>

<P><STRONG><a name="[1d6]"></a>DrawFStr</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, lcddisp.o(i.DrawFStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DrawFStr &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFHz
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFChar
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawAvi
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash2bin
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3tobin
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;binfiletoflash
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3toflash
</UL>

<P><STRONG><a name="[1fb]"></a>DrawFStr32</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcddisp.o(i.DrawFStr32))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DrawFStr32 &rArr; Draw24X24FStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkTouch
</UL>

<P><STRONG><a name="[1dd]"></a>DrawFU32</STRONG> (Thumb, 74 bytes, Stack size 36 bytes, lcddisp.o(i.DrawFU32))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = DrawFU32 &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFChar
</UL>
<BR>[Called By]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusFeedSum
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusFeedNow
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatus
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSerialNumber2
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_data
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawAvi
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash2bin
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3tobin
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[4cb]"></a>DrawFU32Z</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, lcddisp.o(i.DrawFU32Z))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DrawFU32Z &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFChar
</UL>
<BR>[Called By]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[1d7]"></a>DrawFillRect</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, lcddisp.o(i.DrawFillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DrawFillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProgressbar
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusUpdate
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusTit
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusFeedSum
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusFeedNow
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatus
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOutStatus
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispMotorStatus
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispInStatus
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_dispprogram
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update1_dispprogram
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_dispprogram
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_clearConvas
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSerialNumber2
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSerialNumber
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_data
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtFormat
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayBootScreen
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rotary_Logo
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DesktopInit
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisAnimation
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTouchPara
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStrUser
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr1
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEditTit
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEdit
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomInRes
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonEdit
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonDisPat
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton3
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton2
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToastShow1
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMyProgress1
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteScreeData
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawAvi
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPage
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;importParas
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exportParas
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFileProgress
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initFileProgress
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash2bin
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3tobin
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;binfiletoflash
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3toflash
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[4a9]"></a>DrawFrame</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, lcddisp.o(i.DrawFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DrawFrame &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawVLine
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff3
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff1
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
</UL>

<P><STRONG><a name="[4b1]"></a>DrawHDottedLine</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, lcddisp.o(i.DrawHDottedLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DrawHDottedLine
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
</UL>

<P><STRONG><a name="[49e]"></a>DrawHLine</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, lcddisp.o(i.DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DrawHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPoint
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLine
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCross7x7
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBigPoint
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFrame
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDFrame
</UL>

<P><STRONG><a name="[1f8]"></a>DrawIcon</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, lcddisp.o(i.DrawIcon))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DrawIcon
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkTouch
</UL>

<P><STRONG><a name="[1ff]"></a>DrawIconoff</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, lcddisp.o(i.DrawIconoff))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DrawIconoff
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkTouch
</UL>

<P><STRONG><a name="[200]"></a>DrawIconon</STRONG> (Thumb, 108 bytes, Stack size 48 bytes, lcddisp.o(i.DrawIconon))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DrawIconon
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkTouch
</UL>

<P><STRONG><a name="[484]"></a>DrawLFU32</STRONG> (Thumb, 78 bytes, Stack size 36 bytes, lcddisp.o(i.DrawLFU32))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = DrawLFU32 &rArr; DrawFASC3216 &rArr; dsp_F32x16
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFASC3216
</UL>
<BR>[Called By]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTouchPara
</UL>

<P><STRONG><a name="[4b0]"></a>DrawLine</STRONG> (Thumb, 452 bytes, Stack size 32 bytes, lcddisp.o(i.DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DrawLine &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawVLine
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel1
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDFrame
</UL>

<P><STRONG><a name="[4cd]"></a>DrawMFHEX</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, lcddisp.o(i.DrawMFHEX))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DrawMFHEX &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFASC12
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[4ce]"></a>DrawMFS32P</STRONG> (Thumb, 160 bytes, Stack size 56 bytes, lcddisp.o(i.DrawMFS32P))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DrawMFS32P &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFASC12
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
</UL>

<P><STRONG><a name="[28b]"></a>DrawMFU32</STRONG> (Thumb, 82 bytes, Stack size 36 bytes, lcddisp.o(i.DrawMFU32))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = DrawMFU32 &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFASC12
</UL>
<BR>[Called By]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showTime
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBook
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
</UL>

<P><STRONG><a name="[4cf]"></a>DrawMFU32Z</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, lcddisp.o(i.DrawMFU32Z))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DrawMFU32Z &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFASC12
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
</UL>

<P><STRONG><a name="[4d0]"></a>DrawMFU32ZR</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, lcddisp.o(i.DrawMFU32ZR))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DrawMFU32ZR &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFASC12
</UL>
<BR>[Called By]<UL><LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disProgVal
</UL>

<P><STRONG><a name="[4d1]"></a>DrawPoint</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lcddisp.o(i.DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DrawPoint &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawVLine
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FullPoint
</UL>

<P><STRONG><a name="[1d8]"></a>DrawProgressbar</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, lcddisp.o(i.DrawProgressbar))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DrawProgressbar &rArr; DrawRect &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ProgramFile
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mcpuprogram
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMboard_ProgramData
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mp3
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_dispprogram
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update1_dispprogram
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_dispprogram
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_flash
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;importParas
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exportParas
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;binfiletoflash
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3toflash
</UL>

<P><STRONG><a name="[23e]"></a>DrawRect</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, lcddisp.o(i.DrawRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DrawRect &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawVLine
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProgressbar
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusTit
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSerialNumber2
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSerialNumber
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtMethod
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonDisPat
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMyProgress1
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteScreeData
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawAvi
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initFileProgress
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[4d2]"></a>DrawSerialNumber</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, lcddisp.o(i.DrawSerialNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DrawSerialNumber &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPointData1
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFChar
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Code_HSEP
</UL>

<P><STRONG><a name="[4d4]"></a>DrawSerialNumber2</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, lcddisp.o(i.DrawSerialNumber2))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = DrawSerialNumber2 &rArr; DrawFU32 &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Code_Num
</UL>

<P><STRONG><a name="[4c2]"></a>DrawUnicodeFMenuStr</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, lcddisp.o(i.DrawUnicodeFMenuStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = DrawUnicodeFMenuStr &rArr; DrawUnicodeStr24x24
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeStr24x24
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountUnicodeInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStrUser
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr1
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
</UL>

<P><STRONG><a name="[499]"></a>DrawUnicodeMulStr</STRONG> (Thumb, 90 bytes, Stack size 56 bytes, lcddisp.o(i.DrawUnicodeMulStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = DrawUnicodeMulStr &rArr; DrawUnicodeMulStr24x24
</UL>
<BR>[Calls]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeMulStr24x24
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountUnicodeInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disIOname
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24MulStr
</UL>

<P><STRONG><a name="[4d7]"></a>DrawUnicodeMulStr16x16</STRONG> (Thumb, 344 bytes, Stack size 120 bytes, lcddisp.o(i.DrawUnicodeMulStr16x16))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DrawUnicodeMulStr16x16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeStr1
</UL>

<P><STRONG><a name="[4d6]"></a>DrawUnicodeMulStr24x24</STRONG> (Thumb, 344 bytes, Stack size 120 bytes, lcddisp.o(i.DrawUnicodeMulStr24x24))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DrawUnicodeMulStr24x24
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeMulStr
</UL>

<P><STRONG><a name="[49a]"></a>DrawUnicodeStr</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, lcddisp.o(i.DrawUnicodeStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = DrawUnicodeStr &rArr; DrawUnicodeStr24x24
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeStr24x24
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountUnicodeInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
</UL>

<P><STRONG><a name="[492]"></a>DrawUnicodeStr1</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, lcddisp.o(i.DrawUnicodeStr1))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = DrawUnicodeStr1 &rArr; DrawUnicodeMulStr16x16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeMulStr16x16
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountUnicodeInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw16x16Str
</UL>

<P><STRONG><a name="[4d5]"></a>DrawUnicodeStr24x24</STRONG> (Thumb, 248 bytes, Stack size 76 bytes, lcddisp.o(i.DrawUnicodeStr24x24))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = DrawUnicodeStr24x24
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeStr
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeFMenuStr
</UL>

<P><STRONG><a name="[4b2]"></a>DrawVDottedLine</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, lcddisp.o(i.DrawVDottedLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DrawVDottedLine
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
</UL>

<P><STRONG><a name="[49f]"></a>DrawVLine</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, lcddisp.o(i.DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPoint
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLine
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCross7x7
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBigPoint
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFrame
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDFrame
</UL>

<P><STRONG><a name="[4d8]"></a>Draw_BigCross</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcddisp.o(i.Draw_BigCross))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Draw_BigCross &rArr; DrawBigPoint &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBigPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
</UL>

<P><STRONG><a name="[4d9]"></a>Draw_BigCrossLimit</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lcddisp.o(i.Draw_BigCrossLimit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Draw_BigCrossLimit &rArr; DrawBigPoint &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBigPoint
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setDrawXY
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetDrawXY
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
</UL>

<P><STRONG><a name="[4dc]"></a>Draw_Code_BMP</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, lcddisp.o(i.Draw_Code_BMP))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Draw_Code_BMP &rArr; DrawFPBMPBTN2
</UL>
<BR>[Calls]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN2
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
</UL>

<P><STRONG><a name="[4dd]"></a>Draw_Code_HSEP</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lcddisp.o(i.Draw_Code_HSEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Draw_Code_HSEP &rArr; DrawSerialNumber &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSerialNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
</UL>

<P><STRONG><a name="[4de]"></a>Draw_Code_Num</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lcddisp.o(i.Draw_Code_Num))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = Draw_Code_Num &rArr; DrawSerialNumber2 &rArr; DrawFU32 &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSerialNumber2
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
</UL>

<P><STRONG><a name="[4df]"></a>Draw_FullPoint</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcddisp.o(i.Draw_FullPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Draw_FullPoint &rArr; DrawPoint &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
</UL>

<P><STRONG><a name="[4e0]"></a>Draw_SmallCross</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcddisp.o(i.Draw_SmallCross))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Draw_SmallCross &rArr; DrawCross7x7 &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCross7x7
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
</UL>

<P><STRONG><a name="[4e1]"></a>Draw_SmallCrossLimit</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lcddisp.o(i.Draw_SmallCrossLimit))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Draw_SmallCrossLimit &rArr; pat_setDrawXY &rArr; SetDrawXY
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCross7x7
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setDrawXY
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetDrawXY
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[34]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, utility.o(i.EXTI0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, utility.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI15_10_IRQHandler &rArr; VS1003B_WriteDAT
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_WriteDAT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, utility.o(i.EXTI1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, utility.o(i.EXTI2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, utility.o(i.EXTI3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = EXTI3_IRQHandler &rArr; GT9xx_ScanIRQ &rArr; GT9271_RD_Reg &rArr; GT9271_Read &rArr; CT_IIC_Read_Byte &rArr; CT_IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9xx_ScanIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, utility.o(i.EXTI4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, utility.o(i.EXTI9_5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4e2]"></a>ErrorMsg</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, communication.o(i.ErrorMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = ErrorMsg &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isContain_U16
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtFormat
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtMethod
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[4e4]"></a>FillRectColorChang</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, lcddisp.o(i.FillRectColorChang))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FillRectColorChang
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPixel
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[590]"></a>FinePYFirstAdd</STRONG> (Thumb, 214 bytes, Stack size 28 bytes, function.o(i.FinePYFirstAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FinePYFirstAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
</UL>

<P><STRONG><a name="[4e5]"></a>GetDrawPatPos</STRONG> (Thumb, 836 bytes, Stack size 104 bytes, function.o(i.GetDrawPatPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GetDrawPatPos &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
</UL>

<P><STRONG><a name="[4e6]"></a>Go_Home</STRONG> (Thumb, 338 bytes, Stack size 40 bytes, function.o(i.Go_Home))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = Go_Home &rArr; pathTohome &rArr; OutputExcode1 &rArr; Wait_Move_End &rArr; Write_Cmd1 &rArr; Read_Status &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pathTohome
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[4e8]"></a>Go_Stpoint</STRONG> (Thumb, 482 bytes, Stack size 96 bytes, function.o(i.Go_Stpoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = Go_Stpoint &rArr; Send_Pfoot &rArr; Write_Cmd1 &rArr; Read_Status &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailPadOffestPF
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RelationMove
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
</UL>

<P><STRONG><a name="[5a1]"></a>Hex_2BCD</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lcddisp.o(i.Hex_2BCD))
<BR><BR>[Called By]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteTimer
</UL>

<P><STRONG><a name="[1f9]"></a>InitScreen</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, lcddisp.o(i.InitScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InitScreen
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Iotest
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_HeSupportConnect
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Function
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtFormat
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtMethod
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkTouch
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTouchPara
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[4ea]"></a>Init_SysIfo</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, main.o(i.Init_SysIfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = Init_SysIfo &rArr; readUsrMsg &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readUsrMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[54b]"></a>MakeAutPassword</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, function.o(i.MakeAutPassword))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MakeAutPassword
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
</UL>

<P><STRONG><a name="[4ec]"></a>Menu_AnalogSet</STRONG> (Thumb, 2488 bytes, Stack size 1280 bytes, menu_iotest.o(i.Menu_AnalogSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1504<LI>Call Chain = Menu_AnalogSet &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd3
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFS32P
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStrP
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[4f0]"></a>Menu_Convert</STRONG> (Thumb, 3198 bytes, Stack size 1232 bytes, menu_convert.o(i.Menu_Convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 1896<LI>Call Chain = Menu_Convert &rArr; Mit_CreateAllData &rArr; Mit_Create_Data &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setPatRule
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetPatRule
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_clearConvas
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_getPointXY
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_ReadSregData
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CreateAllData
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailPadOffestPF
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFS32P
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw16x16Str
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pathTohome
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mitRecovrSREG
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Move_End
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecovrSREG
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[4f8]"></a>Menu_Convert1</STRONG> (Thumb, 30796 bytes, Stack size 5160 bytes, menu_convert.o(i.Menu_Convert1))
<BR><BR>[Stack]<UL><LI>Max Depth = 6080<LI>Call Chain = Menu_Convert1 &rArr; Bor_ConveRepe &rArr; Bor_ModPindis &rArr; Bor_docur &rArr; Bor_doline &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setPatRule
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetPatRule
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_getScale
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_getFinalScale
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_clearConvas
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_getPointXY
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNearPointPos
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bor_getPointXY
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Draw_Centre
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveStartEnd
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveRepe
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveAss
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConZoom
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConSpin
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConMirr
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConCalAssArea
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPointData2
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFS32P
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw16x16Str
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;absInt
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Move_End
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecovrSREG
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_xyposi
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Home
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RelationMove
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupSREG
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoveData2
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_SmallCrossLimit
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFS32P
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32Z
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN1
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFChar
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEditTit
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEdit
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawColor_Gray1
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomInRes
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomIn
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonEdit
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[500]"></a>Menu_Counter</STRONG> (Thumb, 3154 bytes, Stack size 1120 bytes, menu_p.o(i.Menu_Counter))
<BR><BR>[Stack]<UL><LI>Max Depth = 1344<LI>Call Chain = Menu_Counter &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd2
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FFStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[502]"></a>Menu_CtCallFile</STRONG> (Thumb, 12050 bytes, Stack size 2488 bytes, menu_create.o(i.Menu_CtCallFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 4976<LI>Call Chain = Menu_CtCallFile &rArr; Bor_CreatData &rArr; Bor_ModPindis &rArr; Bor_docur &rArr; Bor_doline &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_ExtMemory
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtMemory_Status
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_getPinAddr
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendExCodeCmd
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_getExCodeData
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_getPatData
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_copyImgs
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_To_Mit
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatData
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatBack
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPFval
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoNeedTri
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoLineAndPin
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setPatRule
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetPatRule
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_To_Bor
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPFlimt
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreSHREG
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPatList
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMemorryList
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileIndex
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputExcode
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarcodeCompare
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupSHREG
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN1
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFileno_16x8
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFilename
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setDrawXY
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[50f]"></a>Menu_CtCode</STRONG> (Thumb, 3058 bytes, Stack size 1056 bytes, menu_create.o(i.Menu_CtCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = Menu_CtCode &rArr; Bor_doCode &rArr; Bor_CalPatLim &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_getPinAddr
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doPF
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doCode
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatBack
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputExcode
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton2
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FFStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[510]"></a>Menu_CtCursor</STRONG> (Thumb, 33368 bytes, Stack size 3656 bytes, menu_create.o(i.Menu_CtCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 6144<LI>Call Chain = Menu_CtCursor &rArr; Bor_CreatData &rArr; Bor_ModPindis &rArr; Bor_docur &rArr; Bor_doline &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd1
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_getPinAddr
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_UpFeed
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sewP2Pmove
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sewFindPinAndPos
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendExCodeCmd
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_getPinsMsg
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_getExCodeData
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_ModToCt
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_CtToMod
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mitP2Pmove
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mitFindPinAndPos
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Create_Data
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailPadOffestLF
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Analyse_Data
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doSpeed
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doPF
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatUnDO
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatDelData
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatData
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatBack
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPFval
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getctNearPointPos
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmdAny
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setPatRule
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetPatRule
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_getScale
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_getFinalScale
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_clearConvas
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CreateAllData
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPointData2
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPixel
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailPadOffestPF
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawVLine
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFS32P
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw16x16Str
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPFlimt
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFeedPos
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_data
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;absInt
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Move_End
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_xyposi
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputExcode1
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputExcode
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Home
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RelationMove
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetKeyData
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoveData2
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillRectColorChang
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_SmallCrossLimit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32Z
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFChar
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawColor_Gray1
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomInRes
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomIn
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[51a]"></a>Menu_CtExCode</STRONG> (Thumb, 4262 bytes, Stack size 1512 bytes, menu_create.o(i.Menu_CtExCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 2296<LI>Call Chain = Menu_CtExCode &rArr; Mit_Convert_Data &rArr; Mit_CreateAllData &rArr; Mit_Create_Data &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doExCode
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModCode
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatBack
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupSREG
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFS32P
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEdit
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FFStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[51b]"></a>Menu_CtInHelp</STRONG> (Thumb, 9700 bytes, Stack size 624 bytes, menu_create.o(i.Menu_CtInHelp))
<BR><BR>[Stack]<UL><LI>Max Depth = 3112<LI>Call Chain = Menu_CtInHelp &rArr; Bor_CreatData &rArr; Bor_ModPindis &rArr; Bor_docur &rArr; Bor_doline &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd2
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_getPinAddr
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_UpFeed
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sewP2Pmove
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sewFindPinAndPos
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_upInsetPs
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_getPinsMsg
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_ModToCt
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_CtToMod
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mitP2Pmove
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mitFindPinAndPos
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Create_Data
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doSpeed
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doPF
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ctlIsocclu
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CtBefDatAny
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatUnDO
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatData
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatBack
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CreateAllData
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_data
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_xyposi
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Home
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPNEW
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDFrame
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawColor_Gray1
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24MulStr
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[51d]"></a>Menu_CtInput</STRONG> (Thumb, 6740 bytes, Stack size 1504 bytes, menu_create.o(i.Menu_CtInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 1816<LI>Call Chain = Menu_CtInput &rArr; Bor_To_Mit &rArr; Mit_do_feed1 &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd2
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd1
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendExCodeCmd
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_getExCodeData
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailPadOffestLF
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_To_Mit
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CtBefDatAny
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatCalLF
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatBack
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_BaseAddr
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_To_Bor
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailPadOffestPF
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFS32P
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputExcode
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDrawData
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFS32P
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32Z
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[51e]"></a>Menu_CtInputMenu</STRONG> (Thumb, 5152 bytes, Stack size 776 bytes, menu_create.o(i.Menu_CtInputMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 1472<LI>Call Chain = Menu_CtInputMenu &rArr; mit_CtToMod &rArr; Mit_CreateAllData &rArr; Mit_Create_Data &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd2
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1_Status
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_getPinAddr
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendExCodeCmd
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_CtToMod
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_SaveSplPatData
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Create_Data
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_ConvertMultiDraw
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Analyse_SplineData
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_AnalyseDataCorrect
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeedOrg
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doEndcmd
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatBack
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CreateAllData
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_data
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NeddleUp
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Home
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupSREG
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStrUser
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStrP1
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[521]"></a>Menu_CtMethod</STRONG> (Thumb, 1702 bytes, Stack size 1320 bytes, menu_create.o(i.Menu_CtMethod))
<BR><BR>[Stack]<UL><LI>Max Depth = 1544<LI>Call Chain = Menu_CtMethod &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[522]"></a>Menu_CtPfootSet</STRONG> (Thumb, 4714 bytes, Stack size 832 bytes, menu_create.o(i.Menu_CtPfootSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1632<LI>Call Chain = Menu_CtPfootSet &rArr; Mit_Modify_Data &rArr; Mit_CreateAllData &rArr; Mit_Create_Data &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd2
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd1
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPF
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_BaseAddr
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupSREG
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFS32P
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToastShow1
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToastSetTextColor
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToastSetBackColor
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToastInit
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToastHide
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[528]"></a>Menu_CtTack1</STRONG> (Thumb, 2212 bytes, Stack size 1256 bytes, menu_create.o(i.Menu_CtTack1))
<BR><BR>[Stack]<UL><LI>Max Depth = 1480<LI>Call Chain = Menu_CtTack1 &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_ctOverlap
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_ctOverlap
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatBack
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFS32P
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomInRes
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomIn
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonEdit
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[529]"></a>Menu_Ctlineforce</STRONG> (Thumb, 4270 bytes, Stack size 1112 bytes, menu_create.o(i.Menu_Ctlineforce))
<BR><BR>[Stack]<UL><LI>Max Depth = 1912<LI>Call Chain = Menu_Ctlineforce &rArr; Mit_Modify_Data &rArr; Mit_CreateAllData &rArr; Mit_Create_Data &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd2
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doLF
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModLF
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatCalLF
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatBack
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_BaseAddr
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getModLfNo
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupSREG
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32Z
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[52b]"></a>Menu_Ctmultiple</STRONG> (Thumb, 2540 bytes, Stack size 1376 bytes, menu_create.o(i.Menu_Ctmultiple))
<BR><BR>[Stack]<UL><LI>Max Depth = 1600<LI>Call Chain = Menu_Ctmultiple &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFS32P
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomInRes
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomIn
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonEdit
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[52c]"></a>Menu_Ctpitch</STRONG> (Thumb, 1208 bytes, Stack size 880 bytes, menu_create.o(i.Menu_Ctpitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = Menu_Ctpitch &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFS32P
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[52d]"></a>Menu_Cttacking</STRONG> (Thumb, 4590 bytes, Stack size 1944 bytes, menu_create.o(i.Menu_Cttacking))
<BR><BR>[Stack]<UL><LI>Max Depth = 2728<LI>Call Chain = Menu_Cttacking &rArr; Mit_Convert_Data &rArr; Mit_CreateAllData &rArr; Mit_Create_Data &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Analyse_Data1
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModTack
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Isocclu
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupSREG
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFS32P
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomInRes
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomIn
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonEdit
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[52e]"></a>Menu_Ctzigzag</STRONG> (Thumb, 2782 bytes, Stack size 1320 bytes, menu_create.o(i.Menu_Ctzigzag))
<BR><BR>[Stack]<UL><LI>Max Depth = 2104<LI>Call Chain = Menu_Ctzigzag &rArr; Mit_Convert_Data &rArr; Mit_CreateAllData &rArr; Mit_Create_Data &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_getPointXY
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Move_End
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Home
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFS32P
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomInRes
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomIn
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonEdit
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[52f]"></a>Menu_DesktopInit</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, main.o(i.Menu_DesktopInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Menu_DesktopInit &rArr; DrawFBMP2
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePage
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFBMP2
</UL>
<BR>[Called By]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[530]"></a>Menu_DirCallFile</STRONG> (Thumb, 10894 bytes, Stack size 2416 bytes, menu_create.o(i.Menu_DirCallFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 4904<LI>Call Chain = Menu_DirCallFile &rArr; Bor_CreatData &rArr; Bor_ModPindis &rArr; Bor_docur &rArr; Bor_doline &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_getPinAddr
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendExCodeCmd
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_getExCodeData
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isViewNo
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_getPatData
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_copyImgs
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_To_Mit
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatData
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatBack
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPFval
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoNeedTri
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoLineAndPin
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setPatRule
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetPatRule
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_To_Bor
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32Z
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPatLim
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPFlimt
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileIndex
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputExcode
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupSHREG
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN1
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFileno_16x8
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFilename
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setDrawXY
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[532]"></a>Menu_DirRead</STRONG> (Thumb, 2770 bytes, Stack size 2096 bytes, menu_p.o(i.Menu_DirRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 2960<LI>Call Chain = Menu_DirRead &rArr; fun_getPatData &rArr; Read_PatFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isViewNo
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_getPatData
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setPatRule
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetPatRule
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32Z
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileIndex
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN1
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFileno_16x8
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFilename
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setDrawXY
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[533]"></a>Menu_FastProg</STRONG> (Thumb, 2262 bytes, Stack size 824 bytes, menu_program.o(i.Menu_FastProg))
<BR><BR>[Stack]<UL><LI>Max Depth = 3824<LI>Call Chain = Menu_FastProg &rArr; Menu_SetProgNo &rArr; disProgDesc &rArr; Draw24x24MulStr &rArr; DrawUnicodeMulStr &rArr; DrawUnicodeMulStr24x24
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24MulStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProgVal
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getProgVal
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getProgType
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disProgVal
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[5c4]"></a>Menu_FtBootScreen</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, menu_function.o(i.Menu_FtBootScreen))
<BR><BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[539]"></a>Menu_FtCopy</STRONG> (Thumb, 4164 bytes, Stack size 2168 bytes, menu_function.o(i.Menu_FtCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 2976<LI>Call Chain = Menu_FtCopy &rArr; Read_PatFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_ExtMemory
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtMemory_Status
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_PatFile
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setPatRule
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetPatRule
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreSHREG
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMemorryList
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileIndex
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataCheckSum
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupSHREG
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN1
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFileno_16x8
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFilename
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setDrawXY
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[53a]"></a>Menu_FtDirReadMem</STRONG> (Thumb, 3012 bytes, Stack size 2096 bytes, menu_function.o(i.Menu_FtDirReadMem))
<BR><BR>[Stack]<UL><LI>Max Depth = 2960<LI>Call Chain = Menu_FtDirReadMem &rArr; fun_getPatData &rArr; Read_PatFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isViewNo
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_getPatData
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setPatRule
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetPatRule
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32Z
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN1
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFileno_16x8
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFilename
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setDrawXY
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[53b]"></a>Menu_FtFormat</STRONG> (Thumb, 990 bytes, Stack size 448 bytes, menu_function.o(i.Menu_FtFormat))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = Menu_FtFormat &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtMemory_Status
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[53c]"></a>Menu_FtGroup</STRONG> (Thumb, 3574 bytes, Stack size 1952 bytes, menu_function.o(i.Menu_FtGroup))
<BR><BR>[Stack]<UL><LI>Max Depth = 2184<LI>Call Chain = Menu_FtGroup &rArr; DrawEditTit &rArr; Draw16x16Str &rArr; DrawUnicodeStr1 &rArr; DrawUnicodeMulStr16x16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreSHREG
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupSHREG
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEditTit
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEdit
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[53d]"></a>Menu_FtReadCombine</STRONG> (Thumb, 5760 bytes, Stack size 1768 bytes, menu_function.o(i.Menu_FtReadCombine))
<BR><BR>[Stack]<UL><LI>Max Depth = 2552<LI>Call Chain = Menu_FtReadCombine &rArr; Explore_Disk &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_ExtMemory
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtMemory_Status
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk_Group
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMemorryList
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFStr
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[53f]"></a>Menu_FtReadMem</STRONG> (Thumb, 2914 bytes, Stack size 2152 bytes, menu_function.o(i.Menu_FtReadMem))
<BR><BR>[Stack]<UL><LI>Max Depth = 3016<LI>Call Chain = Menu_FtReadMem &rArr; fun_getPatData &rArr; Read_PatFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtMemory_Status
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_getPatData
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setPatRule
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetPatRule
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN1
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFileno_16x8
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFilename
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setDrawXY
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[540]"></a>Menu_FtScreenset</STRONG> (Thumb, 3774 bytes, Stack size 2632 bytes, menu_function.o(i.Menu_FtScreenset))
<BR><BR>[Stack]<UL><LI>Max Depth = 3104<LI>Call Chain = Menu_FtScreenset &rArr; ChkTouch &rArr; RecoveTouchPara &rArr; SaveTouchPara &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePessVal
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBackLight
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteTimer
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CailDate
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetKeyData
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLcdPwm
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkTouch
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DesktopInit
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStrP
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEditTit
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomIn
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonEdit
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[544]"></a>Menu_FtSysbackup</STRONG> (Thumb, 912 bytes, Stack size 384 bytes, menu_function.o(i.Menu_FtSysbackup))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = Menu_FtSysbackup &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtMemory_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24MulStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[545]"></a>Menu_FtSysrestore</STRONG> (Thumb, 2590 bytes, Stack size 1184 bytes, menu_function.o(i.Menu_FtSysrestore))
<BR><BR>[Stack]<UL><LI>Max Depth = 1416<LI>Call Chain = Menu_FtSysrestore &rArr; DrawEditTit &rArr; Draw16x16Str &rArr; DrawUnicodeStr1 &rArr; DrawUnicodeMulStr16x16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtMemory_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32Z
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEditTit
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24MulStr
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[546]"></a>Menu_FtSysversion</STRONG> (Thumb, 1446 bytes, Stack size 704 bytes, menu_function.o(i.Menu_FtSysversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = Menu_FtSysversion &rArr; DrawEditTit &rArr; Draw16x16Str &rArr; DrawUnicodeStr1 &rArr; DrawUnicodeMulStr16x16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32Z
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEditTit
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[547]"></a>Menu_FtUser</STRONG> (Thumb, 6464 bytes, Stack size 3272 bytes, menu_function.o(i.Menu_FtUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 3504<LI>Call Chain = Menu_FtUser &rArr; DrawEditTit &rArr; Draw16x16Str &rArr; DrawUnicodeStr1 &rArr; DrawUnicodeMulStr16x16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd3
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserNo
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32Z
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcopy
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkuserpassword
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkusername
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeAutPassword
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetKeyData
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readUsrMsg
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStrP
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFASC12
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEditTit
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawColor_Gray1
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomInRes
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomIn
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonEdit
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCD_2Hex
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[54c]"></a>Menu_FtWriteCombine</STRONG> (Thumb, 2986 bytes, Stack size 2992 bytes, menu_function.o(i.Menu_FtWriteCombine))
<BR><BR>[Stack]<UL><LI>Max Depth = 3216<LI>Call Chain = Menu_FtWriteCombine &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtMemory_Status
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FPY
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcopy
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalGroSaveNo
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomInRes
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomIn
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonEdit
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton3
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[54e]"></a>Menu_Function</STRONG> (Thumb, 1526 bytes, Stack size 1008 bytes, menu_function.o(i.Menu_Function))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232<LI>Call Chain = Menu_Function &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetKeyData
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawColor_Gray1
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[54f]"></a>Menu_HeSupportConnect</STRONG> (Thumb, 624 bytes, Stack size 232 bytes, menu_help.o(i.Menu_HeSupportConnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = Menu_HeSupportConnect &rArr; DrawFMenuStr &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[550]"></a>Menu_Inputset</STRONG> (Thumb, 3370 bytes, Stack size 2264 bytes, menu_iotest.o(i.Menu_Inputset))
<BR><BR>[Stack]<UL><LI>Max Depth = 2496<LI>Call Chain = Menu_Inputset &rArr; DrawEditTit &rArr; Draw16x16Str &rArr; DrawUnicodeStr1 &rArr; DrawUnicodeMulStr16x16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disIOname
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLine
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMultiLStr16
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFStr
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEditTit
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24MulStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[552]"></a>Menu_Inputstatus</STRONG> (Thumb, 1448 bytes, Stack size 2152 bytes, menu_iotest.o(i.Menu_Inputstatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 2376<LI>Call Chain = Menu_Inputstatus &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispInStatus
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLine
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMultiLStr16
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFStr
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[553]"></a>Menu_Iotest</STRONG> (Thumb, 630 bytes, Stack size 432 bytes, menu_iotest.o(i.Menu_Iotest))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = Menu_Iotest &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw16x16Str
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[554]"></a>Menu_Menu</STRONG> (Thumb, 3778 bytes, Stack size 616 bytes, menu_p.o(i.Menu_Menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304<LI>Call Chain = Menu_Menu &rArr; mit_setRepConPins &rArr; Mit_CreateAllData &rArr; Mit_Create_Data &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_SaveSplPatData
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_ConvertMultiDraw
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Analyse_SplineData
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_AnalyseDataCorrect
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CreateAllData
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_xyposi
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileIndex
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Home
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDrawScale
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupSREG
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupSHREG
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStrUser
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_setRepConPins
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[555]"></a>Menu_MoView</STRONG> (Thumb, 14326 bytes, Stack size 2072 bytes, menu_modify.o(i.Menu_MoView))
<BR><BR>[Stack]<UL><LI>Max Depth = 2460<LI>Call Chain = Menu_MoView &rArr; pat_drawPattern &rArr; Draw_Code_Num &rArr; DrawSerialNumber2 &rArr; DrawFU32 &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd2
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1_Status
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteJogmethod
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendExCodeCmd
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_getExCodeData
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setPatRule
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetPatRule
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_clearConvas
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailPadOffestPF
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFS32P
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;viewFeedCode
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Move_End
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputExcode1
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Home
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDrawPatPos
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RelationMove
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageWritern
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillRectColorChang
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFS32P
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMultiLStr24LimtL
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFileno_24x12
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawColor_Gray1
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton3
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[558]"></a>Menu_MoView2</STRONG> (Thumb, 2998 bytes, Stack size 544 bytes, menu_modify.o(i.Menu_MoView2))
<BR><BR>[Stack]<UL><LI>Max Depth = 1344<LI>Call Chain = Menu_MoView2 &rArr; Mit_Modify_Data &rArr; Mit_CreateAllData &rArr; Mit_Create_Data &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd2
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1_Status
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoArea
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setPatRule
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetPatRule
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_clearConvas
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Move_End
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecovrSREG
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Stpoint
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Home
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RelationMove
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupSREG
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[559]"></a>Menu_ModiAdd</STRONG> (Thumb, 29552 bytes, Stack size 1352 bytes, menu_modify.o(i.Menu_ModiAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1776<LI>Call Chain = Menu_ModiAdd &rArr; disStatusTit &rArr; Draw16x16Str &rArr; DrawUnicodeStr1 &rArr; DrawUnicodeMulStr16x16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_getStPin
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalLFval
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusUpdate
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusTit
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusFeedSum
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusFeedNow
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatus
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clrAllStatus
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sew_getPinAddr
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendExCodeCmd
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_getExCodeData
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_ModToCt
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailPadOffestLF
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CtBefDatAny
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatBack
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setPatRule
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetPatRule
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_getScale
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_getFinalScale
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_clearConvas
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConveStartEnd
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPointData2
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailPadOffestPF
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFeedPos
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;absInt
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Move_End
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecovrSREG
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_xyposi
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputExcode1
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Stpoint
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Home
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RelationMove
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupSREG
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoveData2
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillRectColorChang
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_BigCrossLimit
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFS32P
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton2
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[560]"></a>Menu_Modify</STRONG> (Thumb, 7718 bytes, Stack size 1608 bytes, menu_modify.o(i.Menu_Modify))
<BR><BR>[Stack]<UL><LI>Max Depth = 2272<LI>Call Chain = Menu_Modify &rArr; Mit_CreateAllData &rArr; Mit_Create_Data &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendExCodeCmd
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_getExCodeData
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailPadOffestLF
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CtBefDatAny
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatCalLF
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatBack
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CalPFval
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setPatRule
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetPatRule
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_clearConvas
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_getPointXY
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_ReadSregData
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CreateAllData
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailPadOffestPF
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFS32P
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw16x16Str
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mitRecovrSREG
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Move_End
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecovrSREG
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_xyposi
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputExcode1
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputExcode
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RelationMove
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[561]"></a>Menu_Modify1</STRONG> (Thumb, 21398 bytes, Stack size 2584 bytes, menu_modify.o(i.Menu_Modify1))
<BR><BR>[Stack]<UL><LI>Max Depth = 3384<LI>Call Chain = Menu_Modify1 &rArr; Mit_Modify_Data &rArr; Mit_CreateAllData &rArr; Mit_Create_Data &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModOrg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoveLine
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoPinSwitch
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModMoPin
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModDelPins
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModAddPin
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setPatRule
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetPatRule
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_getScale
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_getFinalScale
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_clearConvas
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNearPointPos
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPointData2
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFS32P
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw16x16Str
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;absInt
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Move_End
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_xyposi
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Stpoint
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Home
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RelationMove
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupSREG
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoveData2
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_SmallCrossLimit
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFS32P
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFChar
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawColor_Gray1
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomInRes
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomIn
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonEdit
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonDisPat
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[562]"></a>Menu_Modify2</STRONG> (Thumb, 7138 bytes, Stack size 2440 bytes, menu_modify.o(i.Menu_Modify2))
<BR><BR>[Stack]<UL><LI>Max Depth = 3240<LI>Call Chain = Menu_Modify2 &rArr; Mit_Modify_Data &rArr; Mit_CreateAllData &rArr; Mit_Create_Data &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModSpeed
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setPatRule
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetPatRule
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_getScale
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_getFinalScale
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_clearConvas
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPointData2
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFS32P
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw16x16Str
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;absInt
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_xyposi
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupSREG
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoveData2
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_SmallCrossLimit
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFS32P
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawColor_Gray1
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomInRes
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomIn
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonEdit
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonDisPat
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[563]"></a>Menu_Modify3</STRONG> (Thumb, 5308 bytes, Stack size 1400 bytes, menu_modify.o(i.Menu_Modify3))
<BR><BR>[Stack]<UL><LI>Max Depth = 2200<LI>Call Chain = Menu_Modify3 &rArr; Mit_Modify_Data &rArr; Mit_CreateAllData &rArr; Mit_Create_Data &rArr; Mit_do_spline &rArr; Mit_figurepoint_spline &rArr; verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModCode
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setPatRule
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_getScale
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_getFinalScale
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_clearConvas
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFS32P
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw16x16Str
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;absInt
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_xyposi
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupSREG
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomInRes
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomIn
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonEdit
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonDisPat
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[564]"></a>Menu_ModifyPatChangeMethod</STRONG> (Thumb, 4392 bytes, Stack size 1672 bytes, menu_modify.o(i.Menu_ModifyPatChangeMethod))
<BR><BR>[Stack]<UL><LI>Max Depth = 1896<LI>Call Chain = Menu_ModifyPatChangeMethod &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Move_End
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_xyposi
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFS32P
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEdit
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomInRes
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomIn
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonEdit
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[565]"></a>Menu_Outputset</STRONG> (Thumb, 7200 bytes, Stack size 3952 bytes, menu_iotest.o(i.Menu_Outputset))
<BR><BR>[Stack]<UL><LI>Max Depth = 4184<LI>Call Chain = Menu_Outputset &rArr; DrawEditTit &rArr; Draw16x16Str &rArr; DrawUnicodeStr1 &rArr; DrawUnicodeMulStr16x16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disIOname
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32Z
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLine
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetKeyData
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMultiLStr16
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFStr
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEditTit
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEdit
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomInRes
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomIn
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonEdit
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24MulStr
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[566]"></a>Menu_Outputstatus</STRONG> (Thumb, 2834 bytes, Stack size 2296 bytes, menu_iotest.o(i.Menu_Outputstatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 2520<LI>Call Chain = Menu_Outputstatus &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispOutStatus
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLine
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resetKeyData
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMultiLStr16
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFStr
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[567]"></a>Menu_P1</STRONG> (Thumb, 8630 bytes, Stack size 2000 bytes, menu_p.o(i.Menu_P1))
<BR><BR>[Stack]<UL><LI>Max Depth = 3032 + Unknown Stack Size
<LI>Call Chain = Menu_P1 &rArr; update_flash &rArr; Read_ProgramFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProgressbar
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd1
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalyseUpdateList
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_getPatData
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setPatRule
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetPatRule
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_clearConvas
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32Z
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;viewFeedCode
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPatList
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Home
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDrawData
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TF_Init
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoveData1
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMultiLStr24LimtL
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFileno_24x12
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFilename
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawColor_Gray1
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomInRes
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomIn
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonEdit
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_flash
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[56b]"></a>Menu_P2</STRONG> (Thumb, 4278 bytes, Stack size 1480 bytes, menu_p.o(i.Menu_P2))
<BR><BR>[Stack]<UL><LI>Max Depth = 1836<LI>Call Chain = Menu_P2 &rArr; Go_Home &rArr; pathTohome &rArr; OutputExcode1 &rArr; Wait_Move_End &rArr; Write_Cmd1 &rArr; Read_Status &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd1
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPatList
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Home
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFS32P
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32Z
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFStr
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawColor_Gray1
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FFStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[56c]"></a>Menu_ProDifferent</STRONG> (Thumb, 3624 bytes, Stack size 1904 bytes, menu_program.o(i.Menu_ProDifferent))
<BR><BR>[Stack]<UL><LI>Max Depth = 2128<LI>Call Chain = Menu_ProDifferent &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomInRes
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomIn
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24MulStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disProgVal
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[56d]"></a>Menu_ProFrame</STRONG> (Thumb, 1742 bytes, Stack size 760 bytes, menu_program.o(i.Menu_ProFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 984<LI>Call Chain = Menu_ProFrame &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24MulStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getProgVal
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getProgType
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disProgVal
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[56e]"></a>Menu_ProPara</STRONG> (Thumb, 292 bytes, Stack size 32 bytes, menu_program.o(i.Menu_ProPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 1712<LI>Call Chain = Menu_ProPara &rArr; Menu_ProgramLogic &rArr; Menu_ProgramLogicHelp &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLcdPwm
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[571]"></a>Menu_Prog</STRONG> (Thumb, 1624 bytes, Stack size 1368 bytes, menu_program.o(i.Menu_Prog))
<BR><BR>[Stack]<UL><LI>Max Depth = 1592<LI>Call Chain = Menu_Prog &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePessVal
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DesktopInit
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStrP
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24MulStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[56f]"></a>Menu_ProgramLogic</STRONG> (Thumb, 2098 bytes, Stack size 880 bytes, menu_program.o(i.Menu_ProgramLogic))
<BR><BR>[Stack]<UL><LI>Max Depth = 1680<LI>Call Chain = Menu_ProgramLogic &rArr; Menu_ProgramLogicHelp &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24MulStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProPara
</UL>

<P><STRONG><a name="[572]"></a>Menu_ProgramLogicHelp</STRONG> (Thumb, 1460 bytes, Stack size 576 bytes, menu_program.o(i.Menu_ProgramLogicHelp))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = Menu_ProgramLogicHelp &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24MulStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[570]"></a>Menu_ProgramNumber</STRONG> (Thumb, 1578 bytes, Stack size 1072 bytes, menu_program.o(i.Menu_ProgramNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 1328<LI>Call Chain = Menu_ProgramNumber &rArr; ToastShow1 &rArr; Draw24x24MulStr &rArr; DrawUnicodeMulStr &rArr; DrawUnicodeMulStr24x24
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32Z
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEdit
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24MulStr
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToastShow1
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProPara
</UL>

<P><STRONG><a name="[573]"></a>Menu_Read</STRONG> (Thumb, 4062 bytes, Stack size 2304 bytes, menu_p.o(i.Menu_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 3168<LI>Call Chain = Menu_Read &rArr; fun_getPatData &rArr; Read_PatFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_ExtMemory
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtMemory_Status
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_getPatData
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setPatRule
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetPatRule
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreSHREG
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPatList
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMemorryList
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileIndex
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDrawData
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupSHREG
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN1
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFileno_16x8
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFilename
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setDrawXY
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[574]"></a>Menu_RwHelp</STRONG> (Thumb, 31734 bytes, Stack size 1336 bytes, menu_documents.o(i.Menu_RwHelp))
<BR><BR>[Stack]<UL><LI>Max Depth = 4704 + Unknown Stack Size
<LI>Call Chain = Menu_RwHelp &rArr; copyDiskPatFile &rArr; mf_dcopy &rArr;  mf_dcopy (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isContain_U16
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_ExtMemory
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtMemory_Status
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mcpuprogram
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd1
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1_Status
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalyseUpdateList
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskPatFile
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mp3
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_dispprogram
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update1_dispprogram
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBootScreenMode
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFileByName
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDiskFiles
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deleteDiskFile
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_dispprogram
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copyDiskPatFile
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SysBackupkFile
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_RecordFile
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_PatFile
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_GroupFile
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePessVal
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBackLight
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_SysBackupkFile
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_PatFile
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_DealSaveData
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSR_MSP
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Format_Disk
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk_Group
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete_PatFile
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete_GroupFile
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_TO_Juki
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_2deal
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewMsg
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32Z
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strEqual
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFileTypeByIREG
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreSHREG
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreIREG
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMemorryList
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileIndex
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Home
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataCheckSum
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSREG
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDrawScale
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupSHREG
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TF_Init
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPessVal
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLcdPwm
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePage
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFS32P
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFHEX
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPNEW
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFileno
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFilename
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFBMP2
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDFrame
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawColor_Gray1
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw32X32FStr
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24MulStr
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStrByLine
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FFStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCD_2Hex
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_flash
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initFunctionBtn
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBufDat8
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBufDat16
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMyProgress1
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNumDigits
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFilesNo1
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFilesNo
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFiles
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFileNameByIREG
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMyProgress1
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;creatUpInfoData
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[583]"></a>Menu_Sensorstatus</STRONG> (Thumb, 1830 bytes, Stack size 1232 bytes, menu_iotest.o(i.Menu_Sensorstatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 1464<LI>Call Chain = Menu_Sensorstatus &rArr; DrawEditTit &rArr; Draw16x16Str &rArr; DrawUnicodeStr1 &rArr; DrawUnicodeMulStr16x16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispMotorStatus
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEditTit
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[534]"></a>Menu_SetProgNo</STRONG> (Thumb, 1968 bytes, Stack size 2752 bytes, menu_program.o(i.Menu_SetProgNo))
<BR><BR>[Stack]<UL><LI>Max Depth = 3000<LI>Call Chain = Menu_SetProgNo &rArr; disProgDesc &rArr; Draw24x24MulStr &rArr; DrawUnicodeMulStr &rArr; DrawUnicodeMulStr24x24
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStrP
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEditTit
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawEdit
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNoByCode
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCodeByNo
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAdjNoByCode
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disProgDesc
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disProgCode
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
</UL>

<P><STRONG><a name="[589]"></a>Menu_SkipJog</STRONG> (Thumb, 1884 bytes, Stack size 1280 bytes, menu_p.o(i.Menu_SkipJog))
<BR><BR>[Stack]<UL><LI>Max Depth = 1504<LI>Call Chain = Menu_SkipJog &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteJogmethod
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputExcode1
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[58a]"></a>Menu_StReadData</STRONG> (Thumb, 936 bytes, Stack size 72 bytes, main.o(i.Menu_StReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = Menu_StReadData &rArr; Write_Cmd1 &rArr; Read_Status &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd3
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd1
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupIREG
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[58b]"></a>Menu_Start</STRONG> (Thumb, 244 bytes, Stack size 48 bytes, main.o(i.Menu_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 1424<LI>Call Chain = Menu_Start &rArr; displayBootScreen &rArr; Avi_Play &rArr; MjpegDecode &rArr; jpeg_CreateDecompress &rArr; jinit_memory_mgr &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayBootScreen
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePage
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLR_Screen
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isUpInfoData
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58d]"></a>Menu_Thread</STRONG> (Thumb, 974 bytes, Stack size 264 bytes, menu_p.o(i.Menu_Thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = Menu_Thread &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd1
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN1
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24MulStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[58e]"></a>Menu_Wind</STRONG> (Thumb, 1614 bytes, Stack size 568 bytes, menu_p.o(i.Menu_Wind))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = Menu_Wind &rArr; updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[58f]"></a>Menu_Write</STRONG> (Thumb, 5578 bytes, Stack size 2992 bytes, menu_p.o(i.Menu_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 3776<LI>Call Chain = Menu_Write &rArr; Explore_Disk &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_ExtMemory
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtMemory_Status
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_DealSaveData
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_To_Mit
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FPY
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreSHREG
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPatList
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMemorryList
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadHzData
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileIndex
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FinePYFirstAdd
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupSHREG
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupIREG
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFilename
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFASC12
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomInRes
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomIn
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton3
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[592]"></a>Menu_Write1</STRONG> (Thumb, 1952 bytes, Stack size 584 bytes, menu_p.o(i.Menu_Write1))
<BR><BR>[Stack]<UL><LI>Max Depth = 852<LI>Call Chain = Menu_Write1 &rArr; fun_backPattingData &rArr; Bor_CtBefDatAny &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_DealSaveData
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPatList
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_keydata
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_On
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewPage
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStr
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFileno_24x12
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFilename
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonSingleColor
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButton
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_backPattingData
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
</UL>

<P><STRONG><a name="[51f]"></a>NeddleUp</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, function.o(i.NeddleUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NeddleUp
</UL>
<BR>[Called By]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
</UL>

<P><STRONG><a name="[507]"></a>NoLineAndPin</STRONG> (Thumb, 348 bytes, Stack size 20 bytes, menu_create.o(i.NoLineAndPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = NoLineAndPin
</UL>
<BR>[Called By]<UL><LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[506]"></a>NoNeedTri</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, menu_create.o(i.NoNeedTri))
<BR><BR>[Called By]<UL><LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[50a]"></a>OutputExcode</STRONG> (Thumb, 368 bytes, Stack size 40 bytes, function.o(i.OutputExcode))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = OutputExcode &rArr; Wait_Move_End &rArr; Write_Cmd1 &rArr; Read_Status &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1_Status
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Move_End
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[515]"></a>OutputExcode1</STRONG> (Thumb, 248 bytes, Stack size 48 bytes, function.o(i.OutputExcode1))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = OutputExcode1 &rArr; Wait_Move_End &rArr; Write_Cmd1 &rArr; Read_Status &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1_Status
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Move_End
</UL>
<BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pathTohome
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[556]"></a>PageWritern</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lcddisp.o(i.PageWritern))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PageWritern &rArr; SDRAM_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
</UL>

<P><STRONG><a name="[4ba]"></a>PutPixel</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lcddisp.o(i.PutPixel))
<BR><BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN2
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_F32x16
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_F24x12
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_F16x8
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoveData2
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoveData1
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillRectColorChang
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeStr24x24
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeMulStr24x24
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeMulStr16x16
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawIconon
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawIconoff
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawIcon
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPNEW
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN1
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFHz24X24
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFHz
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFBMP2
</UL>

<P><STRONG><a name="[4cc]"></a>PutPixel1</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lcddisp.o(i.PutPixel1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PutPixel1
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLine
</UL>

<P><STRONG><a name="[520]"></a>Read1_Status</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, communication.o(i.Read1_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Read1_Status &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
</UL>
<BR>[Called By]<UL><LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1_Cmd1
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputExcode1
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputExcode
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
</UL>

<P><STRONG><a name="[504]"></a>ReadFileIndex</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, function.o(i.ReadFileIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = ReadFileIndex &rArr; Read_Status &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
</UL>
<BR>[Called By]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPatList
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMemorryList
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[591]"></a>ReadHzData</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, function.o(i.ReadHzData))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ReadHzData
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
</UL>

<P><STRONG><a name="[1e4]"></a>ReadMboard_ProgramData</STRONG> (Thumb, 588 bytes, Stack size 80 bytes, communication.o(i.ReadMboard_ProgramData))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = ReadMboard_ProgramData &rArr; Write1_Cmd1 &rArr; Read1_Status &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProgressbar
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1_Cmd1
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mcpuprogram
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnalyseUpdateList
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mp3
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_dispprogram
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_dispprogram
</UL>

<P><STRONG><a name="[50c]"></a>ReadMemorryList</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, function.o(i.ReadMemorryList))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = ReadMemorryList &rArr; ReadFileIndex &rArr; Read_Status &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileIndex
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarcodeCompare
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[503]"></a>ReadPatList</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, function.o(i.ReadPatList))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = ReadPatList &rArr; ReadFileIndex &rArr; Read_Status &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileIndex
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarcodeCompare
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[4a8]"></a>ReadPixel</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lcddisp.o(i.ReadPixel))
<BR><BR>[Called By]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPointData2
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPointData1
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillRectColorChang
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOnZoomIn
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOn
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawButtonOff
</UL>

<P><STRONG><a name="[4d3]"></a>ReadPointData1</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lcddisp.o(i.ReadPointData1))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReadPointData1
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSerialNumber
</UL>

<P><STRONG><a name="[4fc]"></a>ReadPointData2</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lcddisp.o(i.ReadPointData2))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReadPointData2
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[252]"></a>Read_D</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, communication.o(i.Read_D))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_DS
</UL>
<BR>[Called By]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mcpuprogram
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMboard_ProgramData
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1_Status
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_RecordFile
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_DealSaveData
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_getPatData
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CtBefDatAny
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_To_Bor
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pathTohome
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_xyposi
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPatList
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileIndex
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Stpoint
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Home
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RelationMove
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDrawScale
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDrawData
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Function
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readUsrMsg
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_StReadData
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysIfo
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showTime
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juki_TO_Bor
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Change_E
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>

<P><STRONG><a name="[596]"></a>Read_DS</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, communication.o(i.Read_DS))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_DMASendBuf
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_rsd
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
</UL>

<P><STRONG><a name="[251]"></a>Read_Status</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, communication.o(i.Read_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Read_Status &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd1
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_RecordFile
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendExCodeCmd
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_getPatData
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileIndex
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputExcode1
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputExcode
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_StReadData
</UL>

<P><STRONG><a name="[34f]"></a>Read_xyposi</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, function.o(i.Read_xyposi))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = Read_xyposi &rArr; Write_Cmd1 &rArr; Read_Status &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd1
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[56a]"></a>RecoveData1</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lcddisp.o(i.RecoveData1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RecoveData1
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
</UL>

<P><STRONG><a name="[4fb]"></a>RecoveData2</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, lcddisp.o(i.RecoveData2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RecoveData2
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[4f5]"></a>RecovrSREG</STRONG> (Thumb, 250 bytes, Stack size 28 bytes, function.o(i.RecovrSREG))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RecovrSREG
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
</UL>

<P><STRONG><a name="[599]"></a>Reg_Init</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, register.o(i.Reg_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Reg_Init &rArr; ReadTouchPara &rArr; W25QXX_Read &rArr; SPI1_DMAT_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadUserNo
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTouchPara
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSysid
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBatType
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBackLight
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[59a]"></a>ResetData1</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcddisp.o(i.ResetData1))
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetPatRule
</UL>

<P><STRONG><a name="[59b]"></a>ResetData2</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcddisp.o(i.ResetData2))
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetPatRule
</UL>

<P><STRONG><a name="[576]"></a>RestoreIREG</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, function.o(i.RestoreIREG))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RestoreIREG
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[50d]"></a>RestoreSHREG</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, function.o(i.RestoreSHREG))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RestoreSHREG
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_backPattingData
</UL>

<P><STRONG><a name="[59c]"></a>Rotary_Logo</STRONG> (Thumb, 300 bytes, Stack size 64 bytes, main.o(i.Rotary_Logo))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Rotary_Logo &rArr; DrawFBMP2
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFBMP2
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[594]"></a>SDRAM_memcpy</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcddisp.o(i.SDRAM_memcpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SDRAM_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageWritern
</UL>

<P><STRONG><a name="[339]"></a>SaveBakData</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, function.o(i.SaveBakData))
<BR><BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_SaveSplPatData
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_SaveSregData
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailSavePadAdd
</UL>

<P><STRONG><a name="[4e9]"></a>Send_Pfoot</STRONG> (Thumb, 188 bytes, Stack size 56 bytes, function.o(i.Send_Pfoot))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = Send_Pfoot &rArr; Write_Cmd1 &rArr; Read_Status &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd1
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Stpoint
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
</UL>

<P><STRONG><a name="[5bc]"></a>SetDrawXY</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, lcddisp.o(i.SetDrawXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetDrawXY
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setDrawXY
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetDrawXY
</UL>

<P><STRONG><a name="[486]"></a>SetLanguage</STRONG> (Thumb, 520 bytes, Stack size 20 bytes, lcddisp.o(i.SetLanguage))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetLanguage
</UL>
<BR>[Called By]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatusTit
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProPara
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Iotest
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_HeSupportConnect
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Function
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtFormat
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtMethod
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTouchPara
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStrP1
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMenuStrP
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showTime
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[542]"></a>SetLcdPwm</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, utility.o(i.SetLcdPwm))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProPara
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[580]"></a>SetMyProgress1</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, mit_funtion.o(i.SetMyProgress1))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SetMyProgress1 &rArr; DrawFillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[2d]"></a>SysTick_Handler</STRONG> (Thumb, 630 bytes, Stack size 24 bytes, utility.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = SysTick_Handler &rArr; Read_Status &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd3
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_TchData
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rotary_Logo
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisAnimation
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToastHide
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>SystemInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_stm32f4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(.text)
</UL>
<P><STRONG><a name="[64]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 322 bytes, Stack size 24 bytes, utility.o(i.TIM6_DAC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = TIM6_DAC_IRQHandler &rArr; USB_Process &rArr; USBH_Process &rArr; USBH_HandleEnum &rArr; USBH_Get_CfgDesc &rArr; USBH_ParseCfgDesc
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Process
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReSet
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9xx_Scan
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLcdPwm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5c6]"></a>Time13_Init</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, utility.o(i.Time13_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Time13_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[5c7]"></a>Time14_Init</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, utility.o(i.Time14_Init))
<BR><BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[5c8]"></a>Time6_Init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, utility.o(i.Time6_Init))
<BR><BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[526]"></a>ToastHide</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, toast.o(i.ToastHide))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ToastHide &rArr; recoverAreaColor
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recoverAreaColor
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
</UL>

<P><STRONG><a name="[523]"></a>ToastInit</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, toast.o(i.ToastInit))
<BR><BR>[Called By]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
</UL>

<P><STRONG><a name="[524]"></a>ToastSetBackColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, toast.o(i.ToastSetBackColor))
<BR><BR>[Called By]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
</UL>

<P><STRONG><a name="[525]"></a>ToastSetTextColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, toast.o(i.ToastSetTextColor))
<BR><BR>[Called By]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
</UL>

<P><STRONG><a name="[527]"></a>ToastShow1</STRONG> (Thumb, 272 bytes, Stack size 48 bytes, toast.o(i.ToastShow1))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = ToastShow1 &rArr; Draw24x24MulStr &rArr; DrawUnicodeMulStr &rArr; DrawUnicodeMulStr24x24
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getStrLen
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;backupAreaColor
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24MulStr
</UL>
<BR>[Called By]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
</UL>

<P><STRONG><a name="[575]"></a>ViewMsg</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, menu_documents.o(i.ViewMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = ViewMsg &rArr; Draw24x24MulStr &rArr; DrawUnicodeMulStr &rArr; DrawUnicodeMulStr24x24
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24MulStr
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[1fc]"></a>ViewPage</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lcddisp.o(i.ViewPage))
<BR><BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Iotest
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_HeSupportConnect
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Function
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtFormat
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtMethod
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkTouch
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Start
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTouchPara
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawAvi
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBook
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[4f3]"></a>Wait_Move_End</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, function.o(i.Wait_Move_End))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = Wait_Move_End &rArr; Write_Cmd1 &rArr; Read_Status &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd1
</UL>
<BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pathTohome
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputExcode1
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputExcode
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
</UL>

<P><STRONG><a name="[595]"></a>Write1_Cmd1</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, communication.o(i.Write1_Cmd1))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = Write1_Cmd1 &rArr; Read1_Status &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read1_Status
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMboard_ProgramData
</UL>

<P><STRONG><a name="[280]"></a>WritePage</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lcddisp.o(i.WritePage))
<BR><BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Start
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DesktopInit
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTouchPara
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MjpegDecode
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawAvi
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPage
</UL>

<P><STRONG><a name="[543]"></a>WriteTimer</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, function.o(i.WriteTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = WriteTimer &rArr; Write_D &rArr; Write_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex_2BCD
</UL>
<BR>[Called By]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
</UL>

<P><STRONG><a name="[250]"></a>Write_Cmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, communication.o(i.Write_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Write_Cmd &rArr; Write_D &rArr; Write_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
</UL>
<BR>[Called By]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mcpuprogram
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd1
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write1_Cmd1
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_RecordFile
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendExCodeCmd
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_getPatData
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFileIndex
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputExcode1
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputExcode
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Stpoint
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProPara
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_StReadData
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_backPattingData
</UL>

<P><STRONG><a name="[1e7]"></a>Write_Cmd1</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, communication.o(i.Write_Cmd1))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = Write_Cmd1 &rArr; Read_Status &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_dispprogram
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Move_End
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Pfoot
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_xyposi
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_StReadData
</UL>

<P><STRONG><a name="[501]"></a>Write_Cmd2</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, communication.o(i.Write_Cmd2))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Write_Cmd2 &rArr; Write_D &rArr; Write_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
</UL>
<BR>[Called By]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
</UL>

<P><STRONG><a name="[4ef]"></a>Write_Cmd3</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, communication.o(i.Write_Cmd3))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Write_Cmd3 &rArr; Write_D &rArr; Write_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_StReadData
</UL>

<P><STRONG><a name="[489]"></a>Write_D</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, communication.o(i.Write_D))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Write_D &rArr; Write_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_DS
</UL>
<BR>[Called By]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mcpuprogram
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd3
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd2
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteTimer
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPatList
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Home
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RelationMove
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProPara
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProgVal
</UL>

<P><STRONG><a name="[5a2]"></a>Write_DS</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, communication.o(i.Write_DS))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Write_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_DMASendBuf
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_rsd
</UL>
<BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
</UL>

<P><STRONG><a name="[5a4]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[2ec]"></a>__hardfp_atan</STRONG> (Thumb, 622 bytes, Stack size 48 bytes, atan.o(i.__hardfp_atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_arc
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[2d8]"></a>__hardfp_atan2</STRONG> (Thumb, 448 bytes, Stack size 56 bytes, atan2.o(i.__hardfp_atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_UpSplCtr
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPindis
</UL>

<P><STRONG><a name="[2e5]"></a>__hardfp_cos</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, cos.o(i.__hardfp_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_copyImgs
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConSpin
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
</UL>

<P><STRONG><a name="[2e3]"></a>__hardfp_sin</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, sin.o(i.__hardfp_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_copyImgs
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConSpin
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
</UL>

<P><STRONG><a name="[2b2]"></a>__hardfp_sqrt</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, sqrt.o(i.__hardfp_sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatus
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sew_GetSewLen
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verticalline_pos2
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqr
</UL>

<P><STRONG><a name="[2f0]"></a>__hardfp_tan</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, tan.o(i.__hardfp_tan))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __hardfp_tan &rArr; __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_arc
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
</UL>

<P><STRONG><a name="[5ac]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 938 bytes, Stack size 120 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_tan
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[5ae]"></a>__kernel_cos</STRONG> (Thumb, 322 bytes, Stack size 64 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[5a7]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[5ad]"></a>__kernel_sin</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[5b0]"></a>__kernel_tan</STRONG> (Thumb, 764 bytes, Stack size 128 bytes, tan_i.o(i.__kernel_tan))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_tan
</UL>

<P><STRONG><a name="[5a3]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_infnan &rArr; __aeabi_dadd
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_tan
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[5a9]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[5ab]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_tan
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[5a5]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[45d]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[4fe]"></a>absInt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, function.o(i.absInt))
<BR><BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[1e5]"></a>asctonum</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, utility.o(i.asctonum))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = asctonum &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mp3
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initflashadd
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_BookFile
</UL>

<P><STRONG><a name="[5aa]"></a>atan</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[5a0]"></a>backupAreaColor</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, lcddisp.o(i.backupAreaColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = backupAreaColor
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToastShow1
</UL>

<P><STRONG><a name="[5ca]"></a>borGetDiscode</STRONG> (Thumb, 268 bytes, Stack size 0 bytes, function.o(i.borGetDiscode))
<BR><BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;viewFeedCode
</UL>

<P><STRONG><a name="[54a]"></a>checkusername</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, function.o(i.checkusername))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = checkusername
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
</UL>

<P><STRONG><a name="[548]"></a>checkuserpassword</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, function.o(i.checkuserpassword))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = checkuserpassword
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
</UL>

<P><STRONG><a name="[2ea]"></a>circle_center</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, patfun.o(i.circle_center))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = circle_center &rArr; lines_intersection &rArr; __aeabi_ldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lines_intersection
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Create_Data
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
</UL>

<P><STRONG><a name="[55f]"></a>clrAllStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, menu_modify.o(i.clrAllStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = clrAllStatus &rArr; BmpFillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
</UL>

<P><STRONG><a name="[5b6]"></a>clrBit16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mit_funtion.o(i.clrBit16))
<BR><BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initFunctionBtn
</UL>

<P><STRONG><a name="[5b8]"></a>clrShowTime</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, function.o(i.clrShowTime))
<BR><BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
</UL>

<P><STRONG><a name="[518]"></a>cmdAny</STRONG> (Thumb, 250 bytes, Stack size 8 bytes, menu_create.o(i.cmdAny))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = cmdAny
</UL>
<BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[2ad]"></a>copyU16</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, function.o(i.copyU16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = copyU16
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_To_Mit
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_To_Bor
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juki_TO_Bor
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Change_E
</UL>

<P><STRONG><a name="[551]"></a>disIOname</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, menu_iotest.o(i.disIOname))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = disIOname &rArr; DrawUnicodeMulStr &rArr; DrawUnicodeMulStr24x24
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeMulStr
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FFStrN
</UL>
<BR>[Called By]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
</UL>

<P><STRONG><a name="[586]"></a>disProgCode</STRONG> (Thumb, 182 bytes, Stack size 48 bytes, menu_program.o(i.disProgCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = disProgCode &rArr; Draw16x16Str &rArr; DrawUnicodeStr1 &rArr; DrawUnicodeMulStr16x16
</UL>
<BR>[Calls]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw16x16Str
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
</UL>

<P><STRONG><a name="[587]"></a>disProgDesc</STRONG> (Thumb, 54 bytes, Stack size 40 bytes, menu_program.o(i.disProgDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = disProgDesc &rArr; Draw24x24MulStr &rArr; DrawUnicodeMulStr &rArr; DrawUnicodeMulStr24x24
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24MulStr
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
</UL>

<P><STRONG><a name="[538]"></a>disProgVal</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, menu_program.o(i.disProgVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = disProgVal &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32ZR
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
</UL>

<P><STRONG><a name="[55b]"></a>disStatus</STRONG> (Thumb, 1698 bytes, Stack size 120 bytes, menu_modify.o(i.disStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = disStatus &rArr; Draw16x16Str &rArr; DrawUnicodeStr1 &rArr; DrawUnicodeMulStr16x16
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFS32P
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw16x16Str
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
</UL>

<P><STRONG><a name="[55d]"></a>disStatusFeedNow</STRONG> (Thumb, 90 bytes, Stack size 48 bytes, menu_modify.o(i.disStatusFeedNow))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = disStatusFeedNow &rArr; DrawFU32 &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
</UL>

<P><STRONG><a name="[55c]"></a>disStatusFeedSum</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, menu_modify.o(i.disStatusFeedSum))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = disStatusFeedSum &rArr; DrawFU32 &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
</UL>

<P><STRONG><a name="[55a]"></a>disStatusTit</STRONG> (Thumb, 242 bytes, Stack size 240 bytes, menu_modify.o(i.disStatusTit))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = disStatusTit &rArr; Draw16x16Str &rArr; DrawUnicodeStr1 &rArr; DrawUnicodeMulStr16x16
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw16x16Str
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
</UL>

<P><STRONG><a name="[55e]"></a>disStatusUpdate</STRONG> (Thumb, 740 bytes, Stack size 96 bytes, menu_modify.o(i.disStatusUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = disStatusUpdate &rArr; DrawFS32P &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFS32P
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
</UL>

<P><STRONG><a name="[511]"></a>dis_data</STRONG> (Thumb, 1594 bytes, Stack size 336 bytes, function.o(i.dis_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = dis_data &rArr; Draw16x16Str &rArr; DrawUnicodeStr1 &rArr; DrawUnicodeMulStr16x16
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFU32
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFS32P
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawF16Str
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDottedRect
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw16x16Str
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[58c]"></a>displayBootScreen</STRONG> (Thumb, 304 bytes, Stack size 48 bytes, main.o(i.displayBootScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376<LI>Call Chain = displayBootScreen &rArr; Avi_Play &rArr; MjpegDecode &rArr; jpeg_CreateDecompress &rArr; jinit_memory_mgr &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_AviFile
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Avi_Play
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFBMP2
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBMP
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Start
</UL>

<P><STRONG><a name="[4bb]"></a>dsp_F16x8</STRONG> (Thumb, 90 bytes, Stack size 52 bytes, lcddisp.o(i.dsp_F16x8))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFChar
</UL>

<P><STRONG><a name="[4b8]"></a>dsp_F24x12</STRONG> (Thumb, 74 bytes, Stack size 52 bytes, lcddisp.o(i.dsp_F24x12))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFASC12
</UL>

<P><STRONG><a name="[4b9]"></a>dsp_F32x16</STRONG> (Thumb, 74 bytes, Stack size 52 bytes, lcddisp.o(i.dsp_F32x16))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = dsp_F32x16
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFASC3216
</UL>

<P><STRONG><a name="[5a6]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[593]"></a>fun_backPattingData</STRONG> (Thumb, 1366 bytes, Stack size 80 bytes, menu_p.o(i.fun_backPattingData))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = fun_backPattingData &rArr; Bor_CtBefDatAny &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CtBefDatAny
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatBack
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreSHREG
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_Move
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
</UL>

<P><STRONG><a name="[505]"></a>fun_getPatData</STRONG> (Thumb, 406 bytes, Stack size 56 bytes, menu_p.o(i.fun_getPatData))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = fun_getPatData &rArr; Read_PatFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_ExtMemory
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_PatFile
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataCheckSum
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[585]"></a>getAdjNoByCode</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, menu_program.o(i.getAdjNoByCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = getAdjNoByCode &rArr; strComp
</UL>
<BR>[Calls]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strComp1
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strComp
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
</UL>

<P><STRONG><a name="[588]"></a>getCodeByNo</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, menu_program.o(i.getCodeByNo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = getCodeByNo
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
</UL>

<P><STRONG><a name="[5b3]"></a>getDiskStatus</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, function.o(i.getDiskStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = getDiskStatus &rArr; USB_USR_MSC_FATFSINIT &rArr; f_mount
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtMemory_Status
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_USR_MSC_FATFSINIT
</UL>
<BR>[Called By]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showDiskStatus
</UL>

<P><STRONG><a name="[5c0]"></a>getDiskStatus1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, function.o(i.getDiskStatus1))
<BR><BR>[Called By]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showDiskStatus
</UL>

<P><STRONG><a name="[517]"></a>getFeedPos</STRONG> (Thumb, 344 bytes, Stack size 80 bytes, function.o(i.getFeedPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = getFeedPos &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[5b4]"></a>getFeedXY</STRONG> (Thumb, 318 bytes, Stack size 80 bytes, function.o(i.getFeedXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = getFeedXY &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
</UL>

<P><STRONG><a name="[5b5]"></a>getFeedXY1</STRONG> (Thumb, 262 bytes, Stack size 72 bytes, function.o(i.getFeedXY1))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = getFeedXY1 &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
</UL>

<P><STRONG><a name="[57d]"></a>getFileNameByIREG</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mit_funtion.o(i.getFileNameByIREG))
<BR><BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFilesNo1
</UL>

<P><STRONG><a name="[57b]"></a>getFileTypeByIREG</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, function.o(i.getFileTypeByIREG))
<BR><BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFilesNo1
</UL>

<P><STRONG><a name="[578]"></a>getFiles</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, mit_funtion.o(i.getFiles))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = getFiles
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[57a]"></a>getFilesNo</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, mit_funtion.o(i.getFilesNo))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = getFilesNo
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[582]"></a>getFilesNo1</STRONG> (Thumb, 224 bytes, Stack size 88 bytes, mit_funtion.o(i.getFilesNo1))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = getFilesNo1 &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFileTypeByIREG
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFileNameByIREG
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[52a]"></a>getModLfNo</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, menu_create.o(i.getModLfNo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = getModLfNo
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
</UL>

<P><STRONG><a name="[4ff]"></a>getNearPointPos</STRONG> (Thumb, 328 bytes, Stack size 96 bytes, menu_modify.o(i.getNearPointPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = getNearPointPos &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[584]"></a>getNoByCode</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, menu_program.o(i.getNoByCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = getNoByCode &rArr; strComp
</UL>
<BR>[Calls]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strComp
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
</UL>

<P><STRONG><a name="[581]"></a>getNumDigits</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, mit_funtion.o(i.getNumDigits))
<BR><BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[536]"></a>getProgType</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, menu_program.o(i.getProgType))
<BR><BR>[Called By]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
</UL>

<P><STRONG><a name="[535]"></a>getProgVal</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, menu_program.o(i.getProgVal))
<BR><BR>[Called By]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
</UL>

<P><STRONG><a name="[59f]"></a>getStrLen</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, function.o(i.getStrLen))
<BR><BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strEqual
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToastShow1
</UL>

<P><STRONG><a name="[5c2]"></a>getWeekDay</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, exfunction.o(i.getWeekDay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = getWeekDay
</UL>
<BR>[Called By]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showTime
</UL>

<P><STRONG><a name="[1fd]"></a>get_keydata</STRONG> (Thumb, 830 bytes, Stack size 48 bytes, utility.o(i.get_keydata))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = get_keydata &rArr; Touch_AutoGet_XY &rArr; getDisplayPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_AutoGet_XY
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9xx_Scan
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Iotest
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_HeSupportConnect
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Function
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtFormat
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtMethod
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkTouch
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[519]"></a>getctNearPointPos</STRONG> (Thumb, 340 bytes, Stack size 96 bytes, menu_create.o(i.getctNearPointPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = getctNearPointPos &rArr; Bor_DrawCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[2cd]"></a>getpoint_sum</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, patfun.o(i.getpoint_sum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = getpoint_sum
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_line
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_spline
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_feed
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_feed1
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juki_dofeed
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docur
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doline
</UL>

<P><STRONG><a name="[2ef]"></a>getpoint_sum2</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, patfun.o(i.getpoint_sum2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = getpoint_sum2
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_getLinePins
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_arc
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_line
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
</UL>

<P><STRONG><a name="[57e]"></a>initFunctionBtn</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, mit_menu_files.o(i.initFunctionBtn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = initFunctionBtn
</UL>
<BR>[Calls]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clrBit16
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[57f]"></a>initMyProgress1</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, mit_funtion.o(i.initMyProgress1))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = initMyProgress1 &rArr; DrawRect &rArr; DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[4ed]"></a>initViewStatus</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcddisp.o(i.initViewStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = initViewStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDiskStatus
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clrShowTime
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Iotest
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Function
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtFormat
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtMethod
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[5b9]"></a>initflashadd</STRONG> (Thumb, 1240 bytes, Stack size 152 bytes, lcddisp.o(i.initflashadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = initflashadd &rArr; W25QXX_Write &rArr; W25QXX_Write_NoCheck &rArr; W25QXX_Write_Page &rArr; W25QXX_Wait_Busy &rArr; W25QXX_ReadSR &rArr; SPI1_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isUpInfoData
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;creatUpInfoData
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asctonum
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlaySound
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e3]"></a>isContain_U16</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, exfunction.o(i.isContain_U16))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isContain_U16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorMsg
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[531]"></a>isViewNo</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, menu_p.o(i.isViewNo))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = isViewNo
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
</UL>

<P><STRONG><a name="[2e6]"></a>lines_intersection</STRONG> (Thumb, 292 bytes, Stack size 24 bytes, patfun.o(i.lines_intersection))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lines_intersection &rArr; __aeabi_ldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Create_Data
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circle_center
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailSplinePad
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
</UL>

<P><STRONG><a name="[326]"></a>lines_intersection1</STRONG> (Thumb, 364 bytes, Stack size 24 bytes, patfun.o(i.lines_intersection1))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lines_intersection1 &rArr; __aeabi_ldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_figurepoint_spline
</UL>

<P><STRONG><a name="[13e]"></a>main</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 6200 + Unknown Stack Size
<LI>Call Chain = main &rArr; systemApp &rArr; Menu_CtCursor &rArr; Bor_CreatData &rArr; Bor_ModPindis &rArr; Bor_docur &rArr; Bor_doline &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBootScreenMxg
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLcdPwm
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Start
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reg_Init
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initflashadd
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[34e]"></a>mitBackupSREG</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, function.o(i.mitBackupSREG))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mitBackupSREG
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
</UL>

<P><STRONG><a name="[4f4]"></a>mitRecovrSREG</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, function.o(i.mitRecovrSREG))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mitRecovrSREG
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
</UL>

<P><STRONG><a name="[255]"></a>mymemset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, function.o(i.mymemset), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;importParas
</UL>

<P><STRONG><a name="[2aa]"></a>mysetU16</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, function.o(i.mysetU16))
<BR><BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_TO_Juki
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_To_Mit
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CtBefDatAny
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_To_Bor
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juki_TO_Bor
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Change_E
</UL>

<P><STRONG><a name="[4f6]"></a>pat_clearConvas</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, viewpattern.o(i.pat_clearConvas))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = pat_clearConvas &rArr; DrawFillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
</UL>

<P><STRONG><a name="[4f7]"></a>pat_drawPattern</STRONG> (Thumb, 7996 bytes, Stack size 232 bytes, viewpattern.o(i.pat_drawPattern))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = pat_drawPattern &rArr; Draw_Code_Num &rArr; DrawSerialNumber2 &rArr; DrawFU32 &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_getScale
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_getFinalScale
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPointData2
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawVLine
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLine
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFeedXY1
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFeedXY
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataCheckSum
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPointData1
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_SmallCross
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FullPoint
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Code_Num
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Code_HSEP
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Code_BMP
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_BigCross
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setDrawXY
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetDrawXY
</UL>
<BR>[Called By]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
</UL>

<P><STRONG><a name="[4fa]"></a>pat_getFinalScale</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, viewpattern.o(i.pat_getFinalScale))
<BR><BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[4f9]"></a>pat_getScale</STRONG> (Thumb, 322 bytes, Stack size 40 bytes, viewpattern.o(i.pat_getScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pat_getScale
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
</UL>

<P><STRONG><a name="[4db]"></a>pat_resetDrawXY</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, viewpattern.o(i.pat_resetDrawXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pat_resetDrawXY &rArr; SetDrawXY
</UL>
<BR>[Calls]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDrawXY
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_SmallCrossLimit
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_BigCrossLimit
</UL>

<P><STRONG><a name="[4f1]"></a>pat_resetPatRule</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, viewpattern.o(i.pat_resetPatRule))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pat_resetPatRule
</UL>
<BR>[Calls]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetData2
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetData1
</UL>
<BR>[Called By]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setPatRule
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
</UL>

<P><STRONG><a name="[4da]"></a>pat_setDrawXY</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, viewpattern.o(i.pat_setDrawXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pat_setDrawXY &rArr; SetDrawXY
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDrawXY
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_SmallCrossLimit
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_BigCrossLimit
</UL>

<P><STRONG><a name="[4f2]"></a>pat_setPatRule</STRONG> (Thumb, 1536 bytes, Stack size 40 bytes, viewpattern.o(i.pat_setPatRule))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pat_setPatRule &rArr; pat_resetPatRule
</UL>
<BR>[Calls]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_resetPatRule
</UL>
<BR>[Called By]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
</UL>

<P><STRONG><a name="[4e7]"></a>pathTohome</STRONG> (Thumb, 618 bytes, Stack size 104 bytes, function.o(i.pathTohome))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = pathTohome &rArr; OutputExcode1 &rArr; Wait_Move_End &rArr; Write_Cmd1 &rArr; Read_Status &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_feedInfo
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Move_End
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutputExcode1
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comm_RelationMove
</UL>
<BR>[Called By]<UL><LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_Home
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
</UL>

<P><STRONG><a name="[4eb]"></a>readUsrMsg</STRONG> (Thumb, 538 bytes, Stack size 24 bytes, main.o(i.readUsrMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = readUsrMsg &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcopy
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysIfo
</UL>

<P><STRONG><a name="[59e]"></a>recoverAreaColor</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, lcddisp.o(i.recoverAreaColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = recoverAreaColor
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToastHide
</UL>

<P><STRONG><a name="[5bd]"></a>refreshPoint</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcddisp.o(i.refreshPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = refreshPoint &rArr; Draw24X24FStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refreshPointOnMenu
</UL>

<P><STRONG><a name="[5be]"></a>refreshPointOnMenu</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcddisp.o(i.refreshPointOnMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = refreshPointOnMenu &rArr; refreshPoint &rArr; Draw24X24FStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refreshPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
</UL>

<P><STRONG><a name="[513]"></a>resetKeyData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, utility.o(i.resetKeyData))
<BR><BR>[Called By]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Function
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
</UL>

<P><STRONG><a name="[508]"></a>sendExCodeCmd</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, menu_modify.o(i.sendExCodeCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = sendExCodeCmd &rArr; Read_Status &rArr; Read_D &rArr; Read_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
</UL>

<P><STRONG><a name="[579]"></a>setBufDat16</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, mit_funtion.o(i.setBufDat16))
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[57c]"></a>setBufDat8</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mit_funtion.o(i.setBufDat8))
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[5b7]"></a>setDiskStatus</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, function.o(i.setDiskStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initViewStatus
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showDiskStatus
</UL>

<P><STRONG><a name="[537]"></a>setProgVal</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, menu_program.o(i.setProgVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = setProgVal &rArr; Write_D &rArr; Write_DS &rArr; wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
</UL>

<P><STRONG><a name="[5bf]"></a>showDiskStatus</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lcddisp.o(i.showDiskStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = showDiskStatus &rArr; DrawFPBMPBTN
</UL>
<BR>[Calls]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDiskStatus
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDiskStatus1
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDiskStatus
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFPBMPBTN
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
</UL>

<P><STRONG><a name="[5c1]"></a>showTime</STRONG> (Thumb, 288 bytes, Stack size 40 bytes, lcddisp.o(i.showTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getWeekDay
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguage
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMFU32
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24x24Str
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpFillRect
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCD_2Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showTimeOnMenu
</UL>

<P><STRONG><a name="[5c3]"></a>showTimeOnMenu</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcddisp.o(i.showTimeOnMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showTime
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateViewStatus
</UL>

<P><STRONG><a name="[2f3]"></a>sqr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, patfun.o(i.sqr))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_To_Mit
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis_zag
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_arc
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
</UL>

<P><STRONG><a name="[5b1]"></a>strComp</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, menu_program.o(i.strComp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strComp
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNoByCode
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAdjNoByCode
</UL>

<P><STRONG><a name="[5b2]"></a>strComp1</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, menu_program.o(i.strComp1))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strComp1
</UL>
<BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getAdjNoByCode
</UL>

<P><STRONG><a name="[274]"></a>strEqual</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, function.o(i.strEqual))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strEqual
</UL>
<BR>[Calls]<UL><LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getStrLen
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deleteDiskFile
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copyDiskPatFile
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[549]"></a>strcopy</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, function.o(i.strcopy))
<BR><BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readUsrMsg
</UL>

<P><STRONG><a name="[5bb]"></a>systemApp</STRONG> (Thumb, 1780 bytes, Stack size 40 bytes, systemmain.o(i.systemApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 6184 + Unknown Stack Size
<LI>Call Chain = systemApp &rArr; Menu_CtCursor &rArr; Bor_CreatData &rArr; Bor_ModPindis &rArr; Bor_docur &rArr; Bor_doline &rArr; verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPessVal
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadJogmethod
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProPara
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Iotest
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_HeSupportConnect
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Function
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtFormat
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtBootScreen
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtMethod
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLcdPwm
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_StReadData
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DesktopInit
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysIfo
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTouchPara
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isUpInfoData
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5ba]"></a>system_init</STRONG> (Thumb, 1920 bytes, Stack size 24 bytes, utility.o(i.system_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = system_init &rArr; GT9xx_Init &rArr; GT_Send_Cfg &rArr; GT9271_WR_Reg &rArr; GT9271_Write &rArr; CT_IIC_Send_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Init
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Init
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Init
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TF_Init
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Init
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Init
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_Init
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9xx_Init
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fsmc_Init
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time6_Init
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time14_Init
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time13_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2cc]"></a>twopoint_dis</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, patfun.o(i.twopoint_dis))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqr
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_ctOverlap
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Create_Data
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verticalline_pos
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Disconnect_DrawData
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_getLinePins
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_point
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_arc
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_line
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_spline
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_feed
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_feed1
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juki_dofeed
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docur
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doline
</UL>

<P><STRONG><a name="[313]"></a>twopoint_dis_zag</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, patfun.o(i.twopoint_dis_zag))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = twopoint_dis_zag &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqr
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verticalline_pos_zag
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sewVerPosZag
</UL>

<P><STRONG><a name="[4ee]"></a>updateViewStatus</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lcddisp.o(i.updateViewStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = updateViewStatus &rArr; showTimeOnMenu &rArr; showTime &rArr; Draw24x24Str &rArr; Draw24X24FFStr &rArr; DrawFASC12 &rArr; dsp_F24x12
</UL>
<BR>[Calls]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showTimeOnMenu
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showDiskStatus
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refreshPointOnMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Iotest
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Function
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtFormat
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtMethod
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
</UL>

<P><STRONG><a name="[568]"></a>update_flash</STRONG> (Thumb, 492 bytes, Stack size 184 bytes, upflash.o(i.update_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = update_flash &rArr; Read_ProgramFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_ExtMemory
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ProgramFile
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtMemory_Status
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProgressbar
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;creatUpInfoData
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
</UL>

<P><STRONG><a name="[577]"></a>update_mcpuprogram</STRONG> (Thumb, 1194 bytes, Stack size 80 bytes, communication.o(i.update_mcpuprogram))
<BR><BR>[Stack]<UL><LI>Max Depth = 928 + Unknown Stack Size
<LI>Call Chain = update_mcpuprogram &rArr; Read_ProgramFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_ExtMemory
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ProgramFile
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtMemory_Status
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawProgressbar
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Cmd
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMboard_ProgramData
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
</UL>

<P><STRONG><a name="[2ce]"></a>verticalline_pos</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, patfun.o(i.verticalline_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = verticalline_pos &rArr; twopoint_dis &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Create_Data
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailSplinePad
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_line
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doline
</UL>

<P><STRONG><a name="[325]"></a>verticalline_pos2</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, patfun.o(i.verticalline_pos2))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = verticalline_pos2 &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_figurepoint_spline
</UL>

<P><STRONG><a name="[2d6]"></a>verticalline_pos_zag</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, patfun.o(i.verticalline_pos_zag))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = verticalline_pos_zag &rArr; twopoint_dis_zag &rArr; sqr &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis_zag
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_spline
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docur
</UL>

<P><STRONG><a name="[557]"></a>viewFeedCode</STRONG> (Thumb, 810 bytes, Stack size 56 bytes, function.o(i.viewFeedCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = viewFeedCode &rArr; DrawFFStrN &rArr; DrawFChar &rArr; dsp_F16x8
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFStrN
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FPY
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;borGetDiscode
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
</UL>

<P><STRONG><a name="[598]"></a>wait_rsd</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, communication.o(i.wait_rsd))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = wait_rsd &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_DS
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_DS
</UL>

<P><STRONG><a name="[14b]"></a>wdt</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, utility.o(i.wdt))
<BR><BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isContain_U16
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_DMASendBuf
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ProgramFile
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_rsd
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mcpuprogram
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_DS
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_D
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_DS
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_D
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMboard_ProgramData
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskPatFile
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_mp3
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFileByName
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDiskFiles
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deleteDiskFile
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copyDiskPatFile
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SysBackupkFile
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_RecordFile
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_PatFile
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_GroupFile
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_SysBackupkFile
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_PatFile
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_DealSaveData
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk_Group
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete_PatFile
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete_GroupFile
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_TO_Juki
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_2deal
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sewP2Pmove
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sewFindPinAndPos
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_getExCodeData
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_ctOverlap
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mitP2Pmove
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mitFindPinAndPos
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_getPatData
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_SaveSplPatData
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Modify_Data
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Create_Data
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_ConvertMultiDraw
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Analyse_SplineData
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Analyse_Data1
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Analyse_Data
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_AnalyseDataCorrect
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_copyImgs
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_To_Mit
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_MoveData
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CtBefDatAny
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatDelData
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_CreatData
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_BaseAddr
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_getScale
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_drawPattern
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_clearConvas
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_getPointXY
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bor_getPointXY
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_ReadSregData
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CreateAllData
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPointData2
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_To_Bor
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailPadOffestPF
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawVLine
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHLine
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFillRect
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_DrawCmd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_AnaInfo
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFeedPos
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreIREG
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBigPoint
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataCheckSum
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupIREG
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_AutoGet_XY
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write1
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Write
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Wind
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Thread
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SkipJog
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Sensorstatus
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_RwHelp
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Read
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Prog
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProFrame
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProDifferent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_P1
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputstatus
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Outputset
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModifyPatChangeMethod
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify3
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify2
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify1
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Modify
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ModiAdd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView2
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_MoView
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Menu
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Iotest
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputstatus
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Inputset
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_HeSupportConnect
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Function
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtWriteCombine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysversion
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysrestore
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtSysbackup
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtScreenset
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadMem
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtReadCombine
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtGroup
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtFormat
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtDirReadMem
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FtCopy
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_FastProg
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirRead
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_DirCallFile
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctzigzag
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Cttacking
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctpitch
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctmultiple
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Ctlineforce
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtTack1
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtPfootSet
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtMethod
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInputMenu
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInput
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtInHelp
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtExCode
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCursor
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCode
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_CtCallFile
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Counter
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert1
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Convert
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_AnalogSet
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemApp
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkTouch
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Avi_Play
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_StReadData
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTouchPara
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;backupAreaColor
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_memcpy
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetData2
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetData1
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoveData2
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoveData1
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitScreen
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillRectColorChang
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawVDottedLine
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeStr1
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeStr
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeMulStr24x24
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnicodeMulStr16x16
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawHDottedLine
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMultiLStr24LimtL
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMultiLStr24
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFMultiLStr16
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFFilename
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawColor_Gray1
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBMP
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FStr
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw24X24FFStr
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLR_Screen
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_flash
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToastShow1
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToastHide
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twopoint_dis
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lines_intersection
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getpoint_sum2
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getpoint_sum
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBufDat8
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBufDat16
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFilesNo1
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFilesNo
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFiles
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMyProgress1
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pat_setDrawXY
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isUpInfoData
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;creatUpInfoData
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circle_center
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recoverAreaColor
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anyWriteScreeData
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Search_Fram
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Avih_Parser
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Strl_Parser
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadUnit
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Search_Movi
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Search_Auds
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_AviFile
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_BookData
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Find_BookFile
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeekDrawCmd
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juki_TO_Bor
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_FileAnaly
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Change_E
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disktest
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskGropFileByName
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskEmbFile
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiskGroupFile
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiskPatFile
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFileTypeByName
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Explore_Disk_G
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;importParas
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exportParas
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFileProgress
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_I2C0_end
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cycBuff
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setCalibrationMatrix
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash2bin
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3tobin
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;binfiletoflash
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp3toflash
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Playmp3
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS1003B_Mp3Off
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Wait_Busy
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_ReadWriteByte
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_One_Sector
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_One_Word
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_One_Block
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_One_Sector
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_One_Block
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_One_Sector
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_Entire_Chip
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Toggle_Ready
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_ISendBuf
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_SendByte
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_DMASendBuf
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_ISendBuf
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SendByte
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_UDISK_Write
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_UDISK_Read
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strComp
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCodeByNo
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_SetProgNo
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramNumber
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogicHelp
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_ProgramLogic
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mit_setRepConPins
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Disconnect_DrawData_N
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Npoint_Dis
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Disconnect_DrawData
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailModifyStitchPara
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_UpdataSregData
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Do_Offset
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_SaveSregData
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CailSplinePad
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_point
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_polygon
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_arc
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_line
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_spline
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_figurepoint_spline
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_CialMutiSplinePoint
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_srtbt
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_feed
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_repeat
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_endbt
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_feed1
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BorCmdAnaly
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSewPoint_sum
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Juki_dofeed
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ctNewPat
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doTack
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_UpSplCtr
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isInflPoint
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dealChPoint
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatct2
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPindis
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docur
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_doline
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_dofeed
</UL>

<P><STRONG><a name="[119]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[5a8]"></a>__aeabi_dneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic))
<BR><BR>[Called By]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[643]"></a>_dneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[644]"></a>__aeabi_fneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[645]"></a>_fneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[646]"></a>_dabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[647]"></a>_fabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[436]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass
</UL>

<P><STRONG><a name="[5cb]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[287]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatus
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sew_GetSewLen
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Book_Zoom
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_arc
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_spline
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docur
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[5ce]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[5d3]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[2d2]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_copyImgs
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConSpin
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_arc
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_spline
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_UpSplCtr
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPindis
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docur
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[5d1]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[2ee]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_arc
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[5d2]"></a>_dcmpeq</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[2b3]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_copyImgs
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConSpin
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sew_GetSewLen
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqr
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_arc
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_spline
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_UpSplCtr
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPindis
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docur
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[5d4]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[288]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatus
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verticalline_pos2
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Book_Zoom
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_arc
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
</UL>

<P><STRONG><a name="[5d5]"></a>_dfixu</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[2b1]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disStatus
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_copyImgs
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConSpin
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sew_GetSewLen
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnaPattern
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_arc
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_spline
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_UpSplCtr
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPindis
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docur
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[648]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[2d1]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_copyImgs
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConSpin
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_arc
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_spline
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docur
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[649]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[2f1]"></a>__aeabi_ul2d</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfltll_clz.o(x$fpl$dfltull))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_ul2d
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verticalline_pos2
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqr
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
</UL>

<P><STRONG><a name="[64a]"></a>_ll_uto_d</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, dfltll_clz.o(x$fpl$dfltull), UNUSED)

<P><STRONG><a name="[2ed]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_arc
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
</UL>

<P><STRONG><a name="[5d6]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[5d9]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[2d3]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_copyImgs
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_Convert_Data
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ConSpin
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_arc
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_spline
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_UpSplCtr
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_ModPindis
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docur
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[5d7]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[5cd]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_ufrom_d
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[5d0]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[2e4]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_Updatctl
</UL>

<P><STRONG><a name="[5d8]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[2d5]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_spline
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docur
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[5da]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[5af]"></a>_dsqrt</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, dsqrt_umaal.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[2d4]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mit_do_spline
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docur
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[5dc]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[286]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Book_Zoom
</UL>

<P><STRONG><a name="[5dd]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[5de]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[131]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[64b]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[64c]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[5cc]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[2f2]"></a>__aeabi_d2ulz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfixull.o(x$fpl$llufromd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bor_docir
</UL>

<P><STRONG><a name="[5df]"></a>_ll_ufrom_d</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dfixull.o(x$fpl$llufromd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[267]"></a>getFileNo</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, disk_oper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = getFileNo
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDiskFiles
</UL>

<P><STRONG><a name="[370]"></a>USBH_HandleEnum</STRONG> (Thumb, 404 bytes, Stack size 96 bytes, usbh_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = USBH_HandleEnum &rArr; USBH_Get_CfgDesc &rArr; USBH_ParseCfgDesc
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetCfg
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_SetAddress
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Modify_Channel
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_StringDesc
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_DevDesc
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Get_CfgDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Process
</UL>

<P><STRONG><a name="[e]"></a>USBH_MSC_InterfaceInit</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, usbh_msc_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = USBH_MSC_InterfaceInit &rArr; USBH_Open_Channel &rArr; USB_OTG_HC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Open_Channel
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Alloc_Channel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_msc_core.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>USBH_MSC_InterfaceDeInit</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, usbh_msc_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USBH_MSC_InterfaceDeInit &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Halt
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free_Channel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_msc_core.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>USBH_MSC_ClassRequest</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbh_msc_core.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbh_msc_core.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>USBH_MSC_Handle</STRONG> (Thumb, 296 bytes, Stack size 40 bytes, usbh_msc_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = USBH_MSC_Handle &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCD_IsDeviceConnected
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_TestUnitReady
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_RequestSense
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ReadCapacity10
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ModeSense6
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_Init
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_HandleBOTXfer
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_CtlReq
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ClrFeature
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_MSC_ErrorHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbh_msc_core.o(.data)
</UL>
<P><STRONG><a name="[38d]"></a>move_window</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[38e]"></a>sync</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = sync &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[392]"></a>remove_chain</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = remove_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
</UL>

<P><STRONG><a name="[393]"></a>create_chain</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[394]"></a>dir_sdi</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = dir_sdi &rArr; get_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getcwd
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[396]"></a>dir_next</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getcwd
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[399]"></a>dir_find</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[39c]"></a>dir_read</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getcwd
</UL>

<P><STRONG><a name="[39d]"></a>dir_register</STRONG> (Thumb, 426 bytes, Stack size 56 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[39e]"></a>dir_remove</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = dir_remove &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
</UL>

<P><STRONG><a name="[39f]"></a>create_name</STRONG> (Thumb, 596 bytes, Stack size 48 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = create_name
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_chr
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[3a2]"></a>get_fileinfo</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_fileinfo
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getcwd
</UL>

<P><STRONG><a name="[3a3]"></a>follow_path</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; SDIO_Send_Data_Cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chdir
</UL>

<P><STRONG><a name="[3a4]"></a>check_fs</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = check_fs &rArr; disk_read &rArr; USBH_UDISK_Read &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[3a5]"></a>chk_mounted</STRONG> (Thumb, 550 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = chk_mounted &rArr; check_fs &rArr; disk_read &rArr; USBH_UDISK_Read &rArr; USBH_MSC_HandleBOTXfer &rArr; USBH_BulkReceiveData &rArr; HCD_SubmitRequest &rArr; USB_OTG_HC_StartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getcwd
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chdir
</UL>

<P><STRONG><a name="[398]"></a>mem_cpy</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[38f]"></a>mem_set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[3a1]"></a>chk_chr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[39b]"></a>sum_sfn</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[3a7]"></a>validate</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = validate
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[8a]"></a>my_error_exit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mjpeg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longjmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mjpeg.o(.text)
</UL>
<P><STRONG><a name="[8b]"></a>init_source</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mjpeg.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mjpeg.o(.text)
</UL>
<P><STRONG><a name="[8c]"></a>fill_input_buffer</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, mjpeg.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mjpeg.o(.text)
</UL>
<P><STRONG><a name="[8d]"></a>skip_input_data</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, mjpeg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = skip_input_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mjpeg.o(.text)
</UL>
<P><STRONG><a name="[8f]"></a>term_source</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mjpeg.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mjpeg.o(.text)
</UL>
<P><STRONG><a name="[3c4]"></a>USB_OTG_CoreReset</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, usb_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USB_OTG_CoreReset &rArr; USB_OTG_BSP_uDelay &rArr; BSP_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInit
</UL>

<P><STRONG><a name="[3db]"></a>USB_OTG_USBH_handle_IncompletePeriodicXfer_ISR</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_OTG_USBH_handle_IncompletePeriodicXfer_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[3da]"></a>USB_OTG_USBH_handle_Disconnect_ISR</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_USBH_handle_Disconnect_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[3ce]"></a>USB_OTG_USBH_handle_port_ISR</STRONG> (Thumb, 310 bytes, Stack size 32 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_USBH_handle_port_ISR
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_InitFSLSPClkSel
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[3cf]"></a>USB_OTG_USBH_handle_hc_n_Out_ISR</STRONG> (Thumb, 960 bytes, Stack size 32 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USB_OTG_USBH_handle_hc_n_Out_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_DoPing
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Halt
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_ISR
</UL>

<P><STRONG><a name="[3d1]"></a>USB_OTG_USBH_handle_hc_n_In_ISR</STRONG> (Thumb, 1052 bytes, Stack size 40 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Halt
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_ISR
</UL>

<P><STRONG><a name="[3d2]"></a>USB_OTG_USBH_handle_hc_ISR</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = USB_OTG_USBH_handle_hc_ISR &rArr; USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_In_ISR
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_Out_ISR
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadHostAllChannels_intr
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[3d4]"></a>USB_OTG_USBH_handle_ptxfempty_ISR</STRONG> (Thumb, 302 bytes, Stack size 32 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USB_OTG_USBH_handle_ptxfempty_ISR &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[3d5]"></a>USB_OTG_USBH_handle_nptxfempty_ISR</STRONG> (Thumb, 302 bytes, Stack size 32 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USB_OTG_USBH_handle_nptxfempty_ISR &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[3d6]"></a>USB_OTG_USBH_handle_rx_qlvl_ISR</STRONG> (Thumb, 356 bytes, Stack size 32 bytes, usb_hcd_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USB_OTG_USBH_handle_rx_qlvl_ISR &rArr; USB_OTG_ReadPacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[3e5]"></a>USBH_ParseInterfaceDesc</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usbh_stdreq.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_ParseCfgDesc
</UL>

<P><STRONG><a name="[3f0]"></a>BSP_Delay</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, usb_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BSP_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_uDelay
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
</UL>

<P><STRONG><a name="[3f8]"></a>default_decompress_parms</STRONG> (Thumb, 344 bytes, Stack size 32 bytes, jdapimin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = default_decompress_parms
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_consume_input
</UL>

<P><STRONG><a name="[3f9]"></a>output_pass_setup</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, jdapistd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = output_pass_setup
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_start_decompress
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_start_output
</UL>

<P><STRONG><a name="[408]"></a>get_sof</STRONG> (Thumb, 602 bytes, Stack size 32 bytes, jdmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_sof
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
</UL>

<P><STRONG><a name="[3fc]"></a>get_sos</STRONG> (Thumb, 582 bytes, Stack size 40 bytes, jdmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = get_sos &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
</UL>

<P><STRONG><a name="[409]"></a>get_dac</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, jdmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_dac
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
</UL>

<P><STRONG><a name="[3fe]"></a>get_dht</STRONG> (Thumb, 534 bytes, Stack size 312 bytes, jdmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = get_dht &rArr; jpeg_alloc_huff_table
</UL>
<BR>[Calls]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_alloc_huff_table
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
</UL>

<P><STRONG><a name="[400]"></a>get_dqt</STRONG> (Thumb, 532 bytes, Stack size 48 bytes, jdmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = get_dqt &rArr; jpeg_alloc_quant_table
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_alloc_quant_table
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
</UL>

<P><STRONG><a name="[402]"></a>get_lse</STRONG> (Thumb, 824 bytes, Stack size 24 bytes, jdmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_lse &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
</UL>

<P><STRONG><a name="[403]"></a>examine_app0</STRONG> (Thumb, 334 bytes, Stack size 16 bytes, jdmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = examine_app0
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_marker
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_interesting_appn
</UL>

<P><STRONG><a name="[404]"></a>examine_app14</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, jdmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = examine_app14
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_marker
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_interesting_appn
</UL>

<P><STRONG><a name="[94]"></a>get_interesting_appn</STRONG> (Thumb, 228 bytes, Stack size 56 bytes, jdmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = get_interesting_appn &rArr; examine_app14
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;examine_app14
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;examine_app0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmarker.o(.text)
</UL>
<P><STRONG><a name="[95]"></a>save_marker</STRONG> (Thumb, 416 bytes, Stack size 48 bytes, jdmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = save_marker &rArr; examine_app14
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;examine_app14
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;examine_app0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmarker.o(.text)
</UL>
<P><STRONG><a name="[93]"></a>skip_variable</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, jdmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = skip_variable
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmarker.o(.text)
</UL>
<P><STRONG><a name="[405]"></a>next_marker</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, jdmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = next_marker
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_resync_to_restart
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_restart_marker
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
</UL>

<P><STRONG><a name="[91]"></a>read_markers</STRONG> (Thumb, 408 bytes, Stack size 16 bytes, jdmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = read_markers &rArr; get_dht &rArr; jpeg_alloc_huff_table
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;first_marker
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dri
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_soi
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_marker
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;skip_variable
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_lse
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dqt
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dht
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dac
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sos
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sof
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmarker.o(.text)
</UL>
<P><STRONG><a name="[92]"></a>read_restart_marker</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, jdmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = read_restart_marker &rArr; next_marker
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_marker
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmarker.o(.text)
</UL>
<P><STRONG><a name="[407]"></a>get_soi</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, jdmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_soi
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
</UL>

<P><STRONG><a name="[40a]"></a>get_dri</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, jdmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_dri
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
</UL>

<P><STRONG><a name="[406]"></a>first_marker</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, jdmarker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = first_marker
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_markers
</UL>

<P><STRONG><a name="[90]"></a>reset_marker_reader</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, jdmarker.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_marker_reader
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmarker.o(.text)
</UL>
<P><STRONG><a name="[96]"></a>error_exit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, jerror.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = error_exit &rArr; jpeg_destroy
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_destroy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jerror.o(.text)
</UL>
<P><STRONG><a name="[98]"></a>output_message</STRONG> (Thumb, 24 bytes, Stack size 208 bytes, jerror.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = output_message &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jerror.o(.text)
</UL>
<P><STRONG><a name="[97]"></a>emit_message</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, jerror.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = emit_message
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jerror.o(.text)
</UL>
<P><STRONG><a name="[99]"></a>format_message</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, jerror.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = format_message &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jerror.o(.text)
</UL>
<P><STRONG><a name="[9a]"></a>reset_error_mgr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, jerror.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> jerror.o(.text)
</UL>
<P><STRONG><a name="[40f]"></a>initial_setup</STRONG> (Thumb, 656 bytes, Stack size 32 bytes, jdinput.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = initial_setup
</UL>
<BR>[Calls]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jdiv_round_up
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consume_markers
</UL>

<P><STRONG><a name="[410]"></a>per_scan_setup</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, jdinput.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = per_scan_setup
</UL>
<BR>[Calls]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jdiv_round_up
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_input_pass
</UL>

<P><STRONG><a name="[9d]"></a>start_input_pass</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, jdinput.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = start_input_pass &rArr; per_scan_setup
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;per_scan_setup
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consume_markers
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdinput.o(.text)
</UL>
<P><STRONG><a name="[9b]"></a>consume_markers</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, jdinput.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = consume_markers &rArr; start_input_pass &rArr; per_scan_setup
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_input_pass
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initial_setup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdinput.o(.text)
</UL>
<P><STRONG><a name="[9e]"></a>finish_input_pass</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, jdinput.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = finish_input_pass
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdinput.o(.text)
</UL>
<P><STRONG><a name="[9c]"></a>reset_input_controller</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, jdinput.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = reset_input_controller
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdinput.o(.text)
</UL>
<P><STRONG><a name="[412]"></a>use_merged_upsample</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, jdmaster.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_calc_output_dimensions
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;master_selection
</UL>

<P><STRONG><a name="[413]"></a>master_selection</STRONG> (Thumb, 512 bytes, Stack size 16 bytes, jdmaster.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = master_selection &rArr; jinit_1pass_quantizer &rArr; create_colormap &rArr; select_ncolors
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_upsampler
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_merged_upsampler
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_inverse_dct
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_huff_decoder
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_d_post_controller
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_d_main_controller
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_d_coef_controller
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_color_deconverter
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_arith_decoder
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_2pass_quantizer
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_1pass_quantizer
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_calc_output_dimensions
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;use_merged_upsample
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_master_decompress
</UL>

<P><STRONG><a name="[9f]"></a>prepare_for_output_pass</STRONG> (Thumb, 278 bytes, Stack size 16 bytes, jdmaster.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prepare_for_output_pass
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmaster.o(.text)
</UL>
<P><STRONG><a name="[a0]"></a>finish_output_pass</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, jdmaster.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = finish_output_pass
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmaster.o(.text)
</UL>
<P><STRONG><a name="[a1]"></a>alloc_small</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = alloc_small &rArr; jpeg_get_small &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_get_small
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;out_of_memory
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;request_virt_barray
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;request_virt_sarray
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_barray
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_sarray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[a2]"></a>alloc_large</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = alloc_large &rArr; jpeg_get_large &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_get_large
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;out_of_memory
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_barray
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_sarray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[a3]"></a>alloc_sarray</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = alloc_sarray &rArr; alloc_large &rArr; jpeg_get_large &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_large
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_small
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realize_virt_arrays
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[a4]"></a>alloc_barray</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = alloc_barray &rArr; alloc_large &rArr; jpeg_get_large &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_large
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_small
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realize_virt_arrays
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[a5]"></a>request_virt_sarray</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = request_virt_sarray &rArr; alloc_small &rArr; jpeg_get_small &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_small
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[a6]"></a>request_virt_barray</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = request_virt_barray &rArr; alloc_small &rArr; jpeg_get_small &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_small
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[a7]"></a>realize_virt_arrays</STRONG> (Thumb, 282 bytes, Stack size 32 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = realize_virt_arrays &rArr; alloc_barray &rArr; alloc_large &rArr; jpeg_get_large &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_open_backing_store
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_mem_available
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_barray
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_sarray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[425]"></a>do_sarray_io</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = do_sarray_io
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;access_virt_sarray
</UL>

<P><STRONG><a name="[426]"></a>do_barray_io</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = do_barray_io
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;access_virt_barray
</UL>

<P><STRONG><a name="[a8]"></a>access_virt_sarray</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = access_virt_sarray &rArr; do_sarray_io
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_sarray_io
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[a9]"></a>access_virt_barray</STRONG> (Thumb, 260 bytes, Stack size 32 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = access_virt_barray &rArr; do_barray_io
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_barray_io
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[aa]"></a>free_pool</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = free_pool &rArr; jpeg_free_small &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_free_small
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_free_large
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_destruct
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[ab]"></a>self_destruct</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, jmemmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = self_destruct &rArr; free_pool &rArr; jpeg_free_small &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_mem_term
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_free_small
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_pool
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jmemmgr.o(.text)
</UL>
<P><STRONG><a name="[420]"></a>out_of_memory</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, jmemmgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_large
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_small
</UL>

<P><STRONG><a name="[42f]"></a>get_byte</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, jdarith.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arith_decode
</UL>

<P><STRONG><a name="[42e]"></a>arith_decode</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, jdarith.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = arith_decode &rArr; get_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_AC_refine
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_DC_refine
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_AC_first
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_DC_first
</UL>

<P><STRONG><a name="[430]"></a>process_restart</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, jdarith.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = process_restart
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_AC_refine
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_DC_refine
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_AC_first
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_DC_first
</UL>

<P><STRONG><a name="[ae]"></a>decode_mcu_DC_first</STRONG> (Thumb, 324 bytes, Stack size 56 bytes, jdarith.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = decode_mcu_DC_first &rArr; arith_decode &rArr; get_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arith_decode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdarith.o(.text)
</UL>
<P><STRONG><a name="[ad]"></a>decode_mcu_AC_first</STRONG> (Thumb, 302 bytes, Stack size 48 bytes, jdarith.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = decode_mcu_AC_first &rArr; arith_decode &rArr; get_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arith_decode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdarith.o(.text)
</UL>
<P><STRONG><a name="[af]"></a>decode_mcu_DC_refine</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, jdarith.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = decode_mcu_DC_refine &rArr; arith_decode &rArr; get_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arith_decode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdarith.o(.text)
</UL>
<P><STRONG><a name="[ac]"></a>decode_mcu_AC_refine</STRONG> (Thumb, 264 bytes, Stack size 48 bytes, jdarith.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = decode_mcu_AC_refine &rArr; arith_decode &rArr; get_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arith_decode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdarith.o(.text)
</UL>
<P><STRONG><a name="[b0]"></a>decode_mcu</STRONG> (Thumb, 532 bytes, Stack size 64 bytes, jdarith.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = decode_mcu &rArr; arith_decode &rArr; get_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arith_decode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdarith.o(.text)
</UL>
<P><STRONG><a name="[b1]"></a>start_pass</STRONG> (Thumb, 584 bytes, Stack size 40 bytes, jdarith.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = start_pass
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdarith.o(.text)
</UL>
<P><STRONG><a name="[b2]"></a>finish_pass</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, jdarith.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> jdarith.o(.text)
</UL>
<P><STRONG><a name="[431]"></a>start_iMCU_row</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, jdcoefct.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consume_data
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompress_onepass
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_input_pass
</UL>

<P><STRONG><a name="[b5]"></a>start_input_pass</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jdcoefct.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_iMCU_row
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcoefct.o(.text)
</UL>
<P><STRONG><a name="[b4]"></a>decompress_data</STRONG> (Thumb, 262 bytes, Stack size 72 bytes, jdcoefct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = decompress_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcoefct.o(.text)
</UL>
<P><STRONG><a name="[b3]"></a>decompress_smooth_data</STRONG> (Thumb, 1056 bytes, Stack size 280 bytes, jdcoefct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = decompress_smooth_data
</UL>
<BR>[Calls]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jcopy_block_row
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcoefct.o(.text)
</UL>
<P><STRONG><a name="[b6]"></a>start_output_pass</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, jdcoefct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = start_output_pass &rArr; smoothing_ok
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smoothing_ok
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcoefct.o(.text)
</UL>
<P><STRONG><a name="[b9]"></a>decompress_onepass</STRONG> (Thumb, 356 bytes, Stack size 80 bytes, jdcoefct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = decompress_onepass
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_iMCU_row
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcoefct.o(.text)
</UL>
<P><STRONG><a name="[b8]"></a>dummy_consume_data</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, jdcoefct.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> jdcoefct.o(.text)
</UL>
<P><STRONG><a name="[b7]"></a>consume_data</STRONG> (Thumb, 256 bytes, Stack size 56 bytes, jdcoefct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = consume_data
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_iMCU_row
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcoefct.o(.text)
</UL>
<P><STRONG><a name="[432]"></a>smoothing_ok</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, jdcoefct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = smoothing_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_output_pass
</UL>

<P><STRONG><a name="[435]"></a>build_ycc_rgb_table</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, jdcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = build_ycc_rgb_table
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_color_deconverter
</UL>

<P><STRONG><a name="[c1]"></a>ycc_rgb_convert</STRONG> (Thumb, 156 bytes, Stack size 60 bytes, jdcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ycc_rgb_convert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcolor.o(.text)
</UL>
<P><STRONG><a name="[bf]"></a>rgb_gray_convert</STRONG> (Thumb, 106 bytes, Stack size 36 bytes, jdcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = rgb_gray_convert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcolor.o(.text)
</UL>
<P><STRONG><a name="[bc]"></a>rgb1_rgb_convert</STRONG> (Thumb, 82 bytes, Stack size 36 bytes, jdcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = rgb1_rgb_convert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcolor.o(.text)
</UL>
<P><STRONG><a name="[c0]"></a>rgb1_gray_convert</STRONG> (Thumb, 118 bytes, Stack size 36 bytes, jdcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = rgb1_gray_convert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcolor.o(.text)
</UL>
<P><STRONG><a name="[bb]"></a>rgb_convert</STRONG> (Thumb, 82 bytes, Stack size 28 bytes, jdcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = rgb_convert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcolor.o(.text)
</UL>
<P><STRONG><a name="[bd]"></a>null_convert</STRONG> (Thumb, 72 bytes, Stack size 28 bytes, jdcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = null_convert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcolor.o(.text)
</UL>
<P><STRONG><a name="[be]"></a>grayscale_convert</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, jdcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = grayscale_convert &rArr; jcopy_sample_rows
</UL>
<BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jcopy_sample_rows
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcolor.o(.text)
</UL>
<P><STRONG><a name="[c2]"></a>gray_rgb_convert</STRONG> (Thumb, 46 bytes, Stack size 20 bytes, jdcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gray_rgb_convert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcolor.o(.text)
</UL>
<P><STRONG><a name="[c3]"></a>ycck_cmyk_convert</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, jdcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ycck_cmyk_convert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdcolor.o(.text)
</UL>
<P><STRONG><a name="[ba]"></a>start_pass_dcolor</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, jdcolor.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> jdcolor.o(.text)
</UL>
<P><STRONG><a name="[434]"></a>build_bg_ycc_rgb_table</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, jdcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = build_bg_ycc_rgb_table
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_color_deconverter
</UL>

<P><STRONG><a name="[e6]"></a>start_pass</STRONG> (Thumb, 766 bytes, Stack size 64 bytes, jddctmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = start_pass &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jddctmgr.o(.text)
</UL>
<P><STRONG><a name="[437]"></a>jpeg_make_d_derived_tbl</STRONG> (Thumb, 468 bytes, Stack size 1344 bytes, jdhuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1348<LI>Call Chain = jpeg_make_d_derived_tbl &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass_huff_decoder
</UL>

<P><STRONG><a name="[439]"></a>jpeg_fill_bit_buffer</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, jdhuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = jpeg_fill_bit_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_sub
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_AC_refine
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_DC_refine
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_AC_first
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_DC_first
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_huff_decode
</UL>

<P><STRONG><a name="[438]"></a>jpeg_huff_decode</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, jdhuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = jpeg_huff_decode &rArr; jpeg_fill_bit_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_fill_bit_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_sub
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_AC_refine
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_AC_first
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_DC_first
</UL>

<P><STRONG><a name="[43a]"></a>process_restart</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, jdhuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = process_restart &rArr; finish_pass_huff
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;finish_pass_huff
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_sub
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_AC_refine
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_DC_refine
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_AC_first
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_mcu_DC_first
</UL>

<P><STRONG><a name="[e9]"></a>decode_mcu_DC_first</STRONG> (Thumb, 338 bytes, Stack size 96 bytes, jdhuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = decode_mcu_DC_first &rArr; jpeg_huff_decode &rArr; jpeg_fill_bit_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_huff_decode
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_fill_bit_buffer
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdhuff.o(.text)
</UL>
<P><STRONG><a name="[e8]"></a>decode_mcu_AC_first</STRONG> (Thumb, 372 bytes, Stack size 72 bytes, jdhuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = decode_mcu_AC_first &rArr; jpeg_huff_decode &rArr; jpeg_fill_bit_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_huff_decode
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_fill_bit_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdhuff.o(.text)
</UL>
<P><STRONG><a name="[ea]"></a>decode_mcu_DC_refine</STRONG> (Thumb, 140 bytes, Stack size 48 bytes, jdhuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = decode_mcu_DC_refine &rArr; jpeg_fill_bit_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_fill_bit_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdhuff.o(.text)
</UL>
<P><STRONG><a name="[e7]"></a>decode_mcu_AC_refine</STRONG> (Thumb, 666 bytes, Stack size 352 bytes, jdhuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = decode_mcu_AC_refine &rArr; jpeg_huff_decode &rArr; jpeg_fill_bit_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_huff_decode
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_fill_bit_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdhuff.o(.text)
</UL>
<P><STRONG><a name="[eb]"></a>decode_mcu_sub</STRONG> (Thumb, 728 bytes, Stack size 112 bytes, jdhuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = decode_mcu_sub &rArr; jpeg_huff_decode &rArr; jpeg_fill_bit_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_huff_decode
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_fill_bit_buffer
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdhuff.o(.text)
</UL>
<P><STRONG><a name="[ec]"></a>decode_mcu</STRONG> (Thumb, 710 bytes, Stack size 104 bytes, jdhuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = decode_mcu &rArr; jpeg_huff_decode &rArr; jpeg_fill_bit_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_huff_decode
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_fill_bit_buffer
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdhuff.o(.text)
</UL>
<P><STRONG><a name="[ed]"></a>start_pass_huff_decoder</STRONG> (Thumb, 970 bytes, Stack size 40 bytes, jdhuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388<LI>Call Chain = start_pass_huff_decoder &rArr; jpeg_make_d_derived_tbl &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jpeg_make_d_derived_tbl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdhuff.o(.text)
</UL>
<P><STRONG><a name="[ee]"></a>finish_pass_huff</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, jdhuff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = finish_pass_huff
</UL>
<BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_restart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdhuff.o(.text)
</UL>
<P><STRONG><a name="[f1]"></a>process_data_crank_post</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, jdmainct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = process_data_crank_post
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmainct.o(.text)
</UL>
<P><STRONG><a name="[f0]"></a>process_data_simple_main</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, jdmainct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = process_data_simple_main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmainct.o(.text)
</UL>
<P><STRONG><a name="[ef]"></a>process_data_context_main</STRONG> (Thumb, 462 bytes, Stack size 64 bytes, jdmainct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = process_data_context_main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmainct.o(.text)
</UL>
<P><STRONG><a name="[f2]"></a>start_pass_main</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, jdmainct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = start_pass_main &rArr; make_funny_pointers
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_funny_pointers
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmainct.o(.text)
</UL>
<P><STRONG><a name="[43c]"></a>alloc_funny_pointers</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, jdmainct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = alloc_funny_pointers
</UL>
<BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_d_main_controller
</UL>

<P><STRONG><a name="[43b]"></a>make_funny_pointers</STRONG> (Thumb, 160 bytes, Stack size 36 bytes, jdmainct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = make_funny_pointers
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass_main
</UL>

<P><STRONG><a name="[f3]"></a>start_pass_merged_upsample</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, jdmerge.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> jdmerge.o(.text)
</UL>
<P><STRONG><a name="[f6]"></a>merged_2v_upsample</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, jdmerge.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = merged_2v_upsample &rArr; jcopy_sample_rows
</UL>
<BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jcopy_sample_rows
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmerge.o(.text)
</UL>
<P><STRONG><a name="[f4]"></a>merged_1v_upsample</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, jdmerge.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = merged_1v_upsample
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmerge.o(.text)
</UL>
<P><STRONG><a name="[f5]"></a>h2v1_merged_upsample</STRONG> (Thumb, 216 bytes, Stack size 44 bytes, jdmerge.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = h2v1_merged_upsample
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmerge.o(.text)
</UL>
<P><STRONG><a name="[f7]"></a>h2v2_merged_upsample</STRONG> (Thumb, 362 bytes, Stack size 52 bytes, jdmerge.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = h2v2_merged_upsample
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdmerge.o(.text)
</UL>
<P><STRONG><a name="[43d]"></a>build_ycc_rgb_table</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, jdmerge.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = build_ycc_rgb_table
</UL>
<BR>[Called By]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_merged_upsampler
</UL>

<P><STRONG><a name="[fa]"></a>post_process_2pass</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, jdpostct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = post_process_2pass
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdpostct.o(.text)
</UL>
<P><STRONG><a name="[f9]"></a>post_process_prepass</STRONG> (Thumb, 136 bytes, Stack size 48 bytes, jdpostct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = post_process_prepass
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdpostct.o(.text)
</UL>
<P><STRONG><a name="[f8]"></a>post_process_1pass</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, jdpostct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = post_process_1pass
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdpostct.o(.text)
</UL>
<P><STRONG><a name="[fb]"></a>start_pass_dpost</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, jdpostct.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = start_pass_dpost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdpostct.o(.text)
</UL>
<P><STRONG><a name="[fc]"></a>start_pass_upsample</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, jdsample.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> jdsample.o(.text)
</UL>
<P><STRONG><a name="[fd]"></a>sep_upsample</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, jdsample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sep_upsample
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdsample.o(.text)
</UL>
<P><STRONG><a name="[fe]"></a>fullsize_upsample</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, jdsample.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> jdsample.o(.text)
</UL>
<P><STRONG><a name="[ff]"></a>noop_upsample</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, jdsample.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> jdsample.o(.text)
</UL>
<P><STRONG><a name="[102]"></a>int_upsample</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, jdsample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = int_upsample &rArr; jcopy_sample_rows
</UL>
<BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jcopy_sample_rows
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdsample.o(.text)
</UL>
<P><STRONG><a name="[100]"></a>h2v1_upsample</STRONG> (Thumb, 48 bytes, Stack size 20 bytes, jdsample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = h2v1_upsample
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdsample.o(.text)
</UL>
<P><STRONG><a name="[101]"></a>h2v2_upsample</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, jdsample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = h2v2_upsample &rArr; jcopy_sample_rows
</UL>
<BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jcopy_sample_rows
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jdsample.o(.text)
</UL>
<P><STRONG><a name="[440]"></a>create_colorindex</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, jquant1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = create_colorindex
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;largest_input_value
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass_1_quant
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_1pass_quantizer
</UL>

<P><STRONG><a name="[103]"></a>color_quantize</STRONG> (Thumb, 84 bytes, Stack size 36 bytes, jquant1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = color_quantize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant1.o(.text)
</UL>
<P><STRONG><a name="[104]"></a>color_quantize3</STRONG> (Thumb, 86 bytes, Stack size 36 bytes, jquant1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = color_quantize3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant1.o(.text)
</UL>
<P><STRONG><a name="[105]"></a>quantize_ord_dither</STRONG> (Thumb, 140 bytes, Stack size 56 bytes, jquant1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = quantize_ord_dither
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant1.o(.text)
</UL>
<P><STRONG><a name="[106]"></a>quantize3_ord_dither</STRONG> (Thumb, 156 bytes, Stack size 64 bytes, jquant1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = quantize3_ord_dither
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant1.o(.text)
</UL>
<P><STRONG><a name="[107]"></a>quantize_fs_dither</STRONG> (Thumb, 290 bytes, Stack size 80 bytes, jquant1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = quantize_fs_dither
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant1.o(.text)
</UL>
<P><STRONG><a name="[443]"></a>alloc_fs_workspace</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, jquant1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = alloc_fs_workspace
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass_1_quant
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_1pass_quantizer
</UL>

<P><STRONG><a name="[108]"></a>start_pass_1_quant</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, jquant1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = start_pass_1_quant &rArr; create_odither_tables
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_odither_tables
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_fs_workspace
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_colorindex
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant1.o(.text)
</UL>
<P><STRONG><a name="[109]"></a>finish_pass_1_quant</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, jquant1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> jquant1.o(.text)
</UL>
<P><STRONG><a name="[10a]"></a>new_color_map_1_quant</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, jquant1.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> jquant1.o(.text)
</UL>
<P><STRONG><a name="[441]"></a>largest_input_value</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, jquant1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_colorindex
</UL>

<P><STRONG><a name="[444]"></a>create_colormap</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, jquant1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = create_colormap &rArr; select_ncolors
</UL>
<BR>[Calls]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_ncolors
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_1pass_quantizer
</UL>

<P><STRONG><a name="[442]"></a>create_odither_tables</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, jquant1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = create_odither_tables
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass_1_quant
</UL>

<P><STRONG><a name="[445]"></a>select_ncolors</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, jquant1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = select_ncolors
</UL>
<BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_colormap
</UL>

<P><STRONG><a name="[10b]"></a>prescan_quantize</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, jquant2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = prescan_quantize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant2.o(.text)
</UL>
<P><STRONG><a name="[447]"></a>update_box</STRONG> (Thumb, 572 bytes, Stack size 40 bytes, jquant2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = update_box
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_colors
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;median_cut
</UL>

<P><STRONG><a name="[446]"></a>median_cut</STRONG> (Thumb, 264 bytes, Stack size 56 bytes, jquant2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = median_cut &rArr; update_box
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_box
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_colors
</UL>

<P><STRONG><a name="[449]"></a>find_nearby_colors</STRONG> (Thumb, 296 bytes, Stack size 1088 bytes, jquant2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088<LI>Call Chain = find_nearby_colors
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_inverse_cmap
</UL>

<P><STRONG><a name="[448]"></a>fill_inverse_cmap</STRONG> (Thumb, 146 bytes, Stack size 432 bytes, jquant2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1520<LI>Call Chain = fill_inverse_cmap &rArr; find_nearby_colors
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_best_colors
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_nearby_colors
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pass2_fs_dither
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pass2_no_dither
</UL>

<P><STRONG><a name="[10d]"></a>pass2_no_dither</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, jquant2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1576<LI>Call Chain = pass2_no_dither &rArr; fill_inverse_cmap &rArr; find_nearby_colors
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_inverse_cmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant2.o(.text)
</UL>
<P><STRONG><a name="[10f]"></a>pass2_fs_dither</STRONG> (Thumb, 464 bytes, Stack size 128 bytes, jquant2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1648<LI>Call Chain = pass2_fs_dither &rArr; fill_inverse_cmap &rArr; find_nearby_colors
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_inverse_cmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant2.o(.text)
</UL>
<P><STRONG><a name="[44c]"></a>init_error_limit</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, jquant2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = init_error_limit
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_pass_2_quant
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jinit_2pass_quantizer
</UL>

<P><STRONG><a name="[10c]"></a>finish_pass1</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, jquant2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = finish_pass1 &rArr; select_colors &rArr; median_cut &rArr; update_box
</UL>
<BR>[Calls]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_colors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant2.o(.text)
</UL>
<P><STRONG><a name="[10e]"></a>finish_pass2</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, jquant2.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> jquant2.o(.text)
</UL>
<P><STRONG><a name="[110]"></a>start_pass_2_quant</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, jquant2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = start_pass_2_quant &rArr; init_error_limit
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_error_limit
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jquant2.o(.text)
</UL>
<P><STRONG><a name="[111]"></a>new_color_map_2_quant</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, jquant2.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> jquant2.o(.text)
</UL>
<P><STRONG><a name="[44b]"></a>select_colors</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, jquant2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = select_colors &rArr; median_cut &rArr; update_box
</UL>
<BR>[Calls]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_color
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;median_cut
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_box
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;finish_pass1
</UL>

<P><STRONG><a name="[44a]"></a>find_best_colors</STRONG> (Thumb, 208 bytes, Stack size 576 bytes, jquant2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = find_best_colors
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_inverse_cmap
</UL>

<P><STRONG><a name="[44d]"></a>compute_color</STRONG> (Thumb, 190 bytes, Stack size 68 bytes, jquant2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = compute_color
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select_colors
</UL>

<P><STRONG><a name="[5db]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[5cf]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[115]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[117]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
